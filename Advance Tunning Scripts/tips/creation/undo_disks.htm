<html>
	<head>
		<title>
			Disk Configuration for Rollback Segments
		</title>
		<style>
			<!-- a:hover{color:#660066;} -->
		</style>
	</head>
	<body background="../../images/bg.jpg" link="#FF6600" vlink="#FF6600" alink="#660066">
		
		<h2 align="center">
			<font color="#990000">
				Disk Configuration for<br>
				Rollback Segments
			</font>
		</h2>
		<p>
		It is not critical to optimize rollback segment writes because they are performed in the background by DBWn.
		Nevertheless, instances that perform intensive DML should have the rollback segment tablespaces configured so as to optimize these writes,
		lest they impact DBWn's ability to keep up with its workload.
		</p>
		
		<h3>
			<font color="#660066">
				Intensive DML Instances
			</font>
		</h3>
		<p>
		Rollback segment I/O is normatively write-intensive and largely logically sequential.
		If the rollback segment requirements are large enough,
		it is possible to obtain largely physically sequential I/O by placing each rollback segment in its own tablespace and on dedicated disks.
		Because Oracle automatically distributes transactions to rollback segments uniformly,
		the benefit of sequential I/O will be obtained whenever there are fewer active transactions than rollback segments.
		</p>
		<p>
		This rollback segment configuration is recommended
		for databases that perform multiple concurrent transactions that generate large amounts of undo.
		If more than one disk is needed per rollback segment, then they should be striped rather than concatenated,
		so as to improve concurrency in cases where more than one transaction must access the rollback segment at the same time.
		Each rollback segment should be created at about one quarter of the size of its tablespace, on the fastest part of its disks.
		This is intended to reduce the seek time for consistent read undo applications.
		Each rollback segments should be periodically dropped, its tablespace coalesced (if extent management is dictionary based)
		and then it should be recreated to ensure that it remains on the fastest part of its disk.
		</p>
		
		<h3>
			<font color="#660066">
				Moderate DML Instances
			</font>
		</h3>
		<p>
		For databases with more moderate rollback segment requirements, a similar rollback segment configuration is recommended,
		except that each rollback segment tablespace will contain multiple smaller rollback segments.
		One rollback segment should be created in each tablespace cyclically to maximize the probability that rollback segment writes will be sequential
		when there are fewer active transactions than rollback segment tablespaces.
		This is illustrated in the figure below.
		To ensure that the rollback segments are used in the correct order,
		you must also ensure that they are named in the correct order in the parameter file using the <em>rollback_segments</em> parameter.
		</p>
		<p align="center">
		<img src="undo.gif" alt="Rollback segment setup for sequential I/O" border="1" width="416" height="154">
		</p>
		
		
		<hr noshade align="left" width="300" size="2" color="black">
		<table cellpadding="0" cellspacing="0">
			<tr>
				<td valign="top" width="1000">
					<font size="2" color="#660066">
						<strong>
							Copyright © Ixora Pty Ltd
						</strong>
					</font>
				</td>
				<td valign="top" align="right">
					<nobr>
					<map name="email">
						<area shape="rect" coords="0, 0, 32, 21" title="Feedback" href="mailto:feedback@ixora.com.au?SUBJECT=[Tip] undo_disks.htm">
					</map>
					<img ismap usemap="#email" border="0" alt="Send Email" src="../../images/email.gif" width="32" height="21">
					<map name="home">
						<area shape="rect" coords="0, 0, 28, 28" title="Home" href="/">
					</map>
					<img ismap usemap="#home" border="0" alt="Home" src="../../images/home.gif" width="28" height="28">
					</nobr>
				</td>
			</tr>
		</table>
	</body>
</html>
