ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_MAIN_ACCOUNT DISABLE CONSTRAINT FK_MAIN_03
/
ALTER TABLE FINAL7.FM_TRANSACTION DISABLE CONSTRAINT FK_TRAN_03
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR DISABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR DISABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR DISABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_05
/

ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_07
/

ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FM_ACTY_VALUE DISABLE CONSTRAINT FK_AVAL_01
/
ALTER TABLE FINAL7.FM_MAIN_ACCOUNT DISABLE CONSTRAINT FK_MAIN_02
/
ALTER TABLE FINAL7.FM_MAIN_ACCOUNT DISABLE CONSTRAINT FK_MAIN_01
/

ALTER TABLE FINAL7.FM_ACNT_ANLY DISABLE CONSTRAINT FK_AANLY_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY DISABLE CONSTRAINT FK_AANLY_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_03
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_04
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_04
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_03
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_04
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_03
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_03
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_04
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_04
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_07
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_08
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_07
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_08
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_04
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_05
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_04
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_05
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_07
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_08
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_07
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_08
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_06
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_07
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_06
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_07
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_04
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_05
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_04
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_06
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_06
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_11
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_10
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_11
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_10
/
ALTER TABLE FINAL7.FM_ANLY_LEVEL DISABLE CONSTRAINT FK_ALM_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL DISABLE CONSTRAINT FK_AAL_01
/
ALTER TABLE FINAL7.FM_ANLY_LEVEL DISABLE CONSTRAINT FK_ALM_02
/
ALTER TABLE FINAL7.FM_ANLY_LEVEL DISABLE CONSTRAINT FK_ALM_02
/

ALTER TABLE FINAL7.FM_COA_LEVEL DISABLE CONSTRAINT FK_LVL_01
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT DISABLE CONSTRAINT FK_CAF_01
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT DISABLE CONSTRAINT FK_CAF_01
/
ALTER TABLE FINAL7.FM_COA_LEVEL DISABLE CONSTRAINT FK_LVL_02
/
ALTER TABLE FINAL7.FM_COA_LEVEL DISABLE CONSTRAINT FK_LVL_02
/

ALTER TABLE FINAL7.FM_ACNT_COMP DISABLE CONSTRAINT FK_ACOMP_01
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR DISABLE CONSTRAINT FK_CAY_01
/
ALTER TABLE FINAL7.FM_DIVISION DISABLE CONSTRAINT FK_DIVN_01
/
ALTER TABLE FINAL7.FM_RATIO_VALUE DISABLE CONSTRAINT FK_RV_02
/
ALTER TABLE FINAL7.FM_SUB_COMP DISABLE CONSTRAINT FK_SCOMP_02
/
ALTER TABLE FINAL7.FM_TRAN_DOC_NO DISABLE CONSTRAINT FK_TDOC_02
/
ALTER TABLE FINAL7.FS_PROC_HEADER DISABLE CONSTRAINT FK_PHS_01
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_04
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_02
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE DISABLE CONSTRAINT FK_BCT_01
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_02
/
ALTER TABLE FINAL7.FT_CASH_RIMB DISABLE CONSTRAINT FK_RIMB_01
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_01
/
ALTER TABLE FINAL7.FT_CORRECTION_JV DISABLE CONSTRAINT FK_CJV_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_03
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_03
/
ALTER TABLE FINAL7.FT_FIXED_JV DISABLE CONSTRAINT FK_FJV_01
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_04
/
ALTER TABLE FINAL7.FT_PDC_OS DISABLE CONSTRAINT FK_POS_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_03
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_03
/
ALTER TABLE FINAL7.FT_REVERSAL_JV DISABLE CONSTRAINT FK_RJV_01
/
ALTER TABLE FINAL7.FT_SUPP_BILL_HEADER DISABLE CONSTRAINT FK_BILL_01
/
ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS DISABLE CONSTRAINT FK_TAS_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_04
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_03
/
ALTER TABLE FINAL7.FM_ACNT_CURR DISABLE CONSTRAINT FK_ACURR_01
/
ALTER TABLE FINAL7.FM_EXCHANGE_RATE DISABLE CONSTRAINT FK_CER_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_03
/
ALTER TABLE FINAL7.FM_SUB_CURR DISABLE CONSTRAINT FK_SCURR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_03
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_03
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_08
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_09
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_06
/
ALTER TABLE FINAL7.FT_PDC_OS DISABLE CONSTRAINT FK_POS_03
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_06
/
ALTER TABLE FINAL7.FT_SUPP_BILL_HEADER DISABLE CONSTRAINT FK_BILL_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_09
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FM_DEPARTMENT DISABLE CONSTRAINT FK_DEPT_01
/
ALTER TABLE FINAL7.FM_DEPARTMENT DISABLE CONSTRAINT FK_DEPT_01
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_05
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_02
/
ALTER TABLE FINAL7.FM_ACNT_COMP DISABLE CONSTRAINT FK_ACOMP_02
/
ALTER TABLE FINAL7.FM_ACNT_CURR DISABLE CONSTRAINT FK_ACURR_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK DISABLE CONSTRAINT FK_ALS_03
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT DISABLE CONSTRAINT FK_CAF_02
/
ALTER TABLE FINAL7.FM_COMPANY DISABLE CONSTRAINT FK_COMP_01
/
ALTER TABLE FINAL7.FM_CUSTOMER DISABLE CONSTRAINT FK_CUST_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_05
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_02
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_07
/
ALTER TABLE FINAL7.FM_MAIN_SUB DISABLE CONSTRAINT FK_MS_01
/
ALTER TABLE FINAL7.FM_SUPPLIER DISABLE CONSTRAINT FK_SUPP_01
/
ALTER TABLE FINAL7.FM_TRANSACTION DISABLE CONSTRAINT FK_TRAN_02
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_01
/
ALTER TABLE FINAL7.FT_CASH_RIMB DISABLE CONSTRAINT FK_RIMB_03
/
ALTER TABLE FINAL7.FT_CASH_RIMB DISABLE CONSTRAINT FK_RIMB_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_04
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_03
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_07
/
ALTER TABLE FINAL7.FM_ACNT_ANLY DISABLE CONSTRAINT FK_AANLY_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY DISABLE CONSTRAINT FK_AANLY_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK DISABLE CONSTRAINT FK_ALS_01
/
ALTER TABLE FINAL7.FM_ACNT_LINK DISABLE CONSTRAINT FK_ALS_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK DISABLE CONSTRAINT FK_ALS_01
/
ALTER TABLE FINAL7.FM_ACNT_LINK DISABLE CONSTRAINT FK_ALS_02
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_04
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_06
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_04
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK DISABLE CONSTRAINT FK_FL_06
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_02
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_02
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_02
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET DISABLE CONSTRAINT FK_MBUD_PRV_02
/
ALTER TABLE FINAL7.FM_TRANSACTION DISABLE CONSTRAINT FK_TRAN_01
/
ALTER TABLE FINAL7.FM_TRANSACTION DISABLE CONSTRAINT FK_TRAN_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_02
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET DISABLE CONSTRAINT FK_YBUD_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_01
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_CUR_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_02
/
ALTER TABLE FINAL7.FS_PROC_DETAIL DISABLE CONSTRAINT FK_PDS_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_01
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL DISABLE CONSTRAINT FK_ABAL_PRV_01
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_06
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_06
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_03
/
ALTER TABLE FINAL7.FT_CASH_DISB DISABLE CONSTRAINT FK_DISB_03
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_05
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_05
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_02
/
ALTER TABLE FINAL7.FT_PDC DISABLE CONSTRAINT FK_PDC_02
/
ALTER TABLE FINAL7.FT_PDC_OS DISABLE CONSTRAINT FK_POS_02
/
ALTER TABLE FINAL7.FT_PDC_OS DISABLE CONSTRAINT FK_POS_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_05
/





ALTER TABLE FINAL7.FM_SUB_COMP DISABLE CONSTRAINT FK_SCOMP_01
/
ALTER TABLE FINAL7.FM_SUB_CURR DISABLE CONSTRAINT FK_SCURR_01
/




ALTER TABLE FINAL7.FM_NARRATION_DEFN DISABLE CONSTRAINT FK_NARR_01
/
ALTER TABLE FINAL7.FM_TRAN_APPR_GROUP DISABLE CONSTRAINT FK_TAG_01
/
ALTER TABLE FINAL7.FM_TRAN_APPR_LEVEL DISABLE CONSTRAINT FK_ALVL_01
/
ALTER TABLE FINAL7.FM_TRAN_DOC_NO DISABLE CONSTRAINT FK_TDOC_01
/
ALTER TABLE FINAL7.FS_PROC_HEADER DISABLE CONSTRAINT FK_PHS_02
/
ALTER TABLE FINAL7.FS_PROC_HEADER DISABLE CONSTRAINT FK_PHS_03
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_05
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV DISABLE CONSTRAINT FK_AJV_03
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE DISABLE CONSTRAINT FK_BCT_02
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE DISABLE CONSTRAINT FK_BCT_03
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY DISABLE CONSTRAINT FK_CS_03
/
ALTER TABLE FINAL7.FT_CORRECTION_JV DISABLE CONSTRAINT FK_CJV_03
/
ALTER TABLE FINAL7.FT_CORRECTION_JV DISABLE CONSTRAINT FK_CJV_04
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_CUR_04
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER DISABLE CONSTRAINT FK_TH_CUR_04
/
ALTER TABLE FINAL7.FT_FIXED_JV DISABLE CONSTRAINT FK_FJV_02
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_02
/
ALTER TABLE FINAL7.FT_OS DISABLE CONSTRAINT FK_OST_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_PRV_04
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER DISABLE CONSTRAINT FK_TH_PRV_04
/
ALTER TABLE FINAL7.FT_REVERSAL_JV DISABLE CONSTRAINT FK_RJV_02
/
ALTER TABLE FINAL7.FT_REVERSAL_JV DISABLE CONSTRAINT FK_RJV_03
/
ALTER TABLE FINAL7.FT_SUPP_DETAIL DISABLE CONSTRAINT FK_SDET_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS DISABLE CONSTRAINT FK_OST_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL DISABLE CONSTRAINT FK_TD_UNP_04
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER DISABLE CONSTRAINT FK_TH_UNP_04
/

ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS DISABLE CONSTRAINT FK_TAS_02
/
ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS DISABLE CONSTRAINT FK_TAS_02
/
ALTER TABLE FINAL7.FM_RATIO_VALUE DISABLE CONSTRAINT FK_RV_01
/
/
CREATE TABLE BUGS ( 
  B_SYS_ID        VARCHAR2 (3), 
  B_PROG_ID       VARCHAR2 (10), 
  B_ERROR_DESC    VARCHAR2 (2000), 
  B_PRIORITY      VARCHAR2 (3), 
  B_TYPE          VARCHAR2 (3), 
  B_STATUS        VARCHAR2 (3), 
  B_REMARKS       VARCHAR2 (2000), 
  B_ERROR_LOG_DT  DATE, 
  B_CORRECTED_DT  DATE ) 
/

/
CREATE TABLE BUGS_PARAMETER ( 
  BP_TYPE  VARCHAR2 (3), 
  BP_CODE  VARCHAR2 (3), 
  BP_DESC  VARCHAR2 (30) ) 
/

/
CREATE TABLE DUM_SUB_COMP ( 
  SCOMP_COMP_CODE      VARCHAR2 (3), 
  SCOMP_SUB_ACNT_CODE  VARCHAR2 (6), 
  SCOMP_CR_UID         VARCHAR2 (10), 
  SCOMP_CR_DT          DATE ) 
/

/
CREATE TABLE FH_ACNT_ANLY_HIST ( 
  AANLY_ANLY_HEAD_NO        NUMBER (1), 
  AANLY_ANLY_CODE           VARCHAR2 (6), 
  AANLY_MAIN_ACNT_CODE      VARCHAR2 (6), 
  AANLY_SUB_ACNT_CODE       VARCHAR2 (6), 
  AANLY_ANLY_NAME           VARCHAR2 (30), 
  AANLY_ANLY_SHORT_NAME     VARCHAR2 (15), 
  AANLY_CR_UID              VARCHAR2 (10), 
  AANLY_CR_DT               DATE, 
  AANLY_FRZ_FLAG            VARCHAR2 (1), 
  AANLY_BL_ANLY_NAME        VARCHAR2 (30), 
  AANLY_BL_ANLY_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_ACNT_ANLY_LEVEL_HIST ( 
  AAL_HEAD_NO         NUMBER (1), 
  AAL_FORMAT_ID       NUMBER (2), 
  AAL_LVL_CODE        NUMBER (6), 
  AAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  AAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  AAL_ANLY_CODE       VARCHAR2 (6), 
  AAL_CR_UID          VARCHAR2 (10), 
  AAL_CR_DT           DATE ) 
/

/
CREATE TABLE FH_ACNT_CATG_HIST ( 
  CATG_CODE        VARCHAR2 (2), 
  CATG_NAME        VARCHAR2 (30), 
  CATG_SHORT_NAME  VARCHAR2 (15), 
  CATG_CR_UID      VARCHAR2 (10), 
  CATG_CR_DT       DATE, 
  CATG_FRZ_FLAG    VARCHAR2 (1) ) 
/

/
CREATE TABLE FH_ACNT_COMP_HIST ( 
  ACOMP_COMP_CODE       VARCHAR2 (3), 
  ACOMP_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ACOMP_SUB_ACNT_CODE   VARCHAR2 (6), 
  ACOMP_CR_UID          VARCHAR2 (10), 
  ACOMP_CR_DT           DATE ) 
/

/
CREATE TABLE FH_ACNT_CURR_HIST ( 
  ACURR_CURR_CODE       VARCHAR2 (3), 
  ACURR_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ACURR_SUB_ACNT_CODE   VARCHAR2 (6), 
  ACURR_CR_UID          VARCHAR2 (10), 
  ACURR_CR_DT           DATE ) 
/

/
CREATE TABLE FH_ACNT_LINK_HIST ( 
  ALS_BASE_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ALS_BASE_SUB_ACNT_CODE   VARCHAR2 (6), 
  ALS_LINK_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ALS_LINK_SUB_ACNT_CODE   VARCHAR2 (6), 
  ALS_CR_UID               VARCHAR2 (10), 
  ALS_CR_DT                DATE ) 
/

/
CREATE TABLE FH_ACNT_PERIOD_HIST ( 
  APER_COMP_CODE  VARCHAR2 (3), 
  APER_ACNT_YEAR  NUMBER (2), 
  APER_CAL_YEAR   NUMBER (4), 
  APER_CAL_MONTH  NUMBER (2), 
  APER_FRM_DT     DATE, 
  APER_TO_DT      DATE, 
  APER_QTLY       NUMBER (2), 
  APER_CLO_UID    VARCHAR2 (10), 
  APER_CLO_DT     DATE, 
  APER_CR_UID     VARCHAR2 (10), 
  APER_CR_DT      DATE ) 
/

/
CREATE TABLE FH_ACTIVITY_HIST ( 
  ACTY_CODE      VARCHAR2 (6), 
  ACTY_NAME      VARCHAR2 (30), 
  ACTY_CR_UID    VARCHAR2 (10), 
  ACTY_CR_DT     DATE, 
  ACTY_FRZ_FLAG  VARCHAR2 (1), 
  ACTY_BL_NAME   VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_ACTY_VALUE_HIST ( 
  AVAL_ACTY_CODE      VARCHAR2 (6), 
  AVAL_CODE           VARCHAR2 (6), 
  AVAL_VALUE_NAME     VARCHAR2 (30), 
  AVAL_SHORT_NAME     VARCHAR2 (15), 
  AVAL_CR_UID         VARCHAR2 (10), 
  AVAL_CR_DT          DATE, 
  AVAL_FRZ_FLAG       VARCHAR2 (1), 
  AVAL_BL_VALUE_NAME  VARCHAR2 (30), 
  AVAL_BL_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_ANALYSIS_HIST ( 
  ANLY_HEAD_NO        NUMBER (1), 
  ANLY_CODE           VARCHAR2 (6), 
  ANLY_NAME           VARCHAR2 (30), 
  ANLY_SHORT_NAME     VARCHAR2 (15), 
  ANLY_DESC           VARCHAR2 (2000), 
  ANLY_CR_UID         VARCHAR2 (10), 
  ANLY_CR_DT          DATE, 
  ANLY_FRZ_FLAG       VARCHAR2 (1), 
  ANLY_BL_NAME        VARCHAR2 (30), 
  ANLY_BL_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_ANLY_ACNT_FORMAT_HIST ( 
  AAF_HEAD_NO         NUMBER (1), 
  AAF_FORMAT_ID       NUMBER (2), 
  AAF_ANLY_CODE       VARCHAR2 (6), 
  AAF_LVL_CODE        NUMBER (6), 
  AAF_MAIN_ACNT_CODE  VARCHAR2 (6), 
  AAF_SUB_ACNT_CODE   VARCHAR2 (6), 
  AAF_CR_UID          VARCHAR2 (10), 
  AAF_CR_DT           DATE ) 
/

/
CREATE TABLE FH_ANLY_FORMAT_HIST ( 
  AFM_HEAD_NO         NUMBER (1), 
  AFM_FORMAT_ID       NUMBER (2), 
  AFM_FORMAT_NAME     VARCHAR2 (30), 
  AFM_CR_UID          VARCHAR2 (10), 
  AFM_CR_DT           DATE, 
  AFM_FRZ_FLAG        VARCHAR2 (1), 
  AFM_BL_FORMAT_NAME  VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_ANLY_LEVEL_HIST ( 
  ALM_HEAD_NO      NUMBER (1), 
  ALM_FORMAT_ID    NUMBER (2), 
  ALM_LVL_CODE     NUMBER (6), 
  ALM_LVL_NAME     VARCHAR2 (30), 
  ALM_PARENT_CODE  NUMBER (6), 
  ALM_CR_UID       VARCHAR2 (10), 
  ALM_CR_DT        DATE, 
  ALM_FRZ_FLAG     VARCHAR2 (1), 
  ALM_BL_LVL_NAME  VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_COA_ACNT_FORMAT_HIST ( 
  CAF_FORMAT_ID       NUMBER (2), 
  CAF_LVL_CODE        NUMBER (6), 
  CAF_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CAF_CR_UID          VARCHAR2 (10), 
  CAF_CR_DT           DATE ) 
/

/
CREATE TABLE FH_COA_FORMAT_HIST ( 
  COA_FORMAT_ID       NUMBER (2), 
  COA_FORMAT_NAME     VARCHAR2 (30), 
  COA_CR_UID          VARCHAR2 (10), 
  COA_CR_DT           DATE, 
  COA_FRZ_FLAG        VARCHAR2 (1), 
  COA_BL_FORMAT_NAME  VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_COA_LEVEL_HIST ( 
  LVL_FORMAT_ID    NUMBER (2), 
  LVL_CODE         NUMBER (6), 
  LVL_NAME         VARCHAR2 (30), 
  LVL_PARENT_CODE  NUMBER (6), 
  LVL_ACNT_TYPE    VARCHAR2 (1), 
  LVL_TOTAL_FLAG   VARCHAR2 (1), 
  LVL_NOTE_NO      VARCHAR2 (3), 
  LVL_SEQ_NO       NUMBER (6), 
  LVL_CR_UID       VARCHAR2 (10), 
  LVL_CR_DT        DATE, 
  LVL_FRZ_FLAG     VARCHAR2 (1), 
  LVL_BL_NAME      VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_COMPANY_HIST ( 
  COMP_CODE            VARCHAR2 (3), 
  COMP_NAME            VARCHAR2 (30), 
  COMP_SHORT_NAME      VARCHAR2 (15), 
  COMP_CTL_ACNT_CODE   VARCHAR2 (6), 
  COMP_HEADER          VARCHAR2 (5), 
  COMP_ADD_1           VARCHAR2 (30), 
  COMP_ADD_2           VARCHAR2 (30), 
  COMP_ADD_3           VARCHAR2 (30), 
  COMP_DFLT_DIVN_CODE  VARCHAR2 (6), 
  COMP_DFLT_DEPT_CODE  VARCHAR2 (6), 
  COMP_CR_UID          VARCHAR2 (10), 
  COMP_CR_DT           DATE, 
  COMP_FRZ_FLAG        VARCHAR2 (1), 
  COMP_BL_NAME         VARCHAR2 (30), 
  COMP_BL_SHORT_NAME   VARCHAR2 (15), 
  COMP_BL_ADD_1        VARCHAR2 (30), 
  COMP_BL_ADD_2        VARCHAR2 (30), 
  COMP_BL_ADD_3        VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_CURRENCY_HIST ( 
  CURR_CODE          VARCHAR2 (3), 
  CURR_NAME          VARCHAR2 (15), 
  CURR_DECIMAL       NUMBER (1), 
  CURR_UNIT_NAME     VARCHAR2 (15), 
  CURR_CR_UID        VARCHAR2 (10), 
  CURR_CR_DT         DATE, 
  CURR_FRZ_FLAG      VARCHAR2 (1), 
  CURR_BL_NAME       VARCHAR2 (15), 
  CURR_BL_UNIT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_CUSTOMER_HIST ( 
  CUST_CODE            VARCHAR2 (6), 
  CUST_NAME            VARCHAR2 (60), 
  CUST_SHORT_NAME      VARCHAR2 (15), 
  CUST_ADD_1           VARCHAR2 (30), 
  CUST_ADD_2           VARCHAR2 (30), 
  CUST_ADD_3           VARCHAR2 (30), 
  CUST_COUNTRY         VARCHAR2 (15), 
  CUST_PHONE           VARCHAR2 (15), 
  CUST_TELEX_FAX       VARCHAR2 (15), 
  CUST_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CUST_CR_LMT_AMT      NUMBER (14,3), 
  CUST_CR_LMT_DAYS     NUMBER (3), 
  CUST_CONTACT         VARCHAR2 (15), 
  CUST_AREA            VARCHAR2 (15), 
  CUST_SM              VARCHAR2 (15), 
  CUST_DESC            VARCHAR2 (2000), 
  CUST_CR_UID          VARCHAR2 (10), 
  CUST_CR_DT           DATE, 
  CUST_FRZ_FLAG        VARCHAR2 (1), 
  CUST_FAX             VARCHAR2 (15), 
  CUST_BL_NAME         VARCHAR2 (60), 
  CUST_BL_SHORT_NAME   VARCHAR2 (15), 
  CUST_BL_ADD_1        VARCHAR2 (30), 
  CUST_BL_ADD_2        VARCHAR2 (30), 
  CUST_BL_ADD_3        VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_DEPARTMENT_HIST ( 
  DEPT_COMP_CODE      VARCHAR2 (3), 
  DEPT_DIVN_CODE      VARCHAR2 (6), 
  DEPT_CODE           VARCHAR2 (6), 
  DEPT_NAME           VARCHAR2 (30), 
  DEPT_SHORT_NAME     VARCHAR2 (15), 
  DEPT_HEADER         VARCHAR2 (5), 
  DEPT_INCHARGE       VARCHAR2 (15), 
  DEPT_CR_UID         VARCHAR2 (10), 
  DEPT_CR_DT          DATE, 
  DEPT_FRZ_FLAG       VARCHAR2 (1), 
  DEPT_BL_NAME        VARCHAR2 (30), 
  DEPT_BL_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_DIVISION_HIST ( 
  DIVN_COMP_CODE      VARCHAR2 (3), 
  DIVN_CODE           VARCHAR2 (6), 
  DIVN_NAME           VARCHAR2 (30), 
  DIVN_SHORT_NAME     VARCHAR2 (15), 
  DIVN_HEADER         VARCHAR2 (5), 
  DIVN_INCHARGE       VARCHAR2 (15), 
  DIVN_CR_UID         VARCHAR2 (10), 
  DIVN_CR_DT          DATE, 
  DIVN_FRZ_FLAG       VARCHAR2 (1), 
  DIVN_BL_NAME        VARCHAR2 (30), 
  DIVN_BL_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_EXCHANGE_RATE_HIST ( 
  CER_CURR_CODE       VARCHAR2 (3), 
  CER_EFF_FRM_DT      DATE, 
  CER_EFF_TO_DT       DATE, 
  CER_BUY_EXGE_RATE   NUMBER (12,8), 
  CER_SELL_EXGE_RATE  NUMBER (12,8), 
  CER_CR_UID          VARCHAR2 (10), 
  CER_CR_DT           DATE ) 
/

/
CREATE TABLE FH_MAIN_ACCOUNT_HIST ( 
  MAIN_ACNT_CODE           VARCHAR2 (6), 
  MAIN_ACNT_NAME           VARCHAR2 (60), 
  MAIN_ACNT_SHORT_NAME     VARCHAR2 (15), 
  MAIN_ACNT_CATG           VARCHAR2 (2), 
  MAIN_CTL_ACNT_FLAG       VARCHAR2 (1), 
  MAIN_ACTY_CODE_1         VARCHAR2 (6), 
  MAIN_ACTY_CODE_2         VARCHAR2 (6), 
  MAIN_ACNT_TYPE           VARCHAR2 (1), 
  MAIN_OPEN_ENTRY_FLAG     VARCHAR2 (1), 
  MAIN_DESC                VARCHAR2 (2000), 
  MAIN_CR_UID              VARCHAR2 (10), 
  MAIN_CR_DT               DATE, 
  MAIN_FRZ_FLAG            VARCHAR2 (1), 
  MAIN_BL_ACNT_NAME        VARCHAR2 (60), 
  MAIN_BL_ACNT_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_MAIN_SUB_HIST ( 
  MS_MAIN_ACNT_CODE          VARCHAR2 (6), 
  MS_SUB_ACNT_CODE           VARCHAR2 (6), 
  MS_SUB_ACNT_NAME           VARCHAR2 (60), 
  MS_SUB_ACNT_SHORT_NAME     VARCHAR2 (15), 
  MS_CR_UID                  VARCHAR2 (10), 
  MS_CR_DT                   DATE, 
  MS_BL_SUB_ACNT_NAME        VARCHAR2 (60), 
  MS_BL_SUB_ACNT_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_NARRATION_DEFN_HIST ( 
  NARR_TRAN_CODE  VARCHAR2 (3), 
  NARR_SEQ_NO     NUMBER (3), 
  NARR_PROMPT     VARCHAR2 (15), 
  NARR_TYPE       VARCHAR2 (1), 
  NARR_LENGTH     NUMBER (2), 
  NARR_CR_UID     VARCHAR2 (10), 
  NARR_CR_DT      DATE ) 
/

/
CREATE TABLE FH_RATIO_VALUE_HIST ( 
  RV_RATIO_ID   VARCHAR2 (10), 
  RV_RESULT     NUMBER (5,2), 
  RV_COMP_CODE  VARCHAR2 (3), 
  RV_CAL_YEAR   NUMBER (4), 
  RV_CAL_MONTH  NUMBER (2), 
  RV_CR_UID     VARCHAR2 (10), 
  RV_CR_DT      DATE ) 
/

/
CREATE TABLE FH_SUB_ACCOUNT_HIST ( 
  SUB_ACNT_CODE           VARCHAR2 (6), 
  SUB_ACNT_NAME           VARCHAR2 (60), 
  SUB_ACNT_SHORT_NAME     VARCHAR2 (15), 
  SUB_DESC                VARCHAR2 (2000), 
  SUB_CR_UID              VARCHAR2 (10), 
  SUB_CR_DT               DATE, 
  SUB_FRZ_FLAG            VARCHAR2 (1), 
  SUB_BL_ACNT_NAME        VARCHAR2 (60), 
  SUB_BL_ACNT_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FH_SUB_COMP_HIST ( 
  SCOMP_COMP_CODE      VARCHAR2 (3), 
  SCOMP_SUB_ACNT_CODE  VARCHAR2 (6), 
  SCOMP_CR_UID         VARCHAR2 (10), 
  SCOMP_CR_DT          DATE ) 
/

/
CREATE TABLE FH_SUB_CURR_HIST ( 
  SCURR_CURR_CODE      VARCHAR2 (3), 
  SCURR_SUB_ACNT_CODE  VARCHAR2 (6), 
  SCURR_CR_UID         VARCHAR2 (10), 
  SCURR_CR_DT          DATE ) 
/

/
CREATE TABLE FH_SUPPLIER_HIST ( 
  SUPP_CODE            VARCHAR2 (6), 
  SUPP_NAME            VARCHAR2 (60), 
  SUPP_SHORT_NAME      VARCHAR2 (15), 
  SUPP_ADD_1           VARCHAR2 (30), 
  SUPP_ADD_2           VARCHAR2 (30), 
  SUPP_ADD_3           VARCHAR2 (30), 
  SUPP_COUNTRY         VARCHAR2 (15), 
  SUPP_PHONE           VARCHAR2 (15), 
  SUPP_TELEX_FAX       VARCHAR2 (15), 
  SUPP_MAIN_ACNT_CODE  VARCHAR2 (6), 
  SUPP_CR_LMT_AMT      NUMBER (14,3), 
  SUPP_CR_LMT_DAYS     NUMBER (3), 
  SUPP_CONTACT         VARCHAR2 (15), 
  SUPP_AREA            VARCHAR2 (15), 
  SUPP_SM              VARCHAR2 (15), 
  SUPP_CATG            VARCHAR2 (15), 
  SUPP_MODE_PYMT       VARCHAR2 (1), 
  SUPP_BANK_ACNT       VARCHAR2 (15), 
  SUPP_BANK_NAME       VARCHAR2 (30), 
  SUPP_BANK_BRANCH     VARCHAR2 (15), 
  SUPP_DESC            VARCHAR2 (2000), 
  SUPP_CR_UID          VARCHAR2 (10), 
  SUPP_CR_DT           DATE, 
  SUPP_FRZ_FLAG        VARCHAR2 (1), 
  SUPP_FAX             VARCHAR2 (15), 
  SUPP_BANK_ADD1       VARCHAR2 (30), 
  SUPP_BANK_ADD2       VARCHAR2 (30), 
  SUPP_BANK_ADD3       VARCHAR2 (30), 
  SUPP_BL_NAME         VARCHAR2 (60), 
  SUPP_BL_SHORT_NAME   VARCHAR2 (15), 
  SUPP_BL_ADD_1        VARCHAR2 (30), 
  SUPP_BL_ADD_2        VARCHAR2 (30), 
  SUPP_BL_ADD_3        VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_TRANSACTION_HIST ( 
  TRAN_CODE                 VARCHAR2 (3), 
  TRAN_TYPE                 VARCHAR2 (1), 
  TRAN_NAME                 VARCHAR2 (30), 
  TRAN_DR_HEADER            VARCHAR2 (10), 
  TRAN_CR_HEADER            VARCHAR2 (10), 
  TRAN_CASH_BANK_FLAG       VARCHAR2 (1), 
  TRAN_DFLT_MAIN_ACNT_CODE  VARCHAR2 (6), 
  TRAN_DFLT_SUB_ACNT_CODE   VARCHAR2 (6), 
  TRAN_MODE_POSTING         VARCHAR2 (1), 
  TRAN_ACNT_CATG            VARCHAR2 (2), 
  TRAN_MIN_AMT              NUMBER (14,3), 
  TRAN_MAX_AMT              NUMBER (14,3), 
  TRAN_SELF_REV             VARCHAR2 (1), 
  TRAN_EXGE_RATE_APPLY      VARCHAR2 (1), 
  TRAN_AUTO_PRINT_FLAG      VARCHAR2 (1), 
  TRAN_CTL_TOTAL            VARCHAR2 (1), 
  TRAN_DOC_NO_GENERATE      VARCHAR2 (1), 
  TRAN_PRINT_NARR_FLAG      VARCHAR2 (1), 
  TRAN_CR_UID               VARCHAR2 (10), 
  TRAN_CR_DT                DATE, 
  TRAN_FRZ_FLAG             VARCHAR2 (1), 
  TRAN_BL_NAME              VARCHAR2 (30) ) 
/

/
CREATE TABLE FH_TRAN_APPR_GROUP_HIST ( 
  TAG_TRAN_CODE   VARCHAR2 (3), 
  TAG_GROUP_CODE  VARCHAR2 (6), 
  TAG_CR_UID      VARCHAR2 (10), 
  TAG_CR_DT       DATE ) 
/

/
CREATE TABLE FH_TRAN_APPR_LEVEL_HIST ( 
  ALVL_TRAN_CODE    VARCHAR2 (3), 
  ALVL_USR_LVL      NUMBER (2), 
  ALVL_USR_AMT_FRM  NUMBER (14,3), 
  ALVL_USR_AMT_TO   NUMBER (14,3), 
  ALVL_CR_UID       VARCHAR2 (10), 
  ALVL_CR_DT        DATE ) 
/

/
CREATE TABLE FH_VALID_COMB_HIST ( 
  VCM_SEQ_NO               NUMBER (8), 
  VCM_LOW_COMP_CODE        VARCHAR2 (3), 
  VCM_LOW_MAIN_ACNT_CODE   VARCHAR2 (6), 
  VCM_LOW_SUB_ACNT_CODE    VARCHAR2 (6), 
  VCM_LOW_DIVN_CODE        VARCHAR2 (6), 
  VCM_LOW_DEPT_CODE        VARCHAR2 (6), 
  VCM_LOW_ANLY_CODE_1      VARCHAR2 (6), 
  VCM_LOW_ANLY_CODE_2      VARCHAR2 (6), 
  VCM_HIGH_COMP_CODE       VARCHAR2 (3), 
  VCM_HIGH_MAIN_ACNT_CODE  VARCHAR2 (6), 
  VCM_HIGH_SUB_ACNT_CODE   VARCHAR2 (6), 
  VCM_HIGH_DIVN_CODE       VARCHAR2 (6), 
  VCM_HIGH_DEPT_CODE       VARCHAR2 (6), 
  VCM_HIGH_ANLY_CODE_1     VARCHAR2 (6), 
  VCM_HIGH_ANLY_CODE_2     VARCHAR2 (6), 
  VCM_IE_CODE              VARCHAR2 (1), 
  VCM_ERROR_MSG            VARCHAR2 (60), 
  VCM_CR_UID               VARCHAR2 (10), 
  VCM_CR_DT                DATE ) 
/

/
CREATE TABLE FM_ACCRUAL_EXPENSE ( 
  ACEX_COMP_CODE              VARCHAR2 (3)  NOT NULL, 
  ACEX_ACC_MAIN_ACNT_CODE     VARCHAR2 (6)  NOT NULL, 
  ACEX_EXP_MAIN_ACNT_CODE     VARCHAR2 (6), 
  ACEX_EXP_SUB_ACNT_CODE      VARCHAR2 (6), 
  ACEX_EXP_DIVN_CODE          VARCHAR2 (6), 
  ACEX_EXP_DEPT_CODE          VARCHAR2 (6), 
  ACEX_EXP_HEAD_NO_1          NUMBER (1), 
  ACEX_EXP_ANLY_CODE_1        VARCHAR2 (6), 
  ACEX_EXP_HEAD_NO_2          NUMBER (1), 
  ACEX_EXP_ANLY_CODE_2        VARCHAR2 (6), 
  ACEX_EXP_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  ACEX_EXP_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  ACEX_VAR_MAIN_ACNT_CODE     VARCHAR2 (6), 
  ACEX_VAR_SUB_ACNT_CODE      VARCHAR2 (6), 
  ACEX_VAR_DIVN_CODE          VARCHAR2 (6), 
  ACEX_VAR_DEPT_CODE          VARCHAR2 (6), 
  ACEX_VAR_HEAD_NO_1          VARCHAR2 (1), 
  ACEX_VAR_ANLY_CODE_1        VARCHAR2 (6), 
  ACEX_VAR_HEAD_NO_2          VARCHAR2 (1), 
  ACEX_VAR_ANLY_CODE_2        VARCHAR2 (6), 
  ACEX_VAR_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  ACEX_VAR_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  ACEX_CR_UID                 VARCHAR2 (10), 
  ACEX_CR_DT                  DATE, 
  CONSTRAINT PK_ACEX_01
  PRIMARY KEY ( ACEX_COMP_CODE, ACEX_ACC_MAIN_ACNT_CODE ) ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
FIN_C0021016 CHECK  ( ACEX_VAR_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
SYS_C005454 CHECK  ( ACEX_ACC_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
SYS_C005455 CHECK  ( ACEX_EXP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
SYS_C005456 CHECK  ( ACEX_VAR_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
FIN_C0021014 CHECK  ( ACEX_ACC_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACCRUAL_EXPENSE ADD CONSTRAINT 
FIN_C0021015 CHECK  ( ACEX_EXP_MAIN_ACNT_CODE IS NOT NULL  ) 
/



/
CREATE TABLE FM_ACNT_ANLY ( 
  AANLY_ANLY_HEAD_NO        NUMBER (1), 
  AANLY_ANLY_CODE           VARCHAR2 (6), 
  AANLY_MAIN_ACNT_CODE      VARCHAR2 (6), 
  AANLY_SUB_ACNT_CODE       VARCHAR2 (6), 
  AANLY_ANLY_NAME           VARCHAR2 (30), 
  AANLY_ANLY_SHORT_NAME     VARCHAR2 (15), 
  AANLY_CR_UID              VARCHAR2 (10)  DEFAULT 'TEST1', 
  AANLY_CR_DT               DATE          DEFAULT SYSDATE, 
  AANLY_FRZ_FLAG            VARCHAR2 (1)  DEFAULT 'N', 
  AANLY_BL_ANLY_NAME        VARCHAR2 (30), 
  AANLY_BL_ANLY_SHORT_NAME  VARCHAR2 (15) ) 
/

ALTER TABLE FM_ACNT_ANLY ADD  CONSTRAINT PK_AANLY_01
 UNIQUE (AANLY_ANLY_HEAD_NO, AANLY_ANLY_CODE, AANLY_MAIN_ACNT_CODE, AANLY_SUB_ACNT_CODE) 
/



ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
FIN_C0018268 CHECK  ( AANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
FIN_C0018269 CHECK  ( AANLY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_CHK_01 CHECK  (  (AANLY_MAIN_ACNT_CODE   IS   NULL   AND AANLY_SUB_ACNT_CODE  IS  NULL)  OR  (AANLY_MAIN_ACNT_CODE  IS   NOT   NULL   AND AANLY_SUB_ACNT_CODE IS NULL)  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_NN_01 CHECK  ( AANLY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_NN_02 CHECK  ( AANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_NN_03 CHECK  ( AANLY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_NN_04 CHECK  ( AANLY_ANLY_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
AANLY_NN_05 CHECK  ( AANLY_ANLY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
SYS_C005466 CHECK  ( AANLY_ANLY_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
SYS_C005467 CHECK  ( AANLY_ANLY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
SYS_C005468 CHECK  ( AANLY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
SYS_C005469 CHECK  ( AANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
SYS_C005470 CHECK  ( AANLY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
FIN_C0018265 CHECK  ( AANLY_ANLY_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
FIN_C0018266 CHECK  ( AANLY_ANLY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY ADD CONSTRAINT 
FIN_C0018267 CHECK  ( AANLY_CR_UID IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ACNT_ANLY
BEFORE INSERT OR UPDATE OR DELETE ON FM_ACNT_ANLY
FOR EACH ROW
DECLARE
 NEW_AANLY_ANLY_HEAD_NO    NUMBER(1) := NULL;
 NEW_AANLY_ANLY_CODE       VARCHAR2(1) := NULL;
 NEW_AANLY_MAIN_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_AANLY_SUB_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_AANLY_ANLY_NAME       VARCHAR2(1) := NULL;
 NEW_AANLY_ANLY_SHORT_NAME VARCHAR2(1) := NULL;
 NEW_AANLY_CR_UID          VARCHAR2(1) := NULL;
 NEW_AANLY_BL_ANLY_NAME    VARCHAR2(1) := NULL;
 NEW_AANLY_BL_ANLY_SHORT_NAME VARCHAR2(1) := NULL;
 NEW_AANLY_CR_DT           DATE        := NULL;
 NEW_AANLY_FRZ_FLAG        VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ACNT_ANLY (
         :OLD.AANLY_ANLY_HEAD_NO,
         :OLD.AANLY_ANLY_CODE,
         :OLD.AANLY_MAIN_ACNT_CODE,
         :OLD.AANLY_SUB_ACNT_CODE,
         :OLD.AANLY_ANLY_NAME,
         :OLD.AANLY_ANLY_SHORT_NAME,
         :OLD.AANLY_CR_UID,
         :OLD.AANLY_CR_DT,
         :OLD.AANLY_FRZ_FLAG,
         :NEW.AANLY_ANLY_HEAD_NO,
         :NEW.AANLY_ANLY_CODE,
         :NEW.AANLY_MAIN_ACNT_CODE,
         :NEW.AANLY_SUB_ACNT_CODE,
         :NEW.AANLY_ANLY_NAME,
         :NEW.AANLY_ANLY_SHORT_NAME,
         :NEW.AANLY_CR_UID,
         :NEW.AANLY_CR_DT,
         :NEW.AANLY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG ,
         :OLD.AANLY_BL_ANLY_NAME,
         :NEW.AANLY_BL_ANLY_NAME,
         :OLD.AANLY_BL_ANLY_SHORT_NAME,
         :NEW.AANLY_BL_ANLY_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ACNT_ANLY (
         :OLD.AANLY_ANLY_HEAD_NO,
         :OLD.AANLY_ANLY_CODE,
         :OLD.AANLY_MAIN_ACNT_CODE,
         :OLD.AANLY_SUB_ACNT_CODE,
         :OLD.AANLY_ANLY_NAME,
         :OLD.AANLY_ANLY_SHORT_NAME,
         :OLD.AANLY_CR_UID,
         :OLD.AANLY_CR_DT,
         :OLD.AANLY_FRZ_FLAG,
         NEW_AANLY_ANLY_HEAD_NO,
         NEW_AANLY_ANLY_CODE,
         NEW_AANLY_MAIN_ACNT_CODE,
         NEW_AANLY_SUB_ACNT_CODE,
         NEW_AANLY_ANLY_NAME,
         NEW_AANLY_ANLY_SHORT_NAME,
         NEW_AANLY_CR_UID,
         NEW_AANLY_CR_DT,
         NEW_AANLY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.AANLY_BL_ANLY_NAME,
         NEW_AANLY_BL_ANLY_NAME,
         :OLD.AANLY_BL_ANLY_SHORT_NAME,
         NEW_AANLY_BL_ANLY_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_ACNT_ANLY_LEVEL ( 
  AAL_HEAD_NO         NUMBER (1), 
  AAL_FORMAT_ID       NUMBER (2), 
  AAL_LVL_CODE        NUMBER (6), 
  AAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  AAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  AAL_ANLY_CODE       VARCHAR2 (6), 
  AAL_CR_UID          VARCHAR2 (10), 
  AAL_CR_DT           DATE ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD  CONSTRAINT PK_AAL_01
 UNIQUE (AAL_HEAD_NO, AAL_FORMAT_ID, AAL_LVL_CODE, AAL_MAIN_ACNT_CODE, AAL_SUB_ACNT_CODE, AAL_ANLY_CODE) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD  CONSTRAINT PK_AAL_02
 UNIQUE (AAL_HEAD_NO, AAL_FORMAT_ID, AAL_MAIN_ACNT_CODE, AAL_SUB_ACNT_CODE, AAL_ANLY_CODE) 
/



ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_NN_02 CHECK  ( AAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_NN_01 CHECK  ( AAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_NN_03 CHECK  ( AAL_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_NN_04 CHECK  ( AAL_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_NN_05 CHECK  ( AAL_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005479 CHECK  ( AAL_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005480 CHECK  ( AAL_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005481 CHECK  ( AAL_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018272 CHECK  ( AAL_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018273 CHECK  ( AAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018274 CHECK  ( AAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018270 CHECK  ( AAL_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018271 CHECK  ( AAL_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005489 CHECK  ( AAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005490 CHECK  ( AAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD CONSTRAINT 
AAL_CHK_01 CHECK  ( AAL_HEAD_NO BETWEEN 1 AND 2  ) 
/



/
CREATE TABLE FM_ACNT_CATG ( 
  CATG_CODE           VARCHAR2 (2)  NOT NULL, 
  CATG_NAME           VARCHAR2 (30), 
  CATG_SHORT_NAME     VARCHAR2 (15), 
  CATG_CR_UID         VARCHAR2 (10), 
  CATG_CR_DT          DATE, 
  CATG_FRZ_FLAG       VARCHAR2 (1), 
  CATG_BL_NAME        VARCHAR2 (30), 
  CATG_BL_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_CATG_01
  PRIMARY KEY ( CATG_CODE ) ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
FIN_C0018278 CHECK  ( CATG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
CATG_CHK_01 CHECK  ( CATG_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
CATG_NN_01 CHECK  ( CATG_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
FIN_C0018275 CHECK  ( CATG_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
FIN_C0018276 CHECK  ( CATG_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
FIN_C0018277 CHECK  ( CATG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
FIN_C0018279 CHECK  ( CATG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
CATG_NN_02 CHECK  ( CATG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
CATG_NN_03 CHECK  ( CATG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
CATG_NN_04 CHECK  ( CATG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
SYS_C005502 CHECK  ( CATG_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
SYS_C005503 CHECK  ( CATG_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
SYS_C005504 CHECK  ( CATG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
SYS_C005505 CHECK  ( CATG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CATG ADD CONSTRAINT 
SYS_C005506 CHECK  ( CATG_FRZ_FLAG IS NOT NULL  ) 
/



/
CREATE TABLE FM_ACNT_COMP ( 
  ACOMP_COMP_CODE       VARCHAR2 (3), 
  ACOMP_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ACOMP_SUB_ACNT_CODE   VARCHAR2 (6), 
  ACOMP_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  ACOMP_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_ACNT_COMP ADD  CONSTRAINT PK_ACOMP_01
 UNIQUE (ACOMP_COMP_CODE, ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 
/



ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
FIN_C0018282 CHECK  ( ACOMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
FIN_C0018283 CHECK  ( ACOMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
ACOMP_NN_03 CHECK  ( ACOMP_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
ACOMP_NN_04 CHECK  ( ACOMP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
SYS_C005514 CHECK  ( ACOMP_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
SYS_C005515 CHECK  ( ACOMP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
SYS_C005516 CHECK  ( ACOMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
SYS_C005517 CHECK  ( ACOMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
ACOMP_NN_01 CHECK  ( ACOMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
ACOMP_NN_02 CHECK  ( ACOMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
FIN_C0018280 CHECK  ( ACOMP_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_COMP ADD CONSTRAINT 
FIN_C0018281 CHECK  ( ACOMP_MAIN_ACNT_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_ACNT_COMP_01 ON 
  FM_ACNT_COMP(ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_ACNT_COMP" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_ACNT_COMP REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_ACOMP_COMP_CODE       VARCHAR2(1) := NULL;
 NEW_ACOMP_MAIN_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_ACOMP_SUB_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_ACOMP_CR_UID          VARCHAR2(1) := NULL;
 NEW_ACOMP_CR_DT           DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ACNT_COMP (
         :OLD.ACOMP_COMP_CODE,
         :OLD.ACOMP_MAIN_ACNT_CODE,
         :OLD.ACOMP_SUB_ACNT_CODE,
         :OLD.ACOMP_CR_UID,
         :OLD.ACOMP_CR_DT,
         :NEW.ACOMP_COMP_CODE,
         :NEW.ACOMP_MAIN_ACNT_CODE,
         :NEW.ACOMP_SUB_ACNT_CODE,
         :NEW.ACOMP_CR_UID,
         :NEW.ACOMP_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ACNT_COMP (
         :OLD.ACOMP_COMP_CODE,
         :OLD.ACOMP_MAIN_ACNT_CODE,
         :OLD.ACOMP_SUB_ACNT_CODE,
         :OLD.ACOMP_CR_UID,
         :OLD.ACOMP_CR_DT,
         NEW_ACOMP_COMP_CODE,
         NEW_ACOMP_MAIN_ACNT_CODE,
         NEW_ACOMP_SUB_ACNT_CODE,
         NEW_ACOMP_CR_UID,
         NEW_ACOMP_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;



/

/
CREATE TABLE FM_ACNT_COMP_DIVN ( 
  ACD_COMP_CODE       VARCHAR2 (3), 
  ACD_DIVN_CODE       VARCHAR2 (6), 
  ACD_DEPT_CODE       VARCHAR2 (6), 
  ACD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ACD_CR_UID          VARCHAR2 (10), 
  ACD_CR_DT           DATE ) 
/

/
CREATE TABLE FM_ACNT_CURR ( 
  ACURR_CURR_CODE       VARCHAR2 (3), 
  ACURR_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ACURR_SUB_ACNT_CODE   VARCHAR2 (6), 
  ACURR_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  ACURR_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_ACNT_CURR ADD  CONSTRAINT PK_ACURR_01
 UNIQUE (ACURR_CURR_CODE, ACURR_MAIN_ACNT_CODE, ACURR_SUB_ACNT_CODE) 
/



ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
FIN_C0018284 CHECK  ( ACURR_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
FIN_C0018285 CHECK  ( ACURR_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
FIN_C0018286 CHECK  ( ACURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
FIN_C0018287 CHECK  ( ACURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
SYS_C005522 CHECK  ( ACURR_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
SYS_C005523 CHECK  ( ACURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
SYS_C005524 CHECK  ( ACURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
ACURR_NN_01 CHECK  ( ACURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
ACURR_NN_02 CHECK  ( ACURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
ACURR_NN_03 CHECK  ( ACURR_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
ACURR_NN_04 CHECK  ( ACURR_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_CURR ADD CONSTRAINT 
SYS_C005529 CHECK  ( ACURR_CURR_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_ACNT_CURR_01 ON 
  FM_ACNT_CURR(ACURR_MAIN_ACNT_CODE, ACURR_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_ACNT_CURR" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_ACNT_CURR REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_ACURR_CURR_CODE       VARCHAR2(1) := NULL;
 NEW_ACURR_MAIN_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_ACURR_SUB_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_ACURR_CR_UID          VARCHAR2(1) := NULL;
 NEW_ACURR_CR_DT           DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ACNT_CURR (
         :OLD.ACURR_CURR_CODE,
         :OLD.ACURR_MAIN_ACNT_CODE,
         :OLD.ACURR_SUB_ACNT_CODE,
         :OLD.ACURR_CR_UID,
         :OLD.ACURR_CR_DT,
         :NEW.ACURR_CURR_CODE,
         :NEW.ACURR_MAIN_ACNT_CODE,
         :NEW.ACURR_SUB_ACNT_CODE,
         :NEW.ACURR_CR_UID,
         :NEW.ACURR_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ACNT_CURR (
         :OLD.ACURR_CURR_CODE,
         :OLD.ACURR_MAIN_ACNT_CODE,
         :OLD.ACURR_SUB_ACNT_CODE,
         :OLD.ACURR_CR_UID,
         :OLD.ACURR_CR_DT,
         NEW_ACURR_CURR_CODE,
         NEW_ACURR_MAIN_ACNT_CODE,
         NEW_ACURR_SUB_ACNT_CODE,
         NEW_ACURR_CR_UID,
         NEW_ACURR_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FM_ACNT_LINK ( 
  ALS_BASE_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ALS_BASE_SUB_ACNT_CODE   VARCHAR2 (6), 
  ALS_LINK_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ALS_LINK_SUB_ACNT_CODE   VARCHAR2 (6), 
  ALS_CR_UID               VARCHAR2 (10)  DEFAULT 'TEST1', 
  ALS_CR_DT                DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_ACNT_LINK ADD  CONSTRAINT PK_ALS_01
 UNIQUE (ALS_BASE_MAIN_ACNT_CODE, ALS_BASE_SUB_ACNT_CODE, ALS_LINK_MAIN_ACNT_CODE, ALS_LINK_SUB_ACNT_CODE) 
/



ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
ALS_NN_02 CHECK  ( ALS_BASE_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
FIN_C0018288 CHECK  ( ALS_BASE_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
FIN_C0018289 CHECK  ( ALS_BASE_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
ALS_NN_01 CHECK  ( ALS_BASE_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
SYS_C005539 CHECK  ( ALS_BASE_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_LINK ADD CONSTRAINT 
SYS_C005540 CHECK  ( ALS_BASE_SUB_ACNT_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_ACNT_LINK_01 ON 
  FM_ACNT_LINK(ALS_LINK_MAIN_ACNT_CODE, ALS_LINK_SUB_ACNT_CODE) 

/

/
CREATE TABLE FM_ACNT_PERIOD ( 
  APER_COMP_CODE  VARCHAR2 (3)  NOT NULL, 
  APER_ACNT_YEAR  NUMBER (2)    NOT NULL, 
  APER_CAL_YEAR   NUMBER (4)    NOT NULL, 
  APER_CAL_MONTH  NUMBER (2)    NOT NULL, 
  APER_FRM_DT     DATE, 
  APER_TO_DT      DATE, 
  APER_QTLY       NUMBER (2), 
  APER_CLO_UID    VARCHAR2 (10), 
  APER_CLO_DT     DATE, 
  APER_CR_UID     VARCHAR2 (10)  DEFAULT 'TEST1', 
  APER_CR_DT      DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_APER_01
  PRIMARY KEY ( APER_COMP_CODE, APER_ACNT_YEAR, APER_CAL_YEAR, APER_CAL_MONTH ) ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_CHK_04 CHECK  ( APER_TO_DT >= APER_FRM_DT  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005549 CHECK  ( APER_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005550 CHECK  ( APER_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005551 CHECK  ( APER_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005552 CHECK  ( APER_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005553 CHECK  ( APER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
SYS_C005554 CHECK  ( APER_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_CHK_01 CHECK  ( APER_ACNT_YEAR > 0  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_CHK_02 CHECK  ( APER_CAL_YEAR > 0  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_CHK_03 CHECK  ( APER_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_NN_01 CHECK  ( APER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018290 CHECK  ( APER_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018291 CHECK  ( APER_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018292 CHECK  ( APER_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018293 CHECK  ( APER_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018294 CHECK  ( APER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
FIN_C0018295 CHECK  ( APER_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACNT_PERIOD ADD CONSTRAINT 
APER_NN_02 CHECK  ( APER_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_ACNT_PERIOD_01 ON 
  FM_ACNT_PERIOD(APER_COMP_CODE, APER_CAL_YEAR, APER_CAL_MONTH) 

CREATE INDEX NUX_FM_ACNT_PERIOD_02 ON 
  FM_ACNT_PERIOD(APER_COMP_CODE, APER_FRM_DT, APER_TO_DT) 

/

/
CREATE TABLE FM_ACTIVITY ( 
  ACTY_CODE      VARCHAR2 (6)  NOT NULL, 
  ACTY_NAME      VARCHAR2 (30), 
  ACTY_CR_UID    VARCHAR2 (10)  DEFAULT 'TEST1', 
  ACTY_CR_DT     DATE          DEFAULT SYSDATE, 
  ACTY_FRZ_FLAG  VARCHAR2 (1)  DEFAULT 'N', 
  ACTY_BL_NAME   VARCHAR2 (30), 
  CONSTRAINT PK_ACTY_01
  PRIMARY KEY ( ACTY_CODE ) ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
SYS_C005570 CHECK  ( ACTY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
SYS_C005571 CHECK  ( ACTY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
ACTY_CHK_01 CHECK  ( ACTY_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
FIN_C0018296 CHECK  ( ACTY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
FIN_C0018297 CHECK  ( ACTY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
FIN_C0018298 CHECK  ( ACTY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
FIN_C0018299 CHECK  ( ACTY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
FIN_C0018300 CHECK  ( ACTY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
ACTY_NN_01 CHECK  ( ACTY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
ACTY_NN_02 CHECK  ( ACTY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
ACTY_NN_03 CHECK  ( ACTY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
ACTY_NN_04 CHECK  ( ACTY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
SYS_C005566 CHECK  ( ACTY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
SYS_C005568 CHECK  ( ACTY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTIVITY ADD CONSTRAINT 
SYS_C005569 CHECK  ( ACTY_CR_UID IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ACTIVITY
BEFORE INSERT OR UPDATE OR DELETE ON FM_ACTIVITY
FOR EACH ROW
DECLARE
 NEW_ACTY_CODE             VARCHAR2(1) := NULL;
 NEW_ACTY_NAME             VARCHAR2(1) := NULL;
 NEW_ACTY_BL_NAME          VARCHAR2(1) := NULL;
 NEW_ACTY_CR_UID           VARCHAR2(1) := NULL;
 NEW_ACTY_CR_DT            DATE        := NULL;
 NEW_ACTY_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ACTIVITY (
         :OLD.ACTY_CODE,
         :OLD.ACTY_NAME,
         :OLD.ACTY_CR_UID,
         :OLD.ACTY_CR_DT,
         :OLD.ACTY_FRZ_FLAG,
         :NEW.ACTY_CODE,
         :NEW.ACTY_NAME,
         :NEW.ACTY_CR_UID,
         :NEW.ACTY_CR_DT,
         :NEW.ACTY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ACTY_BL_NAME,
         :NEW.ACTY_BL_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ACTIVITY (
         :OLD.ACTY_CODE,
         :OLD.ACTY_NAME,
         :OLD.ACTY_CR_UID,
         :OLD.ACTY_CR_DT,
         :OLD.ACTY_FRZ_FLAG,
         NEW_ACTY_CODE,
         NEW_ACTY_NAME,
         NEW_ACTY_CR_UID,
         NEW_ACTY_CR_DT,
         NEW_ACTY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ACTY_BL_NAME,
         NEW_ACTY_BL_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_ACTY_VALUE ( 
  AVAL_ACTY_CODE      VARCHAR2 (6)  NOT NULL, 
  AVAL_CODE           VARCHAR2 (6)  NOT NULL, 
  AVAL_VALUE_NAME     VARCHAR2 (30), 
  AVAL_SHORT_NAME     VARCHAR2 (15), 
  AVAL_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  AVAL_CR_DT          DATE          DEFAULT SYSDATE, 
  AVAL_FRZ_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  AVAL_BL_VALUE_NAME  VARCHAR2 (30), 
  AVAL_BL_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_AVAL_01
  PRIMARY KEY ( AVAL_ACTY_CODE, AVAL_CODE ) ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018301 CHECK  ( AVAL_ACTY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005591 CHECK  ( AVAL_VALUE_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005592 CHECK  ( AVAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005593 CHECK  ( AVAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005576 CHECK  ( AVAL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
AVAL_CHK_01 CHECK  ( AVAL_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018302 CHECK  ( AVAL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018303 CHECK  ( AVAL_VALUE_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018304 CHECK  ( AVAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018305 CHECK  ( AVAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
FIN_C0018306 CHECK  ( AVAL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
AVAL_NN_01 CHECK  ( AVAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
AVAL_NN_02 CHECK  ( AVAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
AVAL_NN_03 CHECK  ( AVAL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
AVAL_NN_04 CHECK  ( AVAL_VALUE_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005589 CHECK  ( AVAL_ACTY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ACTY_VALUE ADD CONSTRAINT 
SYS_C005590 CHECK  ( AVAL_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ACTY_VALUE
BEFORE INSERT OR UPDATE OR DELETE ON FM_ACTY_VALUE
FOR EACH ROW
DECLARE
 NEW_AVAL_ACTY_CODE        VARCHAR2(1) := NULL;
 NEW_AVAL_CODE             VARCHAR2(1) := NULL;
 NEW_AVAL_VALUE_NAME       VARCHAR2(1) := NULL;
 NEW_AVAL_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_AVAL_BL_VALUE_NAME    VARCHAR2(1) := NULL;
 NEW_AVAL_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_AVAL_CR_UID           VARCHAR2(1) := NULL;
 NEW_AVAL_CR_DT            DATE        := NULL;
 NEW_AVAL_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ACTY_VALUE (
         :OLD.AVAL_ACTY_CODE,
         :OLD.AVAL_CODE,
         :OLD.AVAL_VALUE_NAME,
         :OLD.AVAL_SHORT_NAME,
         :OLD.AVAL_CR_UID,
         :OLD.AVAL_CR_DT,
         :OLD.AVAL_FRZ_FLAG,
         :NEW.AVAL_ACTY_CODE,
         :NEW.AVAL_CODE,
         :NEW.AVAL_VALUE_NAME,
         :NEW.AVAL_SHORT_NAME,
         :NEW.AVAL_CR_UID,
         :NEW.AVAL_CR_DT,
         :NEW.AVAL_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.AVAL_BL_VALUE_NAME,
         :NEW.AVAL_BL_VALUE_NAME,
         :OLD.AVAL_BL_SHORT_NAME,
         :NEW.AVAL_BL_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ACTY_VALUE (
         :OLD.AVAL_ACTY_CODE,
         :OLD.AVAL_CODE,
         :OLD.AVAL_VALUE_NAME,
         :OLD.AVAL_SHORT_NAME,
         :OLD.AVAL_CR_UID,
         :OLD.AVAL_CR_DT,
         :OLD.AVAL_FRZ_FLAG,
         NEW_AVAL_ACTY_CODE,
         NEW_AVAL_CODE,
         NEW_AVAL_VALUE_NAME,
         NEW_AVAL_SHORT_NAME,
         NEW_AVAL_CR_UID,
         NEW_AVAL_CR_DT,
         NEW_AVAL_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.AVAL_BL_VALUE_NAME,
         NEW_AVAL_BL_VALUE_NAME,
         :OLD.AVAL_BL_SHORT_NAME,
         NEW_AVAL_BL_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_ANALYSIS ( 
  ANLY_HEAD_NO        NUMBER (1)    NOT NULL, 
  ANLY_CODE           VARCHAR2 (6)  NOT NULL, 
  ANLY_NAME           VARCHAR2 (30), 
  ANLY_SHORT_NAME     VARCHAR2 (15), 
  ANLY_DESC           VARCHAR2 (2000), 
  ANLY_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  ANLY_CR_DT          DATE          DEFAULT SYSDATE, 
  ANLY_FRZ_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  ANLY_BL_NAME        VARCHAR2 (30), 
  ANLY_BL_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_ANLY_01
  PRIMARY KEY ( ANLY_HEAD_NO, ANLY_CODE ) ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005612 CHECK  ( ANLY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005594 CHECK  ( ANLY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005595 CHECK  ( ANLY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005596 CHECK  ( ANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005597 CHECK  ( ANLY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_CHK_01 CHECK  ( ANLY_HEAD_NO BETWEEN 1 AND 2  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_CHK_02 CHECK  ( ANLY_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_NN_01 CHECK  ( ANLY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_NN_02 CHECK  ( ANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_NN_03 CHECK  ( ANLY_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
ANLY_NN_04 CHECK  ( ANLY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
SYS_C005605 CHECK  ( ANLY_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018307 CHECK  ( ANLY_HEAD_NO IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018308 CHECK  ( ANLY_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018309 CHECK  ( ANLY_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018310 CHECK  ( ANLY_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018311 CHECK  ( ANLY_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANALYSIS ADD CONSTRAINT 
FIN_C0018312 CHECK  ( ANLY_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ANALYSIS
BEFORE INSERT OR UPDATE OR DELETE ON FM_ANALYSIS
FOR EACH ROW
DECLARE
 NEW_ANLY_HEAD_NO          NUMBER(1) := NULL;
 NEW_ANLY_CODE             VARCHAR2(1) := NULL;
 NEW_ANLY_NAME             VARCHAR2(1) := NULL;
 NEW_ANLY_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_ANLY_BL_NAME          VARCHAR2(1) := NULL;
 NEW_ANLY_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_ANLY_DESC             VARCHAR2(1) := NULL;
 NEW_ANLY_CR_UID           VARCHAR2(1) := NULL;
 NEW_ANLY_CR_DT            DATE        := NULL;
 NEW_ANLY_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ANALYSIS (
         :OLD.ANLY_HEAD_NO,
         :OLD.ANLY_CODE,
         :OLD.ANLY_NAME,
         :OLD.ANLY_SHORT_NAME,
         :OLD.ANLY_DESC,
         :OLD.ANLY_CR_UID,
         :OLD.ANLY_CR_DT,
         :OLD.ANLY_FRZ_FLAG,
         :NEW.ANLY_HEAD_NO,
         :NEW.ANLY_CODE,
         :NEW.ANLY_NAME,
         :NEW.ANLY_SHORT_NAME,
         :NEW.ANLY_DESC,
         :NEW.ANLY_CR_UID,
         :NEW.ANLY_CR_DT,
         :NEW.ANLY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ANLY_BL_NAME,
         :NEW.ANLY_BL_NAME,
         :OLD.ANLY_BL_SHORT_NAME,
         :NEW.ANLY_BL_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ANALYSIS (
         :OLD.ANLY_HEAD_NO,
         :OLD.ANLY_CODE,
         :OLD.ANLY_NAME,
         :OLD.ANLY_SHORT_NAME,
         :OLD.ANLY_DESC,
         :OLD.ANLY_CR_UID,
         :OLD.ANLY_CR_DT,
         :OLD.ANLY_FRZ_FLAG,
         NEW_ANLY_HEAD_NO,
         NEW_ANLY_CODE,
         NEW_ANLY_NAME,
         NEW_ANLY_SHORT_NAME,
         NEW_ANLY_DESC,
         NEW_ANLY_CR_UID,
         NEW_ANLY_CR_DT,
         NEW_ANLY_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ANLY_BL_NAME,
         NEW_ANLY_BL_NAME,
         :OLD.ANLY_BL_SHORT_NAME,
         NEW_ANLY_BL_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_ANALYSIS_1 ( 
  ANLY_HEAD_NO        NUMBER (1), 
  ANLY_CODE           VARCHAR2 (6), 
  ANLY_NAME           VARCHAR2 (30), 
  ANLY_SHORT_NAME     VARCHAR2 (15), 
  ANLY_DESC           VARCHAR2 (2000), 
  ANLY_CR_UID         VARCHAR2 (10), 
  ANLY_CR_DT          DATE, 
  ANLY_FRZ_FLAG       VARCHAR2 (1), 
  ANLY_BL_NAME        VARCHAR2 (30), 
  ANLY_BL_SHORT_NAME  VARCHAR2 (15) ) 
/

/
CREATE TABLE FM_ANALYSIS_COMP ( 
  ANLYC_HEAD_NO    NUMBER (1), 
  ANLYC_CODE       VARCHAR2 (6), 
  ANLYC_COMP_CODE  VARCHAR2 (3) ) 
/

/
CREATE TABLE FM_ANALYSIS_COMP_DIVN ( 
  ANLYCD_HEAD_NO    NUMBER (1), 
  ANLYCD_CODE       VARCHAR2 (6), 
  ANLYCD_COMP_CODE  VARCHAR2 (3), 
  ANLYCD_DIVN_CODE  VARCHAR2 (6), 
  ANLYCD_DEPT_CODE  VARCHAR2 (6) ) 
/

/
CREATE TABLE FM_ANALYSIS_MAIN ( 
  ANLYM_HEAD_NO         NUMBER (1), 
  ANLYM_CODE            VARCHAR2 (6), 
  ANLYM_MAIN_ACNT_CODE  VARCHAR2 (6) ) 
/

/
CREATE TABLE FM_ANALYSIS_SUB ( 
  ANLYS_HEAD_NO        NUMBER (1), 
  ANLYS_CODE           VARCHAR2 (6), 
  ANLYS_SUB_ACNT_CODE  VARCHAR2 (6) ) 
/

/
CREATE TABLE FM_ANLY_ACNT_FORMAT ( 
  AAF_HEAD_NO         NUMBER (1), 
  AAF_FORMAT_ID       NUMBER (2), 
  AAF_ANLY_CODE       VARCHAR2 (6), 
  AAF_LVL_CODE        NUMBER (6), 
  AAF_MAIN_ACNT_CODE  VARCHAR2 (6), 
  AAF_SUB_ACNT_CODE   VARCHAR2 (6), 
  AAF_CR_UID          VARCHAR2 (10), 
  AAF_CR_DT           DATE ) 
/

/
CREATE TABLE FM_ANLY_FORMAT ( 
  AFM_HEAD_NO         NUMBER (1), 
  AFM_FORMAT_ID       NUMBER (2)    NOT NULL, 
  AFM_FORMAT_NAME     VARCHAR2 (30), 
  AFM_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  AFM_CR_DT           DATE          DEFAULT SYSDATE, 
  AFM_FRZ_FLAG        VARCHAR2 (1)  DEFAULT 'N', 
  AFM_BL_FORMAT_NAME  VARCHAR2 (30), 
  CONSTRAINT PK_AFM_01
  PRIMARY KEY ( AFM_FORMAT_ID ) ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
FIN_C0018313 CHECK  ( AFM_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_NN_02 CHECK  ( AFM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_NN_03 CHECK  ( AFM_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_NN_04 CHECK  ( AFM_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
SYS_C005616 CHECK  ( AFM_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
SYS_C005617 CHECK  ( AFM_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
SYS_C005618 CHECK  ( AFM_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
SYS_C005619 CHECK  ( AFM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
FIN_C0018316 CHECK  ( AFM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
FIN_C0018317 CHECK  ( AFM_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
FIN_C0018314 CHECK  ( AFM_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
FIN_C0018315 CHECK  ( AFM_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
SYS_C005625 CHECK  ( AFM_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_CHK_01 CHECK  ( AFM_HEAD_NO BETWEEN 1 AND 2  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_CHK_02 CHECK  ( AFM_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ANLY_FORMAT ADD CONSTRAINT 
AFM_NN_01 CHECK  ( AFM_CR_UID IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ANLY_FORMAT
BEFORE INSERT OR UPDATE OR DELETE ON FM_ANLY_FORMAT
FOR EACH ROW
DECLARE
 NEW_AFM_HEAD_NO           NUMBER(1) := NULL;
 NEW_AFM_FORMAT_ID         NUMBER(1) := NULL;
 NEW_AFM_FORMAT_NAME       VARCHAR2(1) := NULL;
 NEW_AFM_BL_FORMAT_NAME    VARCHAR2(1) := NULL;
 NEW_AFM_CR_UID            VARCHAR2(1) := NULL;
 NEW_AFM_CR_DT             DATE        := NULL;
 NEW_AFM_FRZ_FLAG          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ANLY_FORMAT (
         :OLD.AFM_HEAD_NO,
         :OLD.AFM_FORMAT_ID,
         :OLD.AFM_FORMAT_NAME,
         :OLD.AFM_CR_UID,
         :OLD.AFM_CR_DT,
         :OLD.AFM_FRZ_FLAG,
         :NEW.AFM_HEAD_NO,
         :NEW.AFM_FORMAT_ID,
         :NEW.AFM_FORMAT_NAME,
         :NEW.AFM_CR_UID,
         :NEW.AFM_CR_DT,
         :NEW.AFM_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.AFM_BL_FORMAT_NAME,
         :NEW.AFM_BL_FORMAT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ANLY_FORMAT (
         :OLD.AFM_HEAD_NO,
         :OLD.AFM_FORMAT_ID,
         :OLD.AFM_FORMAT_NAME,
         :OLD.AFM_CR_UID,
         :OLD.AFM_CR_DT,
         :OLD.AFM_FRZ_FLAG,
         NEW_AFM_HEAD_NO,
         NEW_AFM_FORMAT_ID,
         NEW_AFM_FORMAT_NAME,
         NEW_AFM_CR_UID,
         NEW_AFM_CR_DT,
         NEW_AFM_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.AFM_BL_FORMAT_NAME,
         NEW_AFM_BL_FORMAT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_ANLY_LEVEL ( 
  ALM_HEAD_NO      NUMBER (1), 
  ALM_FORMAT_ID    NUMBER (2)    NOT NULL, 
  ALM_LVL_CODE     NUMBER (6)    NOT NULL, 
  ALM_LVL_NAME     VARCHAR2 (30), 
  ALM_PARENT_CODE  NUMBER (6), 
  ALM_CR_UID       VARCHAR2 (10)  DEFAULT 'TEST1', 
  ALM_CR_DT        DATE          DEFAULT SYSDATE, 
  ALM_FRZ_FLAG     VARCHAR2 (1)  DEFAULT 'N', 
  ALM_BL_LVL_NAME  VARCHAR2 (30), 
  CONSTRAINT PK_ALM_01
  PRIMARY KEY ( ALM_FORMAT_ID, ALM_LVL_CODE ) ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018318 CHECK  ( ALM_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018319 CHECK  ( ALM_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018320 CHECK  ( ALM_LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005636 CHECK  ( ALM_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005637 CHECK  ( ALM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005638 CHECK  ( ALM_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_CHK_01 CHECK  ( ALM_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_CHK_02 CHECK  ( ALM_PARENT_CODE != ALM_LVL_CODE  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_CHK_03 CHECK  ( ALM_HEAD_NO IN (1,2)  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_NN_01 CHECK  ( ALM_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_NN_02 CHECK  ( ALM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_NN_03 CHECK  ( ALM_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
ALM_NN_04 CHECK  ( ALM_LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005647 CHECK  ( ALM_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005648 CHECK  ( ALM_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
SYS_C005649 CHECK  ( ALM_LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018321 CHECK  ( ALM_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018322 CHECK  ( ALM_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_ANLY_LEVEL ADD CONSTRAINT 
FIN_C0018323 CHECK  ( ALM_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_ANLY_LEVEL
BEFORE INSERT OR UPDATE OR DELETE ON FM_ANLY_LEVEL
FOR EACH ROW
DECLARE
 NEW_ALM_HEAD_NO           NUMBER(1) := NULL;
 NEW_ALM_FORMAT_ID         NUMBER(1) := NULL;
 NEW_ALM_LVL_CODE          NUMBER(1) := NULL;
 NEW_ALM_LVL_NAME          VARCHAR2(1) := NULL;
 NEW_ALM_BL_LVL_NAME       VARCHAR2(1) := NULL;
 NEW_ALM_PARENT_CODE       NUMBER(1) := NULL;
 NEW_ALM_CR_UID            VARCHAR2(1) := NULL;
 NEW_ALM_CR_DT             DATE        := NULL;
 NEW_ALM_FRZ_FLAG          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_ANLY_LEVEL (
         :OLD.ALM_HEAD_NO,
         :OLD.ALM_FORMAT_ID,
         :OLD.ALM_LVL_CODE,
         :OLD.ALM_LVL_NAME,
         :OLD.ALM_PARENT_CODE,
         :OLD.ALM_CR_UID,
         :OLD.ALM_CR_DT,
         :OLD.ALM_FRZ_FLAG,
         :NEW.ALM_HEAD_NO,
         :NEW.ALM_FORMAT_ID,
         :NEW.ALM_LVL_CODE,
         :NEW.ALM_LVL_NAME,
         :NEW.ALM_PARENT_CODE,
         :NEW.ALM_CR_UID,
         :NEW.ALM_CR_DT,
         :NEW.ALM_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ALM_BL_LVL_NAME ,
         :NEW.ALM_BL_LVL_NAME ) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_ANLY_LEVEL (
         :OLD.ALM_HEAD_NO,
         :OLD.ALM_FORMAT_ID,
         :OLD.ALM_LVL_CODE,
         :OLD.ALM_LVL_NAME,
         :OLD.ALM_PARENT_CODE,
         :OLD.ALM_CR_UID,
         :OLD.ALM_CR_DT,
         :OLD.ALM_FRZ_FLAG,
         NEW_ALM_HEAD_NO,
         NEW_ALM_FORMAT_ID,
         NEW_ALM_LVL_CODE,
         NEW_ALM_LVL_NAME,
         NEW_ALM_PARENT_CODE,
         NEW_ALM_CR_UID,
         NEW_ALM_CR_DT,
         NEW_ALM_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.ALM_BL_LVL_NAME ,
         NEW_ALM_BL_LVL_NAME ) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_COA_ACNT_FORMAT ( 
  CAF_FORMAT_ID       NUMBER (2)    NOT NULL, 
  CAF_LVL_CODE        NUMBER (6)    NOT NULL, 
  CAF_MAIN_ACNT_CODE  VARCHAR2 (6)  NOT NULL, 
  CAF_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  CAF_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_CAF_01
  PRIMARY KEY ( CAF_FORMAT_ID, CAF_LVL_CODE, CAF_MAIN_ACNT_CODE ) ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
FIN_C0018328 CHECK  ( CAF_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
SYS_C005655 CHECK  ( CAF_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
SYS_C005656 CHECK  ( CAF_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
SYS_C005657 CHECK  ( CAF_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
SYS_C005658 CHECK  ( CAF_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
SYS_C005659 CHECK  ( CAF_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
CAF_NN_01 CHECK  ( CAF_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
CAF_NN_02 CHECK  ( CAF_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
FIN_C0018324 CHECK  ( CAF_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
FIN_C0018325 CHECK  ( CAF_LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
FIN_C0018326 CHECK  ( CAF_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD CONSTRAINT 
FIN_C0018327 CHECK  ( CAF_CR_UID IS NOT NULL  ) 
/




CREATE UNIQUE INDEX FUX_COA_ACNT_FORMAT ON 
  FM_COA_ACNT_FORMAT(CAF_FORMAT_ID, CAF_MAIN_ACNT_CODE, CAF_LVL_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_COA_ACNT_FORMAT
BEFORE INSERT OR UPDATE OR DELETE ON FM_COA_ACNT_FORMAT
FOR EACH ROW
DECLARE
 NEW_CAF_FORMAT_ID         NUMBER(1) := NULL;
 NEW_CAF_LVL_CODE          NUMBER(1) := NULL;
 NEW_CAF_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_CAF_CR_UID            VARCHAR2(1) := NULL;
 NEW_CAF_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_COA_ACNT_FORMAT (
         :OLD.CAF_FORMAT_ID,
         :OLD.CAF_LVL_CODE,
         :OLD.CAF_MAIN_ACNT_CODE,
         :OLD.CAF_CR_UID,
         :OLD.CAF_CR_DT,
         :NEW.CAF_FORMAT_ID,
         :NEW.CAF_LVL_CODE,
         :NEW.CAF_MAIN_ACNT_CODE,
         :NEW.CAF_CR_UID,
         :NEW.CAF_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_COA_ACNT_FORMAT (
         :OLD.CAF_FORMAT_ID,
         :OLD.CAF_LVL_CODE,
         :OLD.CAF_MAIN_ACNT_CODE,
         :OLD.CAF_CR_UID,
         :OLD.CAF_CR_DT,
         NEW_CAF_FORMAT_ID,
         NEW_CAF_LVL_CODE,
         NEW_CAF_MAIN_ACNT_CODE,
         NEW_CAF_CR_UID,
         NEW_CAF_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_COA_FORMAT ( 
  COA_FORMAT_ID       NUMBER (2)    NOT NULL, 
  COA_FORMAT_NAME     VARCHAR2 (30), 
  COA_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  COA_CR_DT           DATE          DEFAULT SYSDATE, 
  COA_FRZ_FLAG        VARCHAR2 (1)  DEFAULT 'N', 
  COA_BL_FORMAT_NAME  VARCHAR2 (30), 
  CONSTRAINT PK_COA_01
  PRIMARY KEY ( COA_FORMAT_ID ) ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_NN_04 CHECK  ( COA_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
SYS_C005675 CHECK  ( COA_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
SYS_C005676 CHECK  ( COA_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
SYS_C005677 CHECK  ( COA_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
SYS_C005678 CHECK  ( COA_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
SYS_C005679 CHECK  ( COA_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
FIN_C0018329 CHECK  ( COA_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
FIN_C0018330 CHECK  ( COA_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
FIN_C0018331 CHECK  ( COA_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
FIN_C0018332 CHECK  ( COA_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
FIN_C0018333 CHECK  ( COA_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_CHK_01 CHECK  ( COA_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_CHK_02 CHECK  ( COA_FORMAT_ID > 0  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_NN_01 CHECK  ( COA_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_NN_02 CHECK  ( COA_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_FORMAT ADD CONSTRAINT 
COA_NN_03 CHECK  ( COA_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_COA_FORMAT
BEFORE INSERT OR UPDATE OR DELETE ON FM_COA_FORMAT
FOR EACH ROW
DECLARE
 NEW_COA_FORMAT_ID         NUMBER(1) := NULL;
 NEW_COA_FORMAT_NAME       VARCHAR2(1) := NULL;
 NEW_COA_BL_FORMAT_NAME    VARCHAR2(1) := NULL;
 NEW_COA_CR_UID            VARCHAR2(1) := NULL;
 NEW_COA_CR_DT             DATE        := NULL;
 NEW_COA_FRZ_FLAG          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_COA_FORMAT (
         :OLD.COA_FORMAT_ID,
         :OLD.COA_FORMAT_NAME,
         :OLD.COA_CR_UID,
         :OLD.COA_CR_DT,
         :OLD.COA_FRZ_FLAG,
         :NEW.COA_FORMAT_ID,
         :NEW.COA_FORMAT_NAME,
         :NEW.COA_CR_UID,
         :NEW.COA_CR_DT,
         :NEW.COA_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.COA_BL_FORMAT_NAME,
         :NEW.COA_BL_FORMAT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_COA_FORMAT (
         :OLD.COA_FORMAT_ID,
         :OLD.COA_FORMAT_NAME,
         :OLD.COA_CR_UID,
         :OLD.COA_CR_DT,
         :OLD.COA_FRZ_FLAG,
         NEW_COA_FORMAT_ID,
         NEW_COA_FORMAT_NAME,
         NEW_COA_CR_UID,
         NEW_COA_CR_DT,
         NEW_COA_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.COA_BL_FORMAT_NAME,
         NEW_COA_BL_FORMAT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_COA_LEVEL ( 
  LVL_FORMAT_ID    NUMBER (2)    NOT NULL, 
  LVL_CODE         NUMBER (6)    NOT NULL, 
  LVL_NAME         VARCHAR2 (30), 
  LVL_PARENT_CODE  NUMBER (6), 
  LVL_ACNT_TYPE    VARCHAR2 (1), 
  LVL_TOTAL_FLAG   VARCHAR2 (1)  DEFAULT 'N', 
  LVL_NOTE_NO      VARCHAR2 (3), 
  LVL_SEQ_NO       NUMBER (6), 
  LVL_CR_UID       VARCHAR2 (10)  DEFAULT 'TEST1', 
  LVL_CR_DT        DATE          DEFAULT SYSDATE, 
  LVL_FRZ_FLAG     VARCHAR2 (1)  DEFAULT 'N', 
  LVL_BL_NAME      VARCHAR2 (30), 
  CONSTRAINT PK_LVL_01
  PRIMARY KEY ( LVL_FORMAT_ID, LVL_CODE ) ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018339 CHECK  ( LVL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_05 CHECK  ( LVL_PARENT_CODE != LVL_CODE  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018334 CHECK  ( LVL_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018335 CHECK  ( LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018336 CHECK  ( LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_06 CHECK  ( LVL_CODE > 0  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_NN_02 CHECK  ( LVL_TOTAL_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_NN_03 CHECK  ( LVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018337 CHECK  ( LVL_TOTAL_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018338 CHECK  ( LVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
FIN_C0018340 CHECK  ( LVL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_NN_04 CHECK  ( LVL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_NN_05 CHECK  ( LVL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_NN_06 CHECK  ( LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005694 CHECK  ( LVL_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005695 CHECK  ( LVL_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005696 CHECK  ( LVL_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005697 CHECK  ( LVL_TOTAL_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005698 CHECK  ( LVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005699 CHECK  ( LVL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
SYS_C005700 CHECK  ( LVL_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_01 CHECK  ( LVL_ACNT_TYPE IN ('A','L','I','E')  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_02 CHECK  ( LVL_TOTAL_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_03 CHECK  ( LVL_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_COA_LEVEL ADD CONSTRAINT 
LVL_CHK_04 CHECK  ( (LVL_PARENT_CODE IS NULL AND LVL_ACNT_TYPE  IS NOT NULL) OR (LVL_PARENT_CODE IS NOT NULL AND LVL_ACNT_TYPE IS NULL)  ) 
/




CREATE INDEX NUX_FM_COA_LEVEL_01 ON 
  FM_COA_LEVEL(LVL_FORMAT_ID, LVL_PARENT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_COA_LEVEL" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_COA_LEVEL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_LVL_FORMAT_ID         NUMBER(1) := NULL;
 NEW_LVL_CODE              NUMBER(1) := NULL;
 NEW_LVL_NAME              VARCHAR2(1) := NULL;
 NEW_LVL_BL_NAME           VARCHAR2(1) := NULL;
 NEW_LVL_PARENT_CODE       NUMBER(1) := NULL;
 NEW_LVL_ACNT_TYPE         VARCHAR2(1) := NULL;
 NEW_LVL_TOTAL_FLAG        VARCHAR2(1) := NULL;
 NEW_LVL_NOTE_NO           VARCHAR2(1) := NULL;
 NEW_LVL_SEQ_NO            NUMBER(1) := NULL;
 NEW_LVL_CR_UID            VARCHAR2(1) := NULL;
 NEW_LVL_CR_DT             DATE        := NULL;
 NEW_LVL_FRZ_FLAG          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_COA_LEVEL (
         :OLD.LVL_FORMAT_ID,
         :OLD.LVL_CODE,
         :OLD.LVL_NAME,
         :OLD.LVL_PARENT_CODE,
         :OLD.LVL_ACNT_TYPE,
         :OLD.LVL_TOTAL_FLAG,
         :OLD.LVL_NOTE_NO,
         :OLD.LVL_SEQ_NO,
         :OLD.LVL_CR_UID,
         :OLD.LVL_CR_DT,
         :OLD.LVL_FRZ_FLAG,
         :NEW.LVL_FORMAT_ID,
         :NEW.LVL_CODE,
         :NEW.LVL_NAME,
         :NEW.LVL_PARENT_CODE,
         :NEW.LVL_ACNT_TYPE,
         :NEW.LVL_TOTAL_FLAG,
         :NEW.LVL_NOTE_NO,
         :NEW.LVL_SEQ_NO,
         :NEW.LVL_CR_UID,
         :NEW.LVL_CR_DT,
         :NEW.LVL_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.LVL_BL_NAME,
         :NEW.LVL_BL_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_COA_LEVEL (
         :OLD.LVL_FORMAT_ID,
         :OLD.LVL_CODE,
         :OLD.LVL_NAME,
         :OLD.LVL_PARENT_CODE,
         :OLD.LVL_ACNT_TYPE,
         :OLD.LVL_TOTAL_FLAG,
         :OLD.LVL_NOTE_NO,
         :OLD.LVL_SEQ_NO,
         :OLD.LVL_CR_UID,
         :OLD.LVL_CR_DT,
         :OLD.LVL_FRZ_FLAG,
         NEW_LVL_FORMAT_ID,
         NEW_LVL_CODE,
         NEW_LVL_NAME,
         NEW_LVL_PARENT_CODE,
         NEW_LVL_ACNT_TYPE,
         NEW_LVL_TOTAL_FLAG,
         NEW_LVL_NOTE_NO,
         NEW_LVL_SEQ_NO,
         NEW_LVL_CR_UID,
         NEW_LVL_CR_DT,
         NEW_LVL_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.LVL_BL_NAME,
         NEW_LVL_BL_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FM_COA_LEVEL_BACK ( 
  LVL_FORMAT_ID    NUMBER (2), 
  LVL_CODE         NUMBER (6), 
  LVL_NAME         VARCHAR2 (30), 
  LVL_PARENT_CODE  NUMBER (6), 
  LVL_ACNT_TYPE    VARCHAR2 (1), 
  LVL_TOTAL_FLAG   VARCHAR2 (1), 
  LVL_NOTE_NO      VARCHAR2 (3), 
  LVL_CR_UID       VARCHAR2 (10), 
  LVL_CR_DT        DATE, 
  LVL_FRZ_FLAG     VARCHAR2 (1) ) 
/

/
CREATE TABLE FM_COMPANY ( 
  COMP_CODE            VARCHAR2 (3)  NOT NULL, 
  COMP_NAME            VARCHAR2 (30), 
  COMP_SHORT_NAME      VARCHAR2 (15), 
  COMP_CTL_ACNT_CODE   VARCHAR2 (6), 
  COMP_HEADER          VARCHAR2 (5), 
  COMP_ADD_1           VARCHAR2 (30), 
  COMP_ADD_2           VARCHAR2 (30), 
  COMP_ADD_3           VARCHAR2 (30), 
  COMP_DFLT_DIVN_CODE  VARCHAR2 (6), 
  COMP_DFLT_DEPT_CODE  VARCHAR2 (6), 
  COMP_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  COMP_CR_DT           DATE          DEFAULT SYSDATE, 
  COMP_FRZ_FLAG        VARCHAR2 (1)  DEFAULT 'N', 
  COMP_BL_NAME         VARCHAR2 (30), 
  COMP_BL_SHORT_NAME   VARCHAR2 (15), 
  COMP_BL_ADD_1        VARCHAR2 (30), 
  COMP_BL_ADD_2        VARCHAR2 (30), 
  COMP_BL_ADD_3        VARCHAR2 (30), 
  CONSTRAINT PK_COMP_01
  PRIMARY KEY ( COMP_CODE ) ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
COMP_NN_04 CHECK  ( COMP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
SYS_C005717 CHECK  ( COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
SYS_C005718 CHECK  ( COMP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
SYS_C005719 CHECK  ( COMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
SYS_C005720 CHECK  ( COMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
SYS_C005721 CHECK  ( COMP_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
FIN_C0018341 CHECK  ( COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
FIN_C0018342 CHECK  ( COMP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
FIN_C0018343 CHECK  ( COMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
FIN_C0018344 CHECK  ( COMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
FIN_C0018345 CHECK  ( COMP_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
COMP_CHK_01 CHECK  ( COMP_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
COMP_NN_01 CHECK  ( COMP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
COMP_NN_02 CHECK  ( COMP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_COMPANY ADD CONSTRAINT 
COMP_NN_03 CHECK  ( COMP_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_COMPANY
BEFORE INSERT OR UPDATE OR DELETE ON FM_COMPANY
FOR EACH ROW
DECLARE
 NEW_COMP_CODE             VARCHAR2(1) := NULL;
 NEW_COMP_NAME             VARCHAR2(1) := NULL;
 NEW_COMP_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_COMP_BL_NAME          VARCHAR2(1) := NULL;
 NEW_COMP_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_COMP_CTL_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_COMP_HEADER           VARCHAR2(1) := NULL;
 NEW_COMP_ADD_1            VARCHAR2(1) := NULL;
 NEW_COMP_ADD_2            VARCHAR2(1) := NULL;
 NEW_COMP_ADD_3            VARCHAR2(1) := NULL;
 NEW_COMP_BL_ADD_1         VARCHAR2(1) := NULL;
 NEW_COMP_BL_ADD_2         VARCHAR2(1) := NULL;
 NEW_COMP_BL_ADD_3         VARCHAR2(1) := NULL;
 NEW_COMP_DFLT_DIVN_CODE   VARCHAR2(1) := NULL;
 NEW_COMP_DFLT_DEPT_CODE   VARCHAR2(1) := NULL;
 NEW_COMP_CR_UID           VARCHAR2(1) := NULL;
 NEW_COMP_CR_DT            DATE        := NULL;
 NEW_COMP_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_COMPANY (
         :OLD.COMP_CODE,
         :OLD.COMP_NAME,
         :OLD.COMP_SHORT_NAME,
         :OLD.COMP_CTL_ACNT_CODE,
         :OLD.COMP_HEADER,
         :OLD.COMP_ADD_1,
         :OLD.COMP_ADD_2,
         :OLD.COMP_ADD_3,
         :OLD.COMP_DFLT_DIVN_CODE,
         :OLD.COMP_DFLT_DEPT_CODE,
         :OLD.COMP_CR_UID,
         :OLD.COMP_CR_DT,
         :NEW.COMP_FRZ_FLAG,
         :NEW.COMP_CODE,
         :NEW.COMP_NAME,
         :NEW.COMP_SHORT_NAME,
         :NEW.COMP_CTL_ACNT_CODE,
         :NEW.COMP_HEADER,
         :NEW.COMP_ADD_1,
         :NEW.COMP_ADD_2,
         :NEW.COMP_ADD_3,
         :NEW.COMP_DFLT_DIVN_CODE,
         :NEW.COMP_DFLT_DEPT_CODE,
         :NEW.COMP_CR_UID,
         :NEW.COMP_CR_DT,
         :NEW.COMP_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.COMP_BL_NAME,
         :NEW.COMP_BL_NAME,
         :OLD.COMP_BL_SHORT_NAME,
         :NEW.COMP_BL_SHORT_NAME,
         :OLD.COMP_BL_ADD_1,
         :NEW.COMP_BL_ADD_1,
         :OLD.COMP_BL_ADD_2,
         :NEW.COMP_BL_ADD_2,
         :OLD.COMP_BL_ADD_3,
         :NEW.COMP_BL_ADD_3 ) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_COMPANY (
         :OLD.COMP_CODE,
         :OLD.COMP_NAME,
         :OLD.COMP_SHORT_NAME,
         :OLD.COMP_CTL_ACNT_CODE,
         :OLD.COMP_HEADER,
         :OLD.COMP_ADD_1,
         :OLD.COMP_ADD_2,
         :OLD.COMP_ADD_3,
         :OLD.COMP_DFLT_DIVN_CODE,
         :OLD.COMP_DFLT_DEPT_CODE,
         :OLD.COMP_CR_UID,
         :OLD.COMP_CR_DT,
         :OLD.COMP_FRZ_FLAG,
         NEW_COMP_CODE,
         NEW_COMP_NAME,
         NEW_COMP_SHORT_NAME,
         NEW_COMP_CTL_ACNT_CODE,
         NEW_COMP_HEADER,
         NEW_COMP_ADD_1,
         NEW_COMP_ADD_2,
         NEW_COMP_ADD_3,
         NEW_COMP_DFLT_DIVN_CODE,
         NEW_COMP_DFLT_DEPT_CODE,
         NEW_COMP_CR_UID,
         NEW_COMP_CR_DT,
         NEW_COMP_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.COMP_BL_NAME,
         NEW_COMP_BL_NAME,
         :OLD.COMP_BL_SHORT_NAME,
         NEW_COMP_BL_SHORT_NAME,
         :OLD.COMP_BL_ADD_1,
         NEW_COMP_BL_ADD_1,
         :OLD.COMP_BL_ADD_2,
         NEW_COMP_BL_ADD_2,
         :OLD.COMP_BL_ADD_3,
         NEW_COMP_BL_ADD_3 ) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_COMPANY_AFTER
AFTER INSERT ON FM_COMPANY
FOR EACH ROW
BEGIN
     F_UPD_COMP_ACNT_PERIOD(:NEW.COMP_CODE, :NEW.COMP_CR_UID);
END;

/

/
CREATE TABLE FM_COMPANY_LOGO ( 
  LG_COMP_CODE  VARCHAR2 (3), 
  LG_LOGO_NAME  VARCHAR2 (30), 
  LG_CR_UID     VARCHAR2 (10), 
  LG_CR_DT      DATE ) 
/

/
CREATE TABLE FM_COMP_ACNT_YEAR ( 
  CAY_COMP_CODE       VARCHAR2 (3)  NOT NULL, 
  CAY_ACNT_YEAR       NUMBER (2)    NOT NULL, 
  CAY_FRM_DT          DATE, 
  CAY_TO_DT           DATE, 
  CAY_PREV_CURR_NEXT  VARCHAR2 (1), 
  CAY_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CAY_SUB_ACNT_CODE   VARCHAR2 (6), 
  CAY_CLO_UID         VARCHAR2 (10), 
  CAY_CLO_DT          DATE, 
  CAY_FRZ_FLAG        VARCHAR2 (1), 
  CAY_CR_UID          VARCHAR2 (10), 
  CAY_CR_DT           DATE, 
  CONSTRAINT PK_CAY_01
  PRIMARY KEY ( CAY_COMP_CODE, CAY_ACNT_YEAR ) ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
FIN_C0018346 CHECK  ( CAY_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
FIN_C0018347 CHECK  ( CAY_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
SYS_C005724 CHECK  ( CAY_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
SYS_C005725 CHECK  ( CAY_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
SYS_C005727 CHECK  ( CAY_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
CAY_CHK_01 CHECK  ( CAY_PREV_CURR_NEXT IN ('C','N','P')  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
CAY_CHK_02 CHECK  ( CAY_ACNT_YEAR >= 0  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
CAY_CHK_03 CHECK  ( CAY_TO_DT >= CAY_FRM_DT  ) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD CONSTRAINT 
SYS_C005731 CHECK  ( CAY_COMP_CODE IS NOT NULL  ) 
/



/
CREATE TABLE FM_CON_FORMAT ( 
  CON_FORMAT_ID       NUMBER (2)    NOT NULL, 
  CON_FORMAT_NAME     VARCHAR2 (30), 
  CON_CR_UID          VARCHAR2 (10), 
  CON_CR_DT           DATE, 
  CON_FRZ_FLAG        VARCHAR2 (2), 
  CON_BL_FORMAT_NAME  VARCHAR2 (30), 
  CONSTRAINT PK_CON_01
  PRIMARY KEY ( CON_FORMAT_ID ) ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C0018349 CHECK  ( CON_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C0018350 CHECK  ( CON_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C0018351 CHECK  ( CON_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C0018352 CHECK  ( CON_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C00498 CHECK  ( CON_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C00499 CHECK  ( CON_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C00500 CHECK  ( CON_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C00501 CHECK  ( CON_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005744 CHECK  ( CON_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005745 CHECK  ( CON_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005746 CHECK  ( CON_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005747 CHECK  ( CON_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005748 CHECK  ( CON_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005749 CHECK  ( CON_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005750 CHECK  ( CON_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005752 CHECK  ( CON_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005732 CHECK  ( CON_FORMAT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
SYS_C005733 CHECK  ( CON_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C00502 CHECK  ( CON_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_FORMAT ADD CONSTRAINT 
FIN_C0018348 CHECK  ( CON_FORMAT_ID IS NOT NULL  ) 
/



/
CREATE TABLE FM_CON_GROUPING ( 
  COG_FORMAT_ID  NUMBER (2), 
  COG_COMP_CODE  VARCHAR2 (3), 
  COG_DIVN_CODE  VARCHAR2 (6), 
  COG_DEPT_CODE  VARCHAR2 (6), 
  COG_CR_UID     VARCHAR2 (10), 
  COG_CR_DT      DATE, 
  COG_FRZ_FLAG   VARCHAR2 (1) ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C00506 CHECK  ( COG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C00507 CHECK  ( COG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005759 CHECK  ( COG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005760 CHECK  ( COG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005761 CHECK  ( COG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005762 CHECK  ( COG_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005763 CHECK  ( COG_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005764 CHECK  ( COG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005765 CHECK  ( COG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005766 CHECK  ( COG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005767 CHECK  ( COG_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
SYS_C005768 CHECK  ( COG_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C0018353 CHECK  ( COG_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C0018354 CHECK  ( COG_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C0018355 CHECK  ( COG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C0018356 CHECK  ( COG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C0018357 CHECK  ( COG_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C00503 CHECK  ( COG_FORMAT_ID IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C00504 CHECK  ( COG_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CON_GROUPING ADD CONSTRAINT 
FIN_C00505 CHECK  ( COG_CR_UID IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_CON_GROUP_01 ON 
  FM_CON_GROUPING(COG_FORMAT_ID) 

/

/
CREATE TABLE FM_CURRENCY ( 
  CURR_CODE          VARCHAR2 (3)  NOT NULL, 
  CURR_NAME          VARCHAR2 (15), 
  CURR_DECIMAL       NUMBER (1), 
  CURR_UNIT_NAME     VARCHAR2 (15), 
  CURR_CR_UID        VARCHAR2 (10)  DEFAULT 'TEST1', 
  CURR_CR_DT         DATE          DEFAULT SYSDATE, 
  CURR_FRZ_FLAG      VARCHAR2 (1)  DEFAULT 'N', 
  CURR_FMT_MASK      VARCHAR2 (20), 
  CURR_BL_NAME       VARCHAR2 (15), 
  CURR_BL_UNIT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_CURR_01
  PRIMARY KEY ( CURR_CODE ) ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_CHK_01 CHECK  ( CURR_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_NN_04 CHECK  ( CURR_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
SYS_C005780 CHECK  ( CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
FIN_C0018358 CHECK  ( CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
FIN_C0018359 CHECK  ( CURR_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
FIN_C0018360 CHECK  ( CURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
FIN_C0018361 CHECK  ( CURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
FIN_C0018362 CHECK  ( CURR_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
SYS_C005786 CHECK  ( CURR_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
SYS_C005787 CHECK  ( CURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
SYS_C005788 CHECK  ( CURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
SYS_C005789 CHECK  ( CURR_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_CHK_02 CHECK  ( CURR_DECIMAL BETWEEN 0 AND 3  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_NN_01 CHECK  ( CURR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_NN_02 CHECK  ( CURR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CURRENCY ADD CONSTRAINT 
CURR_NN_03 CHECK  ( CURR_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_CURRENCY
BEFORE INSERT OR UPDATE OR DELETE ON FM_CURRENCY
FOR EACH ROW
DECLARE
 NEW_CURR_CODE             VARCHAR2(1) := NULL;
 NEW_CURR_NAME             VARCHAR2(1) := NULL;
 NEW_CURR_BL_NAME          VARCHAR2(1) := NULL;
 NEW_CURR_DECIMAL          NUMBER(1)   := NULL;
 NEW_CURR_UNIT_NAME        VARCHAR2(1) := NULL;
 NEW_CURR_BL_UNIT_NAME     VARCHAR2(1) := NULL;
 NEW_CURR_CR_UID           VARCHAR2(1) := NULL;
 NEW_CURR_CR_DT            DATE        := NULL;
 NEW_CURR_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_CURRENCY (
         :OLD.CURR_CODE,
         :OLD.CURR_NAME,
         :OLD.CURR_DECIMAL,
         :OLD.CURR_UNIT_NAME,
         :OLD.CURR_CR_UID,
         :OLD.CURR_CR_DT,
         :OLD.CURR_FRZ_FLAG,
         :NEW.CURR_CODE,
         :NEW.CURR_NAME,
         :NEW.CURR_DECIMAL,
         :NEW.CURR_UNIT_NAME,
         :NEW.CURR_CR_UID,
         :NEW.CURR_CR_DT,
         :NEW.CURR_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.CURR_BL_NAME,
         :NEW.CURR_BL_NAME,
         :OLD.CURR_BL_UNIT_NAME,
         :NEW.CURR_BL_UNIT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_CURRENCY (
         :OLD.CURR_CODE,
         :OLD.CURR_NAME,
         :OLD.CURR_DECIMAL,
         :OLD.CURR_UNIT_NAME,
         :OLD.CURR_CR_UID,
         :OLD.CURR_CR_DT,
         :OLD.CURR_FRZ_FLAG,
         NEW_CURR_CODE,
         NEW_CURR_NAME,
         NEW_CURR_DECIMAL,
         NEW_CURR_UNIT_NAME,
         NEW_CURR_CR_UID,
         NEW_CURR_CR_DT,
         NEW_CURR_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.CURR_BL_NAME,
         NEW_CURR_BL_NAME,
         :OLD.CURR_BL_UNIT_NAME,
         NEW_CURR_BL_UNIT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_CUSTOMER ( 
  CUST_CODE            VARCHAR2 (6)  NOT NULL, 
  CUST_NAME            VARCHAR2 (60), 
  CUST_SHORT_NAME      VARCHAR2 (15), 
  CUST_ADD_1           VARCHAR2 (30), 
  CUST_ADD_2           VARCHAR2 (30), 
  CUST_ADD_3           VARCHAR2 (30), 
  CUST_COUNTRY         VARCHAR2 (15), 
  CUST_PHONE           VARCHAR2 (15), 
  CUST_TELEX_FAX       VARCHAR2 (15), 
  CUST_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CUST_CR_LMT_AMT      NUMBER (14,3), 
  CUST_CR_LMT_DAYS     NUMBER (3), 
  CUST_CONTACT         VARCHAR2 (15), 
  CUST_AREA            VARCHAR2 (15), 
  CUST_SM              VARCHAR2 (15), 
  CUST_DESC            VARCHAR2 (2000), 
  CUST_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  CUST_CR_DT           DATE          DEFAULT SYSDATE, 
  CUST_FRZ_FLAG        VARCHAR2 (1)  DEFAULT 'N', 
  CUST_FAX             VARCHAR2 (15), 
  CUST_BL_NAME         VARCHAR2 (60), 
  CUST_BL_SHORT_NAME   VARCHAR2 (15), 
  CUST_BL_ADD_1        VARCHAR2 (30), 
  CUST_BL_ADD_2        VARCHAR2 (30), 
  CUST_BL_ADD_3        VARCHAR2 (30), 
  CONSTRAINT PK_CUST_01
  PRIMARY KEY ( CUST_CODE ) ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
FIN_C0018366 CHECK  ( CUST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
FIN_C0018365 CHECK  ( CUST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
FIN_C0018367 CHECK  ( CUST_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
FIN_C0018363 CHECK  ( CUST_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
FIN_C0018364 CHECK  ( CUST_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_CHK_01 CHECK  ( CUST_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_CHK_02 CHECK  ( NVL(CUST_CR_LMT_AMT,0) >= 0  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_CHK_03 CHECK  ( NVL(CUST_CR_LMT_DAYS,0) >= 0  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_NN_01 CHECK  ( CUST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_NN_02 CHECK  ( CUST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_NN_03 CHECK  ( CUST_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
CUST_NN_04 CHECK  ( CUST_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
SYS_C005803 CHECK  ( CUST_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
SYS_C005804 CHECK  ( CUST_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
SYS_C005805 CHECK  ( CUST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
SYS_C005806 CHECK  ( CUST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_CUSTOMER ADD CONSTRAINT 
SYS_C005807 CHECK  ( CUST_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_CUSTOMER
BEFORE INSERT OR UPDATE OR DELETE ON FM_CUSTOMER
FOR EACH ROW
DECLARE
 NEW_CUST_CODE             VARCHAR2(1) := NULL;
 NEW_CUST_NAME             VARCHAR2(1) := NULL;
 NEW_CUST_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_CUST_ADD_1            VARCHAR2(1) := NULL;
 NEW_CUST_ADD_2            VARCHAR2(1) := NULL;
 NEW_CUST_ADD_3            VARCHAR2(1) := NULL;
 NEW_CUST_BL_NAME          VARCHAR2(1) := NULL;
 NEW_CUST_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_CUST_BL_ADD_1         VARCHAR2(1) := NULL;
 NEW_CUST_BL_ADD_2         VARCHAR2(1) := NULL;
 NEW_CUST_BL_ADD_3         VARCHAR2(1) := NULL;
 NEW_CUST_COUNTRY          VARCHAR2(1) := NULL;
 NEW_CUST_PHONE            VARCHAR2(1) := NULL;
 NEW_CUST_TELEX_FAX        VARCHAR2(1) := NULL;
 NEW_CUST_MAIN_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_CUST_CR_LMT_AMT       NUMBER(1) := NULL;
 NEW_CUST_CR_LMT_DAYS      NUMBER(1) := NULL;
 NEW_CUST_CONTACT          VARCHAR2(1) := NULL;
 NEW_CUST_AREA             VARCHAR2(1) := NULL;
 NEW_CUST_SM               VARCHAR2(1) := NULL;
 NEW_CUST_DESC             VARCHAR2(1) := NULL;
 NEW_CUST_CR_UID           VARCHAR2(1) := NULL;
 NEW_CUST_CR_DT            DATE        := NULL;
 NEW_CUST_FRZ_FLAG         VARCHAR2(1) := NULL;
 NEW_CUST_FAX              VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_CUSTOMER (
         :OLD.CUST_CODE,
         :OLD.CUST_NAME,
         :OLD.CUST_SHORT_NAME,
         :OLD.CUST_ADD_1,
         :OLD.CUST_ADD_2,
         :OLD.CUST_ADD_3,
         :OLD.CUST_COUNTRY,
         :OLD.CUST_PHONE,
         :OLD.CUST_TELEX_FAX,
         :OLD.CUST_MAIN_ACNT_CODE,
         :OLD.CUST_CR_LMT_AMT,
         :OLD.CUST_CR_LMT_DAYS,
         :OLD.CUST_CONTACT,
         :OLD.CUST_AREA,
         :OLD.CUST_SM,
         :OLD.CUST_DESC,
         :OLD.CUST_CR_UID,
         :OLD.CUST_CR_DT,
         :OLD.CUST_FRZ_FLAG,
         :OLD.CUST_FAX,
         :NEW.CUST_CODE,
         :NEW.CUST_NAME,
         :NEW.CUST_SHORT_NAME,
         :NEW.CUST_ADD_1,
         :NEW.CUST_ADD_2,
         :NEW.CUST_ADD_3,
         :NEW.CUST_COUNTRY,
         :NEW.CUST_PHONE,
         :NEW.CUST_TELEX_FAX,
         :NEW.CUST_MAIN_ACNT_CODE,
         :NEW.CUST_CR_LMT_AMT,
         :NEW.CUST_CR_LMT_DAYS,
         :NEW.CUST_CONTACT,
         :NEW.CUST_AREA,
         :NEW.CUST_SM,
         :NEW.CUST_DESC,
         :NEW.CUST_CR_UID,
         :NEW.CUST_CR_DT,
         :NEW.CUST_FRZ_FLAG,
         :NEW.CUST_FAX,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.CUST_BL_NAME,
         :NEW.CUST_BL_NAME,
         :OLD.CUST_BL_SHORT_NAME,
         :NEW.CUST_BL_SHORT_NAME,
         :OLD.CUST_BL_ADD_1,
         :NEW.CUST_BL_ADD_1,
         :OLD.CUST_BL_ADD_2,
         :NEW.CUST_BL_ADD_2,
         :OLD.CUST_BL_ADD_3,
         :NEW.CUST_BL_ADD_3) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_CUSTOMER (
         :OLD.CUST_CODE,
         :OLD.CUST_NAME,
         :OLD.CUST_SHORT_NAME,
         :OLD.CUST_ADD_1,
         :OLD.CUST_ADD_2,
         :OLD.CUST_ADD_3,
         :OLD.CUST_COUNTRY,
         :OLD.CUST_PHONE,
         :OLD.CUST_TELEX_FAX,
         :OLD.CUST_MAIN_ACNT_CODE,
         :OLD.CUST_CR_LMT_AMT,
         :OLD.CUST_CR_LMT_DAYS,
         :OLD.CUST_CONTACT,
         :OLD.CUST_AREA,
         :OLD.CUST_SM,
         :OLD.CUST_DESC,
         :OLD.CUST_CR_UID,
         :OLD.CUST_CR_DT,
         :OLD.CUST_FRZ_FLAG,
         :OLD.CUST_FAX,
         NEW_CUST_CODE,
         NEW_CUST_NAME,
         NEW_CUST_SHORT_NAME,
         NEW_CUST_ADD_1,
         NEW_CUST_ADD_2,
         NEW_CUST_ADD_3,
         NEW_CUST_COUNTRY,
         NEW_CUST_PHONE,
         NEW_CUST_TELEX_FAX,
         NEW_CUST_MAIN_ACNT_CODE,
         NEW_CUST_CR_LMT_AMT,
         NEW_CUST_CR_LMT_DAYS,
         NEW_CUST_CONTACT,
         NEW_CUST_AREA,
         NEW_CUST_SM,
         NEW_CUST_DESC,
         NEW_CUST_CR_UID,
         NEW_CUST_CR_DT,
         NEW_CUST_FRZ_FLAG,
         NEW_CUST_FAX,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.CUST_BL_NAME,
         NEW_CUST_BL_NAME,
         :OLD.CUST_BL_SHORT_NAME,
         NEW_CUST_BL_SHORT_NAME,
         :OLD.CUST_BL_ADD_1,
         NEW_CUST_BL_ADD_1,
         :OLD.CUST_BL_ADD_2,
         NEW_CUST_BL_ADD_2,
         :OLD.CUST_BL_ADD_3,
         NEW_CUST_BL_ADD_3) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_DEFAULT_ACNT_SETUP ( 
  DAS_COMP_CODE          VARCHAR2 (3), 
  DAS_MAIN_ACNT_CODE     VARCHAR2 (6), 
  DAS_SUB_ACNT_CODE      VARCHAR2 (6), 
  DAS_DIVN_CODE          VARCHAR2 (6), 
  DAS_DEPT_CODE          VARCHAR2 (6), 
  DAS_HEAD_NO_1          NUMBER (1), 
  DAS_ANLY_CODE_1        VARCHAR2 (6), 
  DAS_HEAD_NO_2          NUMBER (1), 
  DAS_ANLY_CODE_2        VARCHAR2 (6), 
  DAS_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  DAS_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  DAS_CR_UID             VARCHAR2 (10), 
  DAS_CR_DT              DATE ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD  CONSTRAINT PK_DAS_01
 UNIQUE (DAS_COMP_CODE, DAS_MAIN_ACNT_CODE, DAS_SUB_ACNT_CODE) 
/



ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
FIN_C0021011 CHECK  ( DAS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
FIN_C0021012 CHECK  ( DAS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
FIN_C0021013 CHECK  ( DAS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
SYS_C005812 CHECK  ( DAS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
SYS_C005813 CHECK  ( DAS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DEFAULT_ACNT_SETUP ADD CONSTRAINT 
SYS_C005814 CHECK  ( DAS_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FM_DEPARTMENT ( 
  DEPT_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  DEPT_DIVN_CODE      VARCHAR2 (6)  NOT NULL, 
  DEPT_CODE           VARCHAR2 (6)  NOT NULL, 
  DEPT_NAME           VARCHAR2 (30), 
  DEPT_SHORT_NAME     VARCHAR2 (15), 
  DEPT_HEADER         VARCHAR2 (5), 
  DEPT_INCHARGE       VARCHAR2 (15), 
  DEPT_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  DEPT_CR_DT          DATE          DEFAULT SYSDATE, 
  DEPT_FRZ_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  DEPT_BL_NAME        VARCHAR2 (30), 
  DEPT_BL_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_DEPT_01
  PRIMARY KEY ( DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE ) ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018374 CHECK  ( DEPT_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005816 CHECK  ( DEPT_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018368 CHECK  ( DEPT_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018369 CHECK  ( DEPT_DIVN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018370 CHECK  ( DEPT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018371 CHECK  ( DEPT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018372 CHECK  ( DEPT_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
FIN_C0018373 CHECK  ( DEPT_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005824 CHECK  ( DEPT_DIVN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005825 CHECK  ( DEPT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005826 CHECK  ( DEPT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005827 CHECK  ( DEPT_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005828 CHECK  ( DEPT_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
SYS_C005829 CHECK  ( DEPT_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
DEPT_CHK_01 CHECK  ( DEPT_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
DEPT_NN_01 CHECK  ( DEPT_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
DEPT_NN_02 CHECK  ( DEPT_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
DEPT_NN_03 CHECK  ( DEPT_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DEPARTMENT ADD CONSTRAINT 
DEPT_NN_04 CHECK  ( DEPT_NAME IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_DEPARTMENT
BEFORE INSERT OR UPDATE OR DELETE ON FM_DEPARTMENT
FOR EACH ROW
DECLARE
 NEW_DEPT_COMP_CODE        VARCHAR2(1) := NULL;
 NEW_DEPT_DIVN_CODE        VARCHAR2(1) := NULL;
 NEW_DEPT_CODE             VARCHAR2(1) := NULL;
 NEW_DEPT_NAME             VARCHAR2(1) := NULL;
 NEW_DEPT_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_DEPT_BL_NAME          VARCHAR2(1) := NULL;
 NEW_DEPT_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_DEPT_HEADER           VARCHAR2(1) := NULL;
 NEW_DEPT_INCHARGE         VARCHAR2(1) := NULL;
 NEW_DEPT_CR_UID           VARCHAR2(1) := NULL;
 NEW_DEPT_CR_DT            DATE        := NULL;
 NEW_DEPT_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_DEPARTMENT (
         :OLD.DEPT_COMP_CODE,
         :OLD.DEPT_DIVN_CODE,
         :OLD.DEPT_CODE,
         :OLD.DEPT_NAME,
         :OLD.DEPT_SHORT_NAME,
         :OLD.DEPT_HEADER,
         :OLD.DEPT_INCHARGE,
         :OLD.DEPT_CR_UID,
         :OLD.DEPT_CR_DT,
         :OLD.DEPT_FRZ_FLAG,
         :NEW.DEPT_COMP_CODE,
         :NEW.DEPT_DIVN_CODE,
         :NEW.DEPT_CODE,
         :NEW.DEPT_NAME,
         :NEW.DEPT_SHORT_NAME,
         :NEW.DEPT_HEADER,
         :NEW.DEPT_INCHARGE,
         :NEW.DEPT_CR_UID,
         :NEW.DEPT_CR_DT,
         :NEW.DEPT_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.DEPT_BL_NAME,
         :NEW.DEPT_BL_NAME,
         :OLD.DEPT_BL_SHORT_NAME,
         :NEW.DEPT_BL_SHORT_NAME);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_DEPARTMENT (
         :OLD.DEPT_COMP_CODE,
         :OLD.DEPT_DIVN_CODE,
         :OLD.DEPT_CODE,
         :OLD.DEPT_NAME,
         :OLD.DEPT_SHORT_NAME,
         :OLD.DEPT_HEADER,
         :OLD.DEPT_INCHARGE,
         :OLD.DEPT_CR_UID,
         :OLD.DEPT_CR_DT,
         :OLD.DEPT_FRZ_FLAG,
         NEW_DEPT_COMP_CODE,
         NEW_DEPT_DIVN_CODE,
         NEW_DEPT_CODE,
         NEW_DEPT_NAME,
         NEW_DEPT_SHORT_NAME,
         NEW_DEPT_HEADER,
         NEW_DEPT_INCHARGE,
         NEW_DEPT_CR_UID,
         NEW_DEPT_CR_DT,
         NEW_DEPT_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.DEPT_BL_NAME,
         NEW_DEPT_BL_NAME,
         :OLD.DEPT_BL_SHORT_NAME,
         NEW_DEPT_BL_SHORT_NAME);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_DIVISION ( 
  DIVN_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  DIVN_CODE           VARCHAR2 (6)  NOT NULL, 
  DIVN_NAME           VARCHAR2 (30), 
  DIVN_SHORT_NAME     VARCHAR2 (15), 
  DIVN_HEADER         VARCHAR2 (5), 
  DIVN_INCHARGE       VARCHAR2 (15), 
  DIVN_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  DIVN_CR_DT          DATE          DEFAULT SYSDATE, 
  DIVN_FRZ_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  DIVN_BL_NAME        VARCHAR2 (30), 
  DIVN_BL_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_DIVN_01
  PRIMARY KEY ( DIVN_COMP_CODE, DIVN_CODE ) ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018379 CHECK  ( DIVN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018376 CHECK  ( DIVN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018377 CHECK  ( DIVN_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018378 CHECK  ( DIVN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018380 CHECK  ( DIVN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005845 CHECK  ( DIVN_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005846 CHECK  ( DIVN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005847 CHECK  ( DIVN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005848 CHECK  ( DIVN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
DIVN_CHK_01 CHECK  ( DIVN_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
DIVN_NN_01 CHECK  ( DIVN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
DIVN_NN_02 CHECK  ( DIVN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
DIVN_NN_03 CHECK  ( DIVN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
DIVN_NN_04 CHECK  ( DIVN_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005837 CHECK  ( DIVN_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
SYS_C005838 CHECK  ( DIVN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_DIVISION ADD CONSTRAINT 
FIN_C0018375 CHECK  ( DIVN_COMP_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_DIVISION
BEFORE INSERT OR UPDATE OR DELETE ON FM_DIVISION
FOR EACH ROW
DECLARE
 NEW_DIVN_COMP_CODE        VARCHAR2(1) := NULL;
 NEW_DIVN_CODE             VARCHAR2(1) := NULL;
 NEW_DIVN_NAME             VARCHAR2(1) := NULL;
 NEW_DIVN_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_DIVN_BL_NAME          VARCHAR2(1) := NULL;
 NEW_DIVN_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_DIVN_HEADER           VARCHAR2(1) := NULL;
 NEW_DIVN_INCHARGE         VARCHAR2(1) := NULL;
 NEW_DIVN_CR_UID           VARCHAR2(1) := NULL;
 NEW_DIVN_CR_DT            DATE        := NULL;
 NEW_DIVN_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_DIVISION (
         :OLD.DIVN_COMP_CODE,
         :OLD.DIVN_CODE,
         :OLD.DIVN_NAME,
         :OLD.DIVN_SHORT_NAME,
         :OLD.DIVN_HEADER,
         :OLD.DIVN_INCHARGE,
         :OLD.DIVN_CR_UID,
         :OLD.DIVN_CR_DT,
         :OLD.DIVN_FRZ_FLAG,
         :NEW.DIVN_COMP_CODE,
         :NEW.DIVN_CODE,
         :NEW.DIVN_NAME,
         :NEW.DIVN_SHORT_NAME,
         :NEW.DIVN_HEADER,
         :NEW.DIVN_INCHARGE,
         :NEW.DIVN_CR_UID,
         :NEW.DIVN_CR_DT,
         :NEW.DIVN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.DIVN_BL_NAME,
         :NEW.DIVN_BL_NAME,
         :OLD.DIVN_BL_SHORT_NAME,
         :NEW.DIVN_BL_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_DIVISION (
         :OLD.DIVN_COMP_CODE,
         :OLD.DIVN_CODE,
         :OLD.DIVN_NAME,
         :OLD.DIVN_SHORT_NAME,
         :OLD.DIVN_HEADER,
         :OLD.DIVN_INCHARGE,
         :OLD.DIVN_CR_UID,
         :OLD.DIVN_CR_DT,
         :OLD.DIVN_FRZ_FLAG,
         NEW_DIVN_COMP_CODE,
         NEW_DIVN_CODE,
         NEW_DIVN_NAME,
         NEW_DIVN_SHORT_NAME,
         NEW_DIVN_HEADER,
         NEW_DIVN_INCHARGE,
         NEW_DIVN_CR_UID,
         NEW_DIVN_CR_DT,
         NEW_DIVN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.DIVN_BL_NAME,
         NEW_DIVN_BL_NAME,
         :OLD.DIVN_BL_SHORT_NAME,
         NEW_DIVN_BL_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_EXCHANGE_RATE ( 
  CER_CURR_CODE       VARCHAR2 (3)  NOT NULL, 
  CER_EFF_FRM_DT      DATE          NOT NULL, 
  CER_EFF_TO_DT       DATE, 
  CER_BUY_EXGE_RATE   NUMBER (12,8), 
  CER_SELL_EXGE_RATE  NUMBER (12,8), 
  CER_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  CER_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_CER_01
  PRIMARY KEY ( CER_CURR_CODE, CER_EFF_FRM_DT ) ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_05 CHECK  ( CER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_01 CHECK  ( CER_EFF_FRM_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_02 CHECK  ( CER_EFF_TO_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_03 CHECK  ( CER_BUY_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_04 CHECK  ( CER_SELL_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_NN_06 CHECK  ( CER_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005867 CHECK  ( CER_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005868 CHECK  ( CER_EFF_FRM_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005869 CHECK  ( CER_EFF_TO_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018387 CHECK  ( CER_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018381 CHECK  ( CER_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018382 CHECK  ( CER_EFF_FRM_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018383 CHECK  ( CER_EFF_TO_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018384 CHECK  ( CER_BUY_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018385 CHECK  ( CER_SELL_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
FIN_C0018386 CHECK  ( CER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005853 CHECK  ( CER_BUY_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005854 CHECK  ( CER_SELL_EXGE_RATE IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005855 CHECK  ( CER_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
SYS_C005856 CHECK  ( CER_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_CHK_01 CHECK  ( CER_EFF_TO_DT >= CER_EFF_FRM_DT  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_CHK_02 CHECK  ( CER_BUY_EXGE_RATE > 0  ) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD CONSTRAINT 
CER_CHK_03 CHECK  ( CER_SELL_EXGE_RATE > 0  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_EXCHANGE_RATE_ROW
BEFORE INSERT OR DELETE OR UPDATE ON FM_EXCHANGE_RATE
FOR EACH ROW
DECLARE
          P_PARA_VALUE VARCHAR2(50);
          CURSOR FET_BASE_CUR IS
                  SELECT PARA_VALUE FROM
                  FP_PARAMETER
                  WHERE PARA_ID = 'BASE.CURR';
BEGIN
            IF INSERTING OR UPDATING THEN
                 :NEW.CER_CR_DT := SYSDATE;
                 :NEW.CER_CR_UID := NVL(:NEW.CER_CR_UID,
                                      NVL(:OLD.CER_CR_UID, 'UNDEF'));
            END IF;
            IF FET_BASE_CUR%ISOPEN THEN
                 CLOSE FET_BASE_CUR;
            END IF;
             OPEN FET_BASE_CUR;
             FETCH FET_BASE_CUR INTO P_PARA_VALUE;
             CLOSE FET_BASE_CUR;
               IF UPDATING OR DELETING THEN
                  IF P_PARA_VALUE = :OLD.CER_CURR_CODE THEN
                     RAISE_APPLICATION_ERROR
                           (-20005, 'Cannot Delete/Update Base Currency');
                  END IF;
               END IF;
               IF INSERTING THEN
                 IF P_PARA_VALUE = :NEW.CER_CURR_CODE THEN
                    RAISE_APPLICATION_ERROR
                          (-20006, 'Cannot Insert Base Currency');
                  ELSE
                    IF :NEW.CER_EFF_TO_DT IS NULL THEN
                       :NEW.CER_EFF_TO_DT := TO_DATE('31-DEC-2099','DD-MON-YYYY');
                    END IF;
               END IF;
            END IF;
             IF UPDATING OR DELETING THEN
               INSERT INTO FH_EXCHANGE_RATE_HIST
                                       VALUES ( :OLD.CER_CURR_CODE,
                                                :OLD.CER_EFF_FRM_DT,
                                                :OLD.CER_EFF_TO_DT,
                                                :OLD.CER_BUY_EXGE_RATE,
                                                :OLD.CER_SELL_EXGE_RATE,
                                                :OLD.CER_CR_UID,
                                                :OLD.CER_CR_DT);
             END IF;
END;

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_EXCHANGE_RATE_TABLE
AFTER INSERT ON FM_EXCHANGE_RATE
DECLARE
     CURSOR CUR_CER_CURR_CODE IS
            SELECT  CER_CURR_CODE,
                    CER_EFF_FRM_DT
            FROM    FM_EXCHANGE_RATE
            WHERE   CER_EFF_TO_DT = TO_DATE('31-DEC-2099','DD-MON-YYYY')
            ORDER BY CER_CURR_CODE, CER_EFF_FRM_DT;
     P_CURR1 VARCHAR2(3);
     P_CURR2 VARCHAR2(3);
     P_FRMDT1 DATE;
     P_FRMDT2 DATE;
BEGIN
     IF CUR_CER_CURR_CODE%ISOPEN THEN
          CLOSE CUR_CER_CURR_CODE;
     END IF;
     OPEN CUR_CER_CURR_CODE;
     FETCH CUR_CER_CURR_CODE INTO P_CURR1, P_FRMDT1;
     FETCH CUR_CER_CURR_CODE INTO P_CURR2, P_FRMDT2;
     WHILE NOT CUR_CER_CURR_CODE%NOTFOUND
     LOOP
           IF P_CURR1  = P_CURR2  THEN
              UPDATE FM_EXCHANGE_RATE
              SET CER_EFF_TO_DT = P_FRMDT2 - 1
              WHERE CER_EFF_FRM_DT = P_FRMDT1
              AND CER_CURR_CODE = P_CURR1;
              FETCH CUR_CER_CURR_CODE INTO P_CURR1, P_FRMDT1;
              FETCH CUR_CER_CURR_CODE INTO P_CURR2, P_FRMDT2;
           ELSE
               P_FRMDT1 := P_FRMDT2;
               P_CURR1  := P_CURR2;
               FETCH CUR_CER_CURR_CODE INTO P_CURR2, P_FRMDT2;
          END IF;
     END LOOP;
     CLOSE CUR_CER_CURR_CODE;
END;

/

/
CREATE TABLE FM_FOREX_LINK ( 
  FL_MAIN_ACNT_CODE    VARCHAR2 (6), 
  FL_SUB_ACNT_CODE     VARCHAR2 (6), 
  FL_CURR_CODE         VARCHAR2 (3), 
  FL_MAIN_ACNT_CODE_1  VARCHAR2 (6), 
  FL_SUB_ACNT_CODE_1   VARCHAR2 (6), 
  FL_MAIN_ACNT_CODE_2  VARCHAR2 (6), 
  FL_SUB_ACNT_CODE_2   VARCHAR2 (6), 
  FL_CR_UID            VARCHAR2 (10), 
  FL_CR_DT             DATE, 
  FL_COMP_CODE         VARCHAR2 (3), 
  FL_CURR_CODE_1       VARCHAR2 (3) ) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT PK_FL_01
 UNIQUE (FL_MAIN_ACNT_CODE, FL_SUB_ACNT_CODE, FL_CURR_CODE) 
/



ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018392 CHECK  ( FL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_01 CHECK  ( FL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_02 CHECK  ( FL_MAIN_ACNT_CODE_1 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_03 CHECK  ( FL_MAIN_ACNT_CODE_2 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_04 CHECK  ( FL_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_05 CHECK  ( FL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FL_NN_06 CHECK  ( FL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005888 CHECK  ( FL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005889 CHECK  ( FL_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005890 CHECK  ( FL_MAIN_ACNT_CODE_1 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005891 CHECK  ( FL_MAIN_ACNT_CODE_2 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005892 CHECK  ( FL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005893 CHECK  ( FL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005894 CHECK  ( FL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018393 CHECK  ( FL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0022265 CHECK  ( FL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0022266 CHECK  ( FL_CURR_CODE_1 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018388 CHECK  ( FL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018389 CHECK  ( FL_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018390 CHECK  ( FL_MAIN_ACNT_CODE_1 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
FIN_C0018391 CHECK  ( FL_MAIN_ACNT_CODE_2 IS NOT NULL  ) 
/

ALTER TABLE FM_FOREX_LINK ADD CONSTRAINT 
SYS_C005880 CHECK  ( FL_CURR_CODE_1 IS NOT NULL  ) 
/



/
CREATE TABLE FM_MAIN_ACCOUNT ( 
  MAIN_ACNT_CODE           VARCHAR2 (6)  NOT NULL, 
  MAIN_ACNT_NAME           VARCHAR2 (60), 
  MAIN_ACNT_SHORT_NAME     VARCHAR2 (15), 
  MAIN_ACNT_CATG           VARCHAR2 (2), 
  MAIN_CTL_ACNT_FLAG       VARCHAR2 (1)  DEFAULT 'M', 
  MAIN_ACTY_CODE_1         VARCHAR2 (6), 
  MAIN_ACTY_CODE_2         VARCHAR2 (6), 
  MAIN_ACNT_TYPE           VARCHAR2 (1)  DEFAULT 'E', 
  MAIN_OPEN_ENTRY_FLAG     VARCHAR2 (1)  DEFAULT 'Y', 
  MAIN_DESC                VARCHAR2 (2000), 
  MAIN_CR_UID              VARCHAR2 (10)  DEFAULT 'TEST1', 
  MAIN_CR_DT               DATE          DEFAULT SYSDATE, 
  MAIN_FRZ_FLAG            VARCHAR2 (1)  DEFAULT 'N', 
  MAIN_BL_ACNT_NAME        VARCHAR2 (60), 
  MAIN_BL_ACNT_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_MAIN_01
  PRIMARY KEY ( MAIN_ACNT_CODE ) ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018397 CHECK  ( MAIN_CTL_ACNT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_01 CHECK  ( MAIN_CTL_ACNT_FLAG IN ('M','C')  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_05 CHECK  ( MAIN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018394 CHECK  ( MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018395 CHECK  ( MAIN_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018396 CHECK  ( MAIN_ACNT_CATG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018398 CHECK  ( MAIN_ACNT_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018399 CHECK  ( MAIN_OPEN_ENTRY_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018400 CHECK  ( MAIN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018401 CHECK  ( MAIN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
FIN_C0018402 CHECK  ( MAIN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_06 CHECK  ( MAIN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_07 CHECK  ( MAIN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005902 CHECK  ( MAIN_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005903 CHECK  ( MAIN_ACNT_CATG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005904 CHECK  ( MAIN_CTL_ACNT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005905 CHECK  ( MAIN_ACNT_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005906 CHECK  ( MAIN_OPEN_ENTRY_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005907 CHECK  ( MAIN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005908 CHECK  ( MAIN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005909 CHECK  ( MAIN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_02 CHECK  ( MAIN_ACNT_TYPE IN ('A','L','I','E')  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_03 CHECK  ( MAIN_OPEN_ENTRY_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_04 CHECK  ( MAIN_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_05 CHECK  (   MAIN_ACTY_CODE_1   IS   NOT   NULL   OR MAIN_ACTY_CODE_2 IS NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_CHK_06 CHECK  (   MAIN_ACTY_CODE_1   IS    NULL    OR (NVL(MAIN_ACTY_CODE_1,'000000') != NVL(MAIN_ACTY_CODE_2,'000000'))  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_01 CHECK  ( MAIN_CTL_ACNT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_02 CHECK  ( MAIN_ACNT_CATG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_03 CHECK  ( MAIN_ACNT_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_04 CHECK  ( MAIN_OPEN_ENTRY_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
MAIN_NN_08 CHECK  ( MAIN_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD CONSTRAINT 
SYS_C005901 CHECK  ( MAIN_ACNT_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_MAIN_ACCOUNT" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_MAIN_ACCOUNT REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_MAIN_ACNT_CODE        VARCHAR2(1) := NULL;
 NEW_MAIN_ACNT_NAME        VARCHAR2(1) := NULL;
 NEW_MAIN_ACNT_SHORT_NAME  VARCHAR2(1) := NULL;
 NEW_MAIN_BL_ACNT_NAME        VARCHAR2(1) := NULL;
 NEW_MAIN_BL_ACNT_SHORT_NAME  VARCHAR2(1) := NULL;
 NEW_MAIN_ACNT_CATG        VARCHAR2(1) := NULL;
 NEW_MAIN_CTL_ACNT_FLAG    VARCHAR2(1) := NULL;
 NEW_MAIN_ACTY_CODE_1      VARCHAR2(1) := NULL;
 NEW_MAIN_ACTY_CODE_2      VARCHAR2(1) := NULL;
 NEW_MAIN_ACNT_TYPE        VARCHAR2(1) := NULL;
 NEW_MAIN_OPEN_ENTRY_FLAG  VARCHAR2(1) := NULL;
 NEW_MAIN_DESC             VARCHAR2(1) := NULL;
 NEW_MAIN_CR_UID           VARCHAR2(1) := NULL;
 NEW_MAIN_CR_DT            DATE        := NULL;
 NEW_MAIN_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_MAIN_ACCOUNT (
         :OLD.MAIN_ACNT_CODE,
         :OLD.MAIN_ACNT_NAME,
         :OLD.MAIN_ACNT_SHORT_NAME,
         :OLD.MAIN_ACNT_CATG,
         :OLD.MAIN_CTL_ACNT_FLAG,
         :OLD.MAIN_ACTY_CODE_1,
         :OLD.MAIN_ACTY_CODE_2,
         :OLD.MAIN_ACNT_TYPE,
         :OLD.MAIN_OPEN_ENTRY_FLAG,
         :OLD.MAIN_DESC,
         :OLD.MAIN_CR_UID,
         :OLD.MAIN_CR_DT,
         :OLD.MAIN_FRZ_FLAG,
         :NEW.MAIN_ACNT_CODE,
         :NEW.MAIN_ACNT_NAME,
         :NEW.MAIN_ACNT_SHORT_NAME,
         :NEW.MAIN_ACNT_CATG,
         :NEW.MAIN_CTL_ACNT_FLAG,
         :NEW.MAIN_ACTY_CODE_1,
         :NEW.MAIN_ACTY_CODE_2,
         :NEW.MAIN_ACNT_TYPE,
         :NEW.MAIN_OPEN_ENTRY_FLAG,
         :NEW.MAIN_DESC,
         :NEW.MAIN_CR_UID,
         :NEW.MAIN_CR_DT,
         :NEW.MAIN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.MAIN_BL_ACNT_NAME,
         :NEW.MAIN_BL_ACNT_NAME,
         :OLD.MAIN_BL_ACNT_SHORT_NAME,
         :NEW.MAIN_BL_ACNT_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_MAIN_ACCOUNT (
         :OLD.MAIN_ACNT_CODE,
         :OLD.MAIN_ACNT_NAME,
         :OLD.MAIN_ACNT_SHORT_NAME,
         :OLD.MAIN_ACNT_CATG,
         :OLD.MAIN_CTL_ACNT_FLAG,
         :OLD.MAIN_ACTY_CODE_1,
         :OLD.MAIN_ACTY_CODE_2,
         :OLD.MAIN_ACNT_TYPE,
         :OLD.MAIN_OPEN_ENTRY_FLAG,
         :OLD.MAIN_DESC,
         :OLD.MAIN_CR_UID,
         :OLD.MAIN_CR_DT,
         :OLD.MAIN_FRZ_FLAG,
         NEW_MAIN_ACNT_CODE,
         NEW_MAIN_ACNT_NAME,
         NEW_MAIN_ACNT_SHORT_NAME,
         NEW_MAIN_ACNT_CATG,
         NEW_MAIN_CTL_ACNT_FLAG,
         NEW_MAIN_ACTY_CODE_1,
         NEW_MAIN_ACTY_CODE_2,
         NEW_MAIN_ACNT_TYPE,
         NEW_MAIN_OPEN_ENTRY_FLAG,
         NEW_MAIN_DESC,
         NEW_MAIN_CR_UID,
         NEW_MAIN_CR_DT,
         NEW_MAIN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.MAIN_BL_ACNT_NAME,
         NEW_MAIN_BL_ACNT_NAME,
         :OLD.MAIN_BL_ACNT_SHORT_NAME,
         NEW_MAIN_BL_ACNT_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FM_MAIN_SUB ( 
  MS_MAIN_ACNT_CODE          VARCHAR2 (6)  NOT NULL, 
  MS_SUB_ACNT_CODE           VARCHAR2 (6)  NOT NULL, 
  MS_SUB_ACNT_NAME           VARCHAR2 (60), 
  MS_SUB_ACNT_SHORT_NAME     VARCHAR2 (15), 
  MS_CR_UID                  VARCHAR2 (10)  DEFAULT 'TEST1', 
  MS_CR_DT                   DATE          DEFAULT SYSDATE, 
  MS_BL_SUB_ACNT_NAME        VARCHAR2 (60), 
  MS_BL_SUB_ACNT_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_MS_01
  PRIMARY KEY ( MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE ) ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
FIN_C0018405 CHECK  ( MS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
MS_NN_01 CHECK  ( MS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
MS_NN_02 CHECK  ( MS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
SYS_C005935 CHECK  ( MS_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
SYS_C005936 CHECK  ( MS_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
SYS_C005937 CHECK  ( MS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
SYS_C005938 CHECK  ( MS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
FIN_C0018403 CHECK  ( MS_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
FIN_C0018404 CHECK  ( MS_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MAIN_SUB ADD CONSTRAINT 
FIN_C0018406 CHECK  ( MS_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_MAIN_SUB_01 ON 
  FM_MAIN_SUB(MS_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_MAIN_SUB" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_MAIN_SUB REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_MS_MAIN_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_MS_SUB_ACNT_CODE      VARCHAR2(1) := NULL;
 NEW_MS_SUB_ACNT_NAME      VARCHAR2(1) := NULL;
 NEW_MS_SUB_ACNT_SHORT_NAME VARCHAR2(1) := NULL;
 NEW_MS_BL_SUB_ACNT_NAME      VARCHAR2(1) := NULL;
 NEW_MS_BL_SUB_ACNT_SHORT_NAME VARCHAR2(1) := NULL;
 NEW_MS_CR_UID             VARCHAR2(1) := NULL;
 NEW_MS_CR_DT              DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_MAIN_SUB (
         :OLD.MS_MAIN_ACNT_CODE,
         :OLD.MS_SUB_ACNT_CODE,
         :OLD.MS_SUB_ACNT_NAME,
         :OLD.MS_SUB_ACNT_SHORT_NAME,
         :OLD.MS_CR_UID,
         :OLD.MS_CR_DT,
         :NEW.MS_MAIN_ACNT_CODE,
         :NEW.MS_SUB_ACNT_CODE,
         :NEW.MS_SUB_ACNT_NAME,
         :NEW.MS_SUB_ACNT_SHORT_NAME,
         :NEW.MS_CR_UID,
         :NEW.MS_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.MS_BL_SUB_ACNT_NAME,
         :NEW.MS_BL_SUB_ACNT_NAME,
         :OLD.MS_BL_SUB_ACNT_SHORT_NAME,
         :NEW.MS_BL_SUB_ACNT_SHORT_NAME ) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_MAIN_SUB (
         :OLD.MS_MAIN_ACNT_CODE,
         :OLD.MS_SUB_ACNT_CODE,
         :OLD.MS_SUB_ACNT_NAME,
         :OLD.MS_SUB_ACNT_SHORT_NAME,
         :OLD.MS_CR_UID,
         :OLD.MS_CR_DT,
         NEW_MS_MAIN_ACNT_CODE,
         NEW_MS_SUB_ACNT_CODE,
         NEW_MS_SUB_ACNT_NAME,
         NEW_MS_SUB_ACNT_SHORT_NAME,
         NEW_MS_CR_UID,
         NEW_MS_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.MS_BL_SUB_ACNT_NAME,
         NEW_MS_BL_SUB_ACNT_NAME,
         :OLD.MS_BL_SUB_ACNT_SHORT_NAME,
         NEW_MS_BL_SUB_ACNT_SHORT_NAME ) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FM_MONTHLY_BUDGET ( 
  MBUD_COMP_CODE       VARCHAR2 (3), 
  MBUD_ACNT_YEAR       NUMBER (2), 
  MBUD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  MBUD_SUB_ACNT_CODE   VARCHAR2 (6), 
  MBUD_DIVN_CODE       VARCHAR2 (6), 
  MBUD_DEPT_CODE       VARCHAR2 (6), 
  MBUD_HEAD_NO_1       NUMBER (1), 
  MBUD_ANLY_CODE_1     VARCHAR2 (6), 
  MBUD_HEAD_NO_2       NUMBER (1), 
  MBUD_ANLY_CODE_2     VARCHAR2 (6), 
  MBUD_YEAR_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  MBUD_CAL_YEAR        NUMBER (4), 
  MBUD_CAL_MONTH       NUMBER (2), 
  MBUD_ORGL_AMT        NUMBER (14,3), 
  MBUD_REVI_AMT        NUMBER (14,3), 
  MBUD_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  MBUD_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD  CONSTRAINT PK_MBUD_01
 UNIQUE (MBUD_COMP_CODE, MBUD_ACNT_YEAR, MBUD_MAIN_ACNT_CODE, MBUD_SUB_ACNT_CODE, MBUD_DIVN_CODE, MBUD_DEPT_CODE, MBUD_HEAD_NO_1, MBUD_ANLY_CODE_1, MBUD_HEAD_NO_2, MBUD_ANLY_CODE_2, MBUD_CAL_YEAR, MBUD_CAL_MONTH, MBUD_YEAR_FLAG) 
/



ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018414 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018415 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018416 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018407 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018408 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018409 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018410 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005969 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005970 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005971 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005972 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005973 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005974 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005975 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005976 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005978 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005979 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005944 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005945 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_06 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_07 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_08 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_09 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_10 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005951 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005952 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005953 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005954 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005955 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005956 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_04 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_05 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018411 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018412 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018413 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005980 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C005981 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_CHK_01 CHECK  ( NVL(MBUD_ORGL_AMT,0) >= 0  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_CHK_02 CHECK  ( NVL(MBUD_REVI_AMT,0) >= 0  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_CHK_03 CHECK  ( MBUD_YEAR_FLAG IN ('C','N', 'P')  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_CHK_04 CHECK  ( MBUD_ACNT_YEAR > 0  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_01 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_02 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_NN_03 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/



/
CREATE TABLE FM_NARRATION_DEFN ( 
  NARR_TRAN_CODE  VARCHAR2 (3)  NOT NULL, 
  NARR_SEQ_NO     NUMBER (3)    NOT NULL, 
  NARR_PROMPT     VARCHAR2 (15), 
  NARR_TYPE       VARCHAR2 (1)  DEFAULT 'C', 
  NARR_LENGTH     NUMBER (2), 
  NARR_CR_UID     VARCHAR2 (10)  DEFAULT 'TEST1', 
  NARR_CR_DT      DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_NARR_01
  PRIMARY KEY ( NARR_TRAN_CODE, NARR_SEQ_NO ) ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_CHK_01 CHECK  ( NARR_TYPE IN ('C','N','D')  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018422 CHECK  ( NARR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006002 CHECK  ( NARR_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006003 CHECK  ( NARR_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006004 CHECK  ( NARR_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006005 CHECK  ( NARR_LENGTH IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006006 CHECK  ( NARR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
SYS_C006007 CHECK  ( NARR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_CHK_02 CHECK  ( NARR_LENGTH BETWEEN 0 AND 15  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_NN_01 CHECK  ( NARR_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_NN_02 CHECK  ( NARR_LENGTH IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_NN_03 CHECK  ( NARR_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
NARR_NN_04 CHECK  ( NARR_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018417 CHECK  ( NARR_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018418 CHECK  ( NARR_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018419 CHECK  ( NARR_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018420 CHECK  ( NARR_LENGTH IS NOT NULL  ) 
/

ALTER TABLE FM_NARRATION_DEFN ADD CONSTRAINT 
FIN_C0018421 CHECK  ( NARR_CR_UID IS NOT NULL  ) 
/



/
CREATE TABLE FM_PRV_MONTHLY_BUDGET ( 
  MBUD_COMP_CODE       VARCHAR2 (3), 
  MBUD_ACNT_YEAR       NUMBER (2), 
  MBUD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  MBUD_SUB_ACNT_CODE   VARCHAR2 (6), 
  MBUD_DIVN_CODE       VARCHAR2 (6), 
  MBUD_DEPT_CODE       VARCHAR2 (6), 
  MBUD_HEAD_NO_1       NUMBER (1), 
  MBUD_ANLY_CODE_1     VARCHAR2 (6), 
  MBUD_HEAD_NO_2       NUMBER (1), 
  MBUD_ANLY_CODE_2     VARCHAR2 (6), 
  MBUD_YEAR_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  MBUD_CAL_YEAR        NUMBER (4), 
  MBUD_CAL_MONTH       NUMBER (2), 
  MBUD_ORGL_AMT        NUMBER (14,3), 
  MBUD_REVI_AMT        NUMBER (14,3), 
  MBUD_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  MBUD_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD  CONSTRAINT PK_MBUD_PRV_01
 UNIQUE (MBUD_COMP_CODE, MBUD_ACNT_YEAR, MBUD_MAIN_ACNT_CODE, MBUD_SUB_ACNT_CODE, MBUD_DIVN_CODE, MBUD_DEPT_CODE, MBUD_HEAD_NO_1, MBUD_ANLY_CODE_1, MBUD_HEAD_NO_2, MBUD_ANLY_CODE_2, MBUD_CAL_YEAR, MBUD_CAL_MONTH, MBUD_YEAR_FLAG) 
/



ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_08 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_07 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_09 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_10 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006027 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006028 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006029 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006030 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006031 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006032 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006033 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006034 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006035 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018423 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018424 CHECK  ( MBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018425 CHECK  ( MBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018426 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
SYS_C006008 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_CHK_01 CHECK  ( NVL(MBUD_ORGL_AMT,0) >= 0  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_CHK_02 CHECK  ( NVL(MBUD_REVI_AMT,0) >= 0  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_CHK_03 CHECK  ( MBUD_YEAR_FLAG IN ('C','N')  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_CHK_04 CHECK  ( MBUD_ACNT_YEAR > 0  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_01 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_02 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_03 CHECK  ( MBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_04 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_05 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018430 CHECK  ( MBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018431 CHECK  ( MBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018432 CHECK  ( MBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
MBUD_PRV_NN_06 CHECK  ( MBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018427 CHECK  ( MBUD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018428 CHECK  ( MBUD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD CONSTRAINT 
FIN_C0018429 CHECK  ( MBUD_ORGL_AMT IS NOT NULL  ) 
/



/
CREATE TABLE FM_RATIO_VALUE ( 
  RV_RATIO_ID   VARCHAR2 (10)  NOT NULL, 
  RV_RESULT     NUMBER (5,2), 
  RV_COMP_CODE  VARCHAR2 (3)  NOT NULL, 
  RV_CAL_YEAR   NUMBER (4)    NOT NULL, 
  RV_CAL_MONTH  NUMBER (2)    NOT NULL, 
  RV_CR_UID     VARCHAR2 (10)  DEFAULT 'TEST1', 
  RV_CR_DT      DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_RV_01
  PRIMARY KEY ( RV_RATIO_ID, RV_COMP_CODE, RV_CAL_YEAR, RV_CAL_MONTH ) ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018433 CHECK  ( RV_RATIO_ID IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_NN_04 CHECK  ( RV_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006043 CHECK  ( RV_RATIO_ID IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006044 CHECK  ( RV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006045 CHECK  ( RV_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006046 CHECK  ( RV_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006047 CHECK  ( RV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
SYS_C006048 CHECK  ( RV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_CHK_01 CHECK  ( RV_CAL_YEAR > 0  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_CHK_02 CHECK  ( RV_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018434 CHECK  ( RV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018435 CHECK  ( RV_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018436 CHECK  ( RV_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018437 CHECK  ( RV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
FIN_C0018438 CHECK  ( RV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_NN_01 CHECK  ( RV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_NN_02 CHECK  ( RV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_RATIO_VALUE ADD CONSTRAINT 
RV_NN_03 CHECK  ( RV_CAL_YEAR IS NOT NULL  ) 
/



/
CREATE TABLE FM_SECURITY_CTL ( 
  SEC_USER_DIVN       VARCHAR2 (1), 
  SEC_MAIN_DIVN       VARCHAR2 (1), 
  SEC_SUB_DIVN        VARCHAR2 (1), 
  SEC_ANLY_DIVN       VARCHAR2 (1), 
  SEC_ANLY_MAIN       VARCHAR2 (1), 
  SEC_ANLY_SUB        VARCHAR2 (1), 
  SEC_ITEM_COMP_DIVN  VARCHAR2 (1), 
  SEC_ITEM_USER       VARCHAR2 (1), 
  SEC_ITEM_LOC        VARCHAR2 (1) ) 
/

/
CREATE TABLE FM_SUB_ACCOUNT ( 
  SUB_ACNT_CODE           VARCHAR2 (6)  NOT NULL, 
  SUB_ACNT_NAME           VARCHAR2 (60), 
  SUB_ACNT_SHORT_NAME     VARCHAR2 (15), 
  SUB_DESC                VARCHAR2 (2000), 
  SUB_CR_UID              VARCHAR2 (10)  DEFAULT 'TEST1', 
  SUB_CR_DT               DATE          DEFAULT SYSDATE, 
  SUB_FRZ_FLAG            VARCHAR2 (1)  DEFAULT 'N', 
  SUB_BL_ACNT_NAME        VARCHAR2 (60), 
  SUB_BL_ACNT_SHORT_NAME  VARCHAR2 (15), 
  CONSTRAINT PK_SUB_01
  PRIMARY KEY ( SUB_ACNT_CODE ) ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SUB_NN_01 CHECK  ( SUB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SUB_CHK_01 CHECK  ( SUB_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SUB_NN_02 CHECK  ( SUB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SUB_NN_03 CHECK  ( SUB_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SUB_NN_04 CHECK  ( SUB_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
FIN_C0018443 CHECK  ( SUB_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
FIN_C0018439 CHECK  ( SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
FIN_C0018440 CHECK  ( SUB_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
FIN_C0018441 CHECK  ( SUB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
FIN_C0018442 CHECK  ( SUB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SYS_C006073 CHECK  ( SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SYS_C006074 CHECK  ( SUB_ACNT_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SYS_C006075 CHECK  ( SUB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SYS_C006076 CHECK  ( SUB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_ACCOUNT ADD CONSTRAINT 
SYS_C006077 CHECK  ( SUB_FRZ_FLAG IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_SUB_ACCOUNT
BEFORE INSERT OR UPDATE OR DELETE ON FM_SUB_ACCOUNT
FOR EACH ROW
DECLARE
 NEW_SUB_ACNT_CODE         VARCHAR2(1) := NULL;
 NEW_SUB_ACNT_NAME         VARCHAR2(1) := NULL;
 NEW_SUB_ACNT_SHORT_NAME   VARCHAR2(1) := NULL;
 NEW_SUB_BL_ACNT_NAME      VARCHAR2(1) := NULL;
 NEW_SUB_BL_ACNT_SHORT_NAME VARCHAR2(1) := NULL;
 NEW_SUB_DESC              VARCHAR2(1) := NULL;
 NEW_SUB_CR_UID            VARCHAR2(1) := NULL;
 NEW_SUB_CR_DT             DATE        := NULL;
 NEW_SUB_FRZ_FLAG          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_SUB_ACCOUNT (
         :OLD.SUB_ACNT_CODE,
         :OLD.SUB_ACNT_NAME,
         :OLD.SUB_ACNT_SHORT_NAME,
         :OLD.SUB_DESC,
         :OLD.SUB_CR_UID,
         :OLD.SUB_CR_DT,
         :OLD.SUB_FRZ_FLAG,
         :NEW.SUB_ACNT_CODE,
         :NEW.SUB_ACNT_NAME,
         :NEW.SUB_ACNT_SHORT_NAME,
         :NEW.SUB_DESC,
         :NEW.SUB_CR_UID,
         :NEW.SUB_CR_DT,
         :NEW.SUB_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.SUB_BL_ACNT_NAME,
         :NEW.SUB_BL_ACNT_NAME,
         :OLD.SUB_BL_ACNT_SHORT_NAME,
         :NEW.SUB_BL_ACNT_SHORT_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_SUB_ACCOUNT (
         :OLD.SUB_ACNT_CODE,
         :OLD.SUB_ACNT_NAME,
         :OLD.SUB_ACNT_SHORT_NAME,
         :OLD.SUB_DESC,
         :OLD.SUB_CR_UID,
         :OLD.SUB_CR_DT,
         :OLD.SUB_FRZ_FLAG,
         NEW_SUB_ACNT_CODE,
         NEW_SUB_ACNT_NAME,
         NEW_SUB_ACNT_SHORT_NAME,
         NEW_SUB_DESC,
         NEW_SUB_CR_UID,
         NEW_SUB_CR_DT,
         NEW_SUB_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.SUB_BL_ACNT_NAME,
         NEW_SUB_BL_ACNT_NAME,
         :OLD.SUB_BL_ACNT_SHORT_NAME,
         NEW_SUB_BL_ACNT_SHORT_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_SUB_COMP ( 
  SCOMP_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  SCOMP_SUB_ACNT_CODE  VARCHAR2 (6)  NOT NULL, 
  SCOMP_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  SCOMP_CR_DT          DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_SCOMP_01
  PRIMARY KEY ( SCOMP_COMP_CODE, SCOMP_SUB_ACNT_CODE ) ) 
/

ALTER TABLE FM_SUB_COMP ADD CONSTRAINT 
SYS_C006082 CHECK  ( SCOMP_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_COMP ADD CONSTRAINT 
FIN_C0018444 CHECK  ( SCOMP_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_COMP ADD CONSTRAINT 
FIN_C0018445 CHECK  ( SCOMP_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_COMP ADD CONSTRAINT 
SYS_C006080 CHECK  ( SCOMP_SUB_ACNT_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_SUB_COMP_01 ON 
  FM_SUB_COMP(SCOMP_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_SUB_COMP
BEFORE INSERT OR UPDATE OR DELETE ON FM_SUB_COMP
FOR EACH ROW
DECLARE
 NEW_SCOMP_COMP_CODE       VARCHAR2(1) := NULL;
 NEW_SCOMP_SUB_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_SCOMP_CR_UID          VARCHAR2(1) := NULL;
 NEW_SCOMP_CR_DT           DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_SUB_COMP (
         :OLD.SCOMP_COMP_CODE,
         :OLD.SCOMP_SUB_ACNT_CODE,
         :OLD.SCOMP_CR_UID,
         :OLD.SCOMP_CR_DT,
         :NEW.SCOMP_COMP_CODE,
         :NEW.SCOMP_SUB_ACNT_CODE,
         :NEW.SCOMP_CR_UID,
         :NEW.SCOMP_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_SUB_COMP (
         :OLD.SCOMP_COMP_CODE,
         :OLD.SCOMP_SUB_ACNT_CODE,
         :OLD.SCOMP_CR_UID,
         :OLD.SCOMP_CR_DT,
         NEW_SCOMP_COMP_CODE,
         NEW_SCOMP_SUB_ACNT_CODE,
         NEW_SCOMP_CR_UID,
         NEW_SCOMP_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_SUB_COMP_DIVN ( 
  SCD_COMP_CODE      VARCHAR2 (3), 
  SCD_DIVN_CODE      VARCHAR2 (6), 
  SCD_DEPT_CODE      VARCHAR2 (6), 
  SCD_SUB_ACNT_CODE  VARCHAR2 (6), 
  SCD_CR_UID         VARCHAR2 (10), 
  SCD_CR_DT          DATE ) 
/

/
CREATE TABLE FM_SUB_CURR ( 
  SCURR_CURR_CODE      VARCHAR2 (3)  NOT NULL, 
  SCURR_SUB_ACNT_CODE  VARCHAR2 (6)  NOT NULL, 
  SCURR_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  SCURR_CR_DT          DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_SCURR_01
  PRIMARY KEY ( SCURR_CURR_CODE, SCURR_SUB_ACNT_CODE ) ) 
/

ALTER TABLE FM_SUB_CURR ADD CONSTRAINT 
FIN_C0018446 CHECK  ( SCURR_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_CURR ADD CONSTRAINT 
FIN_C0018447 CHECK  ( SCURR_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_CURR ADD CONSTRAINT 
SYS_C006085 CHECK  ( SCURR_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUB_CURR ADD CONSTRAINT 
SYS_C006087 CHECK  ( SCURR_CURR_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FM_SUB_CURR_01 ON 
  FM_SUB_CURR(SCURR_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_SUB_CURR
BEFORE INSERT OR UPDATE OR DELETE ON FM_SUB_CURR
FOR EACH ROW
DECLARE
 NEW_SCURR_CURR_CODE       VARCHAR2(1) := NULL;
 NEW_SCURR_SUB_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_SCURR_CR_UID          VARCHAR2(1) := NULL;
 NEW_SCURR_CR_DT           DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_SUB_CURR (
         :OLD.SCURR_CURR_CODE,
         :OLD.SCURR_SUB_ACNT_CODE,
         :OLD.SCURR_CR_UID,
         :OLD.SCURR_CR_DT,
         :NEW.SCURR_CURR_CODE,
         :NEW.SCURR_SUB_ACNT_CODE,
         :NEW.SCURR_CR_UID,
         :NEW.SCURR_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_SUB_CURR (
         :OLD.SCURR_CURR_CODE,
         :OLD.SCURR_SUB_ACNT_CODE,
         :OLD.SCURR_CR_UID,
         :OLD.SCURR_CR_DT,
         NEW_SCURR_CURR_CODE,
         NEW_SCURR_SUB_ACNT_CODE,
         NEW_SCURR_CR_UID,
         NEW_SCURR_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_SUPPLIER ( 
  SUPP_CODE            VARCHAR2 (6)  NOT NULL, 
  SUPP_NAME            VARCHAR2 (60), 
  SUPP_SHORT_NAME      VARCHAR2 (15), 
  SUPP_ADD_1           VARCHAR2 (30), 
  SUPP_ADD_2           VARCHAR2 (30), 
  SUPP_ADD_3           VARCHAR2 (30), 
  SUPP_COUNTRY         VARCHAR2 (15), 
  SUPP_PHONE           VARCHAR2 (15), 
  SUPP_TELEX_FAX       VARCHAR2 (15), 
  SUPP_MAIN_ACNT_CODE  VARCHAR2 (6), 
  SUPP_CR_LMT_AMT      NUMBER (14,3), 
  SUPP_CR_LMT_DAYS     NUMBER (3)    DEFAULT 0, 
  SUPP_CONTACT         VARCHAR2 (15), 
  SUPP_AREA            VARCHAR2 (15), 
  SUPP_SM              VARCHAR2 (15), 
  SUPP_CATG            VARCHAR2 (15), 
  SUPP_MODE_PYMT       VARCHAR2 (1)  DEFAULT '1', 
  SUPP_BANK_ACNT       VARCHAR2 (15), 
  SUPP_BANK_NAME       VARCHAR2 (30), 
  SUPP_BANK_BRANCH     VARCHAR2 (15), 
  SUPP_DESC            VARCHAR2 (2000), 
  SUPP_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  SUPP_CR_DT           DATE          DEFAULT SYSDATE, 
  SUPP_FRZ_FLAG        VARCHAR2 (1)  DEFAULT 'N', 
  SUPP_FAX             VARCHAR2 (15), 
  SUPP_BANK_ADD1       VARCHAR2 (30), 
  SUPP_BANK_ADD2       VARCHAR2 (30), 
  SUPP_BANK_ADD3       VARCHAR2 (30), 
  SUPP_BL_NAME         VARCHAR2 (60), 
  SUPP_BL_SHORT_NAME   VARCHAR2 (15), 
  SUPP_BL_ADD_1        VARCHAR2 (30), 
  SUPP_BL_ADD_2        VARCHAR2 (30), 
  SUPP_BL_ADD_3        VARCHAR2 (30), 
  CONSTRAINT PK_SUPP_01
  PRIMARY KEY ( SUPP_CODE ) ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_NN_03 CHECK  ( SUPP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006103 CHECK  ( SUPP_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_CHK_01 CHECK  ( SUPP_MODE_PYMT IN ('1','2','3','4')  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_CHK_02 CHECK  ( SUPP_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_CHK_03 CHECK  ( NVL(SUPP_CR_LMT_AMT,0) >= 0  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_CHK_04 CHECK  ( NVL(SUPP_CR_LMT_DAYS,0) >= 0  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_CHK_05 CHECK  ( SUPP_MODE_PYMT = '1'  OR  SUPP_BANK_ACNT  IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_NN_01 CHECK  ( SUPP_MODE_PYMT IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_NN_02 CHECK  ( SUPP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_NN_04 CHECK  ( SUPP_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SUPP_NN_05 CHECK  ( SUPP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006091 CHECK  ( SUPP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018448 CHECK  ( SUPP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018449 CHECK  ( SUPP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018450 CHECK  ( SUPP_MODE_PYMT IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018451 CHECK  ( SUPP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018452 CHECK  ( SUPP_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
FIN_C0018453 CHECK  ( SUPP_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006099 CHECK  ( SUPP_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006100 CHECK  ( SUPP_MODE_PYMT IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006101 CHECK  ( SUPP_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_SUPPLIER ADD CONSTRAINT 
SYS_C006102 CHECK  ( SUPP_CR_DT IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_SUPPLIER
BEFORE INSERT OR UPDATE OR DELETE ON FM_SUPPLIER
FOR EACH ROW
DECLARE
 NEW_SUPP_CODE             VARCHAR2(1) := NULL;
 NEW_SUPP_NAME             VARCHAR2(1) := NULL;
 NEW_SUPP_SHORT_NAME       VARCHAR2(1) := NULL;
 NEW_SUPP_ADD_1            VARCHAR2(1) := NULL;
 NEW_SUPP_ADD_2            VARCHAR2(1) := NULL;
 NEW_SUPP_ADD_3            VARCHAR2(1) := NULL;
 NEW_SUPP_BL_NAME          VARCHAR2(1) := NULL;
 NEW_SUPP_BL_SHORT_NAME    VARCHAR2(1) := NULL;
 NEW_SUPP_BL_ADD_1         VARCHAR2(1) := NULL;
 NEW_SUPP_BL_ADD_2         VARCHAR2(1) := NULL;
 NEW_SUPP_BL_ADD_3         VARCHAR2(1) := NULL;
 NEW_SUPP_COUNTRY          VARCHAR2(1) := NULL;
 NEW_SUPP_PHONE            VARCHAR2(1) := NULL;
 NEW_SUPP_TELEX_FAX        VARCHAR2(1) := NULL;
 NEW_SUPP_MAIN_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_SUPP_CR_LMT_AMT       NUMBER(1) := NULL;
 NEW_SUPP_CR_LMT_DAYS      NUMBER(1) := NULL;
 NEW_SUPP_CONTACT          VARCHAR2(1) := NULL;
 NEW_SUPP_AREA             VARCHAR2(1) := NULL;
 NEW_SUPP_SM               VARCHAR2(1) := NULL;
 NEW_SUPP_CATG             VARCHAR2(1) := NULL;
 NEW_SUPP_MODE_PYMT        VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_ACNT        VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_NAME        VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_BRANCH      VARCHAR2(1) := NULL;
 NEW_SUPP_DESC             VARCHAR2(1) := NULL;
 NEW_SUPP_CR_UID           VARCHAR2(1) := NULL;
 NEW_SUPP_CR_DT            DATE        := NULL;
 NEW_SUPP_FRZ_FLAG         VARCHAR2(1) := NULL;
 NEW_SUPP_FAX              VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_ADD1        VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_ADD2        VARCHAR2(1) := NULL;
 NEW_SUPP_BANK_ADD3        VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_SUPPLIER (
         :OLD.SUPP_CODE,
         :OLD.SUPP_NAME,
         :OLD.SUPP_SHORT_NAME,
         :OLD.SUPP_ADD_1,
         :OLD.SUPP_ADD_2,
         :OLD.SUPP_ADD_3,
         :OLD.SUPP_COUNTRY,
         :OLD.SUPP_PHONE,
         :OLD.SUPP_TELEX_FAX,
         :OLD.SUPP_MAIN_ACNT_CODE,
         :OLD.SUPP_CR_LMT_AMT,
         :OLD.SUPP_CR_LMT_DAYS,
         :OLD.SUPP_CONTACT,
         :OLD.SUPP_AREA,
         :OLD.SUPP_SM,
         :OLD.SUPP_CATG,
         :OLD.SUPP_MODE_PYMT,
         :OLD.SUPP_BANK_ACNT,
         :OLD.SUPP_BANK_NAME,
         :OLD.SUPP_BANK_BRANCH,
         :OLD.SUPP_DESC,
         :OLD.SUPP_CR_UID,
         :OLD.SUPP_CR_DT,
         :OLD.SUPP_FRZ_FLAG,
         :OLD.SUPP_FAX,
         :OLD.SUPP_BANK_ADD1,
         :OLD.SUPP_BANK_ADD2,
         :OLD.SUPP_BANK_ADD3,
         :NEW.SUPP_CODE,
         :NEW.SUPP_NAME,
         :NEW.SUPP_SHORT_NAME,
         :NEW.SUPP_ADD_1,
         :NEW.SUPP_ADD_2,
         :NEW.SUPP_ADD_3,
         :NEW.SUPP_COUNTRY,
         :NEW.SUPP_PHONE,
         :NEW.SUPP_TELEX_FAX,
         :NEW.SUPP_MAIN_ACNT_CODE,
         :NEW.SUPP_CR_LMT_AMT,
         :NEW.SUPP_CR_LMT_DAYS,
         :NEW.SUPP_CONTACT,
         :NEW.SUPP_AREA,
         :NEW.SUPP_SM,
         :NEW.SUPP_CATG,
         :NEW.SUPP_MODE_PYMT,
         :NEW.SUPP_BANK_ACNT,
         :NEW.SUPP_BANK_NAME,
         :NEW.SUPP_BANK_BRANCH,
         :NEW.SUPP_DESC,
         :NEW.SUPP_CR_UID,
         :NEW.SUPP_CR_DT,
         :NEW.SUPP_FRZ_FLAG,
         :NEW.SUPP_FAX,
         :NEW.SUPP_BANK_ADD1,
         :NEW.SUPP_BANK_ADD2,
         :NEW.SUPP_BANK_ADD3,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.SUPP_BL_NAME,
         :NEW.SUPP_BL_NAME,
         :OLD.SUPP_BL_SHORT_NAME,
         :NEW.SUPP_BL_SHORT_NAME,
         :OLD.SUPP_BL_ADD_1,
         :NEW.SUPP_BL_ADD_1,
         :OLD.SUPP_BL_ADD_2,
         :NEW.SUPP_BL_ADD_2,
         :OLD.SUPP_BL_ADD_3,
         :NEW.SUPP_BL_ADD_3) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_SUPPLIER (
         :OLD.SUPP_CODE,
         :OLD.SUPP_NAME,
         :OLD.SUPP_SHORT_NAME,
         :OLD.SUPP_ADD_1,
         :OLD.SUPP_ADD_2,
         :OLD.SUPP_ADD_3,
         :OLD.SUPP_COUNTRY,
         :OLD.SUPP_PHONE,
         :OLD.SUPP_TELEX_FAX,
         :OLD.SUPP_MAIN_ACNT_CODE,
         :OLD.SUPP_CR_LMT_AMT,
         :OLD.SUPP_CR_LMT_DAYS,
         :OLD.SUPP_CONTACT,
         :OLD.SUPP_AREA,
         :OLD.SUPP_SM,
         :OLD.SUPP_CATG,
         :OLD.SUPP_MODE_PYMT,
         :OLD.SUPP_BANK_ACNT,
         :OLD.SUPP_BANK_NAME,
         :OLD.SUPP_BANK_BRANCH,
         :OLD.SUPP_DESC,
         :OLD.SUPP_CR_UID,
         :OLD.SUPP_CR_DT,
         :OLD.SUPP_FRZ_FLAG,
         :OLD.SUPP_FAX,
         :OLD.SUPP_BANK_ADD1,
         :OLD.SUPP_BANK_ADD2,
         :OLD.SUPP_BANK_ADD3,
         NEW_SUPP_CODE,
         NEW_SUPP_NAME,
         NEW_SUPP_SHORT_NAME,
         NEW_SUPP_ADD_1,
         NEW_SUPP_ADD_2,
         NEW_SUPP_ADD_3,
         NEW_SUPP_COUNTRY,
         NEW_SUPP_PHONE,
         NEW_SUPP_TELEX_FAX,
         NEW_SUPP_MAIN_ACNT_CODE,
         NEW_SUPP_CR_LMT_AMT,
         NEW_SUPP_CR_LMT_DAYS,
         NEW_SUPP_CONTACT,
         NEW_SUPP_AREA,
         NEW_SUPP_SM,
         NEW_SUPP_CATG,
         NEW_SUPP_MODE_PYMT,
         NEW_SUPP_BANK_ACNT,
         NEW_SUPP_BANK_NAME,
         NEW_SUPP_BANK_BRANCH,
         NEW_SUPP_DESC,
         NEW_SUPP_CR_UID,
         NEW_SUPP_CR_DT,
         NEW_SUPP_FRZ_FLAG,
         NEW_SUPP_FAX,
         NEW_SUPP_BANK_ADD1,
         NEW_SUPP_BANK_ADD2,
         NEW_SUPP_BANK_ADD3,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.SUPP_BL_NAME,
         NEW_SUPP_BL_NAME,
         :OLD.SUPP_BL_SHORT_NAME,
         NEW_SUPP_BL_SHORT_NAME,
         :OLD.SUPP_BL_ADD_1,
         NEW_SUPP_BL_ADD_1,
         :OLD.SUPP_BL_ADD_2,
         NEW_SUPP_BL_ADD_2,
         :OLD.SUPP_BL_ADD_3,
         NEW_SUPP_BL_ADD_3) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_TRANSACTION ( 
  TRAN_CODE                 VARCHAR2 (3)  NOT NULL, 
  TRAN_TYPE                 VARCHAR2 (1)  DEFAULT 'J', 
  TRAN_NAME                 VARCHAR2 (30), 
  TRAN_DR_HEADER            VARCHAR2 (10), 
  TRAN_CR_HEADER            VARCHAR2 (10), 
  TRAN_CASH_BANK_FLAG       VARCHAR2 (1)  DEFAULT 'O', 
  TRAN_DFLT_MAIN_ACNT_CODE  VARCHAR2 (6), 
  TRAN_DFLT_SUB_ACNT_CODE   VARCHAR2 (6), 
  TRAN_MODE_POSTING         VARCHAR2 (1)  DEFAULT 'B', 
  TRAN_ACNT_CATG            VARCHAR2 (2), 
  TRAN_MIN_AMT              NUMBER (14,3), 
  TRAN_MAX_AMT              NUMBER (14,3), 
  TRAN_SELF_REV             VARCHAR2 (1)  DEFAULT 'N', 
  TRAN_EXGE_RATE_APPLY      VARCHAR2 (1)  DEFAULT 'B', 
  TRAN_AUTO_PRINT_FLAG      VARCHAR2 (1)  DEFAULT 'N', 
  TRAN_CTL_TOTAL            VARCHAR2 (1)  DEFAULT 'N', 
  TRAN_DOC_NO_GENERATE      VARCHAR2 (1)  DEFAULT 'N', 
  TRAN_PRINT_NARR_FLAG      VARCHAR2 (1)  DEFAULT 'Y', 
  TRAN_CR_UID               VARCHAR2 (10)  DEFAULT 'TEST1', 
  TRAN_CR_DT                DATE          DEFAULT SYSDATE, 
  TRAN_FRZ_FLAG             VARCHAR2 (1)  DEFAULT 'N', 
  TRAN_BL_NAME              VARCHAR2 (30), 
  CONSTRAINT PK_TRAN_01
  PRIMARY KEY ( TRAN_CODE ) ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_01 CHECK  ( TRAN_TYPE IN ('S','P','I','R','D','C','J')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_12 CHECK  ( TRAN_FRZ_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018459 CHECK  ( TRAN_MIN_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_14 CHECK  ( TRAN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_15 CHECK  ( TRAN_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006124 CHECK  ( TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006125 CHECK  ( TRAN_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006126 CHECK  ( TRAN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006127 CHECK  ( TRAN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006128 CHECK  ( TRAN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_02 CHECK  ( TRAN_CASH_BANK_FLAG IN ('C','B','O')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_03 CHECK  ( TRAN_MODE_POSTING IN ('B','O')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006132 CHECK  ( TRAN_SELF_REV IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006133 CHECK  ( TRAN_EXGE_RATE_APPLY IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006134 CHECK  ( TRAN_AUTO_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006135 CHECK  ( TRAN_CTL_TOTAL IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006136 CHECK  ( TRAN_DOC_NO_GENERATE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006137 CHECK  ( TRAN_PRINT_NARR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_05 CHECK  ( NVL(TRAN_MAX_AMT,0) >= NVL(TRAN_MIN_AMT,0)  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_06 CHECK  ( TRAN_SELF_REV IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_07 CHECK  ( TRAN_EXGE_RATE_APPLY IN ('B','S')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_04 CHECK  ( NVL(TRAN_MIN_AMT,0) >= 0  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018466 CHECK  ( TRAN_PRINT_NARR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018467 CHECK  ( TRAN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006114 CHECK  ( TRAN_MAX_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006115 CHECK  ( TRAN_CASH_BANK_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006116 CHECK  ( TRAN_MODE_POSTING IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006117 CHECK  ( TRAN_MIN_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_10 CHECK  ( TRAN_DOC_NO_GENERATE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_11 CHECK  ( TRAN_PRINT_NARR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_12 CHECK  ( TRAN_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_13 CHECK  ( TRAN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018457 CHECK  ( TRAN_CASH_BANK_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018458 CHECK  ( TRAN_MODE_POSTING IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018460 CHECK  ( TRAN_MAX_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018461 CHECK  ( TRAN_SELF_REV IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018462 CHECK  ( TRAN_EXGE_RATE_APPLY IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018463 CHECK  ( TRAN_AUTO_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018464 CHECK  ( TRAN_CTL_TOTAL IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018465 CHECK  ( TRAN_DOC_NO_GENERATE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_08 CHECK  ( TRAN_AUTO_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_09 CHECK  ( TRAN_CTL_TOTAL IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_10 CHECK  ( TRAN_DOC_NO_GENERATE IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_CHK_11 CHECK  ( TRAN_PRINT_NARR_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_01 CHECK  ( TRAN_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_02 CHECK  ( TRAN_CASH_BANK_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_03 CHECK  ( TRAN_MODE_POSTING IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_04 CHECK  ( TRAN_MIN_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_05 CHECK  ( TRAN_MAX_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_06 CHECK  ( TRAN_SELF_REV IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_07 CHECK  ( TRAN_EXGE_RATE_APPLY IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_08 CHECK  ( TRAN_AUTO_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
TRAN_NN_09 CHECK  ( TRAN_CTL_TOTAL IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
SYS_C006156 CHECK  ( TRAN_NAME IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018468 CHECK  ( TRAN_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018469 CHECK  ( TRAN_FRZ_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018454 CHECK  ( TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018455 CHECK  ( TRAN_TYPE IS NOT NULL  ) 
/

ALTER TABLE FM_TRANSACTION ADD CONSTRAINT 
FIN_C0018456 CHECK  ( TRAN_NAME IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_TRANSACTION" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_TRANSACTION REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_TRAN_CODE             VARCHAR2(1) := NULL;
 NEW_TRAN_TYPE             VARCHAR2(1) := NULL;
 NEW_TRAN_NAME             VARCHAR2(1) := NULL;
 NEW_TRAN_BL_NAME          VARCHAR2(1) := NULL;
 NEW_TRAN_DR_HEADER        VARCHAR2(1) := NULL;
 NEW_TRAN_CR_HEADER        VARCHAR2(1) := NULL;
 NEW_TRAN_CASH_BANK_FLAG   VARCHAR2(1) := NULL;
 NEW_TRAN_DFLT_MAIN_ACNT_CODE VARCHAR2(1) := NULL;
 NEW_TRAN_DFLT_SUB_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_TRAN_MODE_POSTING     VARCHAR2(1) := NULL;
 NEW_TRAN_ACNT_CATG        VARCHAR2(1) := NULL;
 NEW_TRAN_MIN_AMT          NUMBER(1) := NULL;
 NEW_TRAN_MAX_AMT          NUMBER(1) := NULL;
 NEW_TRAN_SELF_REV         VARCHAR2(1) := NULL;
 NEW_TRAN_EXGE_RATE_APPLY  VARCHAR2(1) := NULL;
 NEW_TRAN_AUTO_PRINT_FLAG  VARCHAR2(1) := NULL;
 NEW_TRAN_CTL_TOTAL        VARCHAR2(1) := NULL;
 NEW_TRAN_DOC_NO_GENERATE  VARCHAR2(1) := NULL;
 NEW_TRAN_PRINT_NARR_FLAG  VARCHAR2(1) := NULL;
 NEW_TRAN_CR_UID           VARCHAR2(1) := NULL;
 NEW_TRAN_CR_DT            DATE        := NULL;
 NEW_TRAN_FRZ_FLAG         VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_TRANSACTION (
         :OLD.TRAN_CODE,
         :OLD.TRAN_TYPE,
         :OLD.TRAN_NAME,
         :OLD.TRAN_DR_HEADER,
         :OLD.TRAN_CR_HEADER,
         :OLD.TRAN_CASH_BANK_FLAG,
         :OLD.TRAN_DFLT_MAIN_ACNT_CODE,
         :OLD.TRAN_DFLT_SUB_ACNT_CODE,
         :OLD.TRAN_MODE_POSTING,
         :OLD.TRAN_ACNT_CATG,
         :OLD.TRAN_MIN_AMT,
         :OLD.TRAN_MAX_AMT,
         :OLD.TRAN_SELF_REV,
         :OLD.TRAN_EXGE_RATE_APPLY,
         :OLD.TRAN_AUTO_PRINT_FLAG,
         :OLD.TRAN_CTL_TOTAL,
         :OLD.TRAN_DOC_NO_GENERATE,
         :OLD.TRAN_PRINT_NARR_FLAG,
         :OLD.TRAN_CR_UID,
         :OLD.TRAN_CR_DT,
         :OLD.TRAN_FRZ_FLAG,
         :NEW.TRAN_CODE,
         :NEW.TRAN_TYPE,
         :NEW.TRAN_NAME,
         :NEW.TRAN_DR_HEADER,
         :NEW.TRAN_CR_HEADER,
         :NEW.TRAN_CASH_BANK_FLAG,
         :NEW.TRAN_DFLT_MAIN_ACNT_CODE,
         :NEW.TRAN_DFLT_SUB_ACNT_CODE,
         :NEW.TRAN_MODE_POSTING,
         :NEW.TRAN_ACNT_CATG,
         :NEW.TRAN_MIN_AMT,
         :NEW.TRAN_MAX_AMT,
         :NEW.TRAN_SELF_REV,
         :NEW.TRAN_EXGE_RATE_APPLY,
         :NEW.TRAN_AUTO_PRINT_FLAG,
         :NEW.TRAN_CTL_TOTAL,
         :NEW.TRAN_DOC_NO_GENERATE,
         :NEW.TRAN_PRINT_NARR_FLAG,
         :NEW.TRAN_CR_UID,
         :NEW.TRAN_CR_DT,
         :NEW.TRAN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.TRAN_BL_NAME,
         :NEW.TRAN_BL_NAME) ;
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_TRANSACTION (
         :OLD.TRAN_CODE,
         :OLD.TRAN_TYPE,
         :OLD.TRAN_NAME,
         :OLD.TRAN_DR_HEADER,
         :OLD.TRAN_CR_HEADER,
         :OLD.TRAN_CASH_BANK_FLAG,
         :OLD.TRAN_DFLT_MAIN_ACNT_CODE,
         :OLD.TRAN_DFLT_SUB_ACNT_CODE,
         :OLD.TRAN_MODE_POSTING,
         :OLD.TRAN_ACNT_CATG,
         :OLD.TRAN_MIN_AMT,
         :OLD.TRAN_MAX_AMT,
         :OLD.TRAN_SELF_REV,
         :OLD.TRAN_EXGE_RATE_APPLY,
         :OLD.TRAN_AUTO_PRINT_FLAG,
         :OLD.TRAN_CTL_TOTAL,
         :OLD.TRAN_DOC_NO_GENERATE,
         :OLD.TRAN_PRINT_NARR_FLAG,
         :OLD.TRAN_CR_UID,
         :OLD.TRAN_CR_DT,
         :OLD.TRAN_FRZ_FLAG,
         NEW_TRAN_CODE,
         NEW_TRAN_TYPE,
         NEW_TRAN_NAME,
         NEW_TRAN_DR_HEADER,
         NEW_TRAN_CR_HEADER,
         NEW_TRAN_CASH_BANK_FLAG,
         NEW_TRAN_DFLT_MAIN_ACNT_CODE,
         NEW_TRAN_DFLT_SUB_ACNT_CODE,
         NEW_TRAN_MODE_POSTING,
         NEW_TRAN_ACNT_CATG,
         NEW_TRAN_MIN_AMT,
         NEW_TRAN_MAX_AMT,
         NEW_TRAN_SELF_REV,
         NEW_TRAN_EXGE_RATE_APPLY,
         NEW_TRAN_AUTO_PRINT_FLAG,
         NEW_TRAN_CTL_TOTAL,
         NEW_TRAN_DOC_NO_GENERATE,
         NEW_TRAN_PRINT_NARR_FLAG,
         NEW_TRAN_CR_UID,
         NEW_TRAN_CR_DT,
         NEW_TRAN_FRZ_FLAG,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.TRAN_BL_NAME,
         NEW_TRAN_BL_NAME) ;
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FM_TRAN_APPR_GROUP ( 
  TAG_TRAN_CODE   VARCHAR2 (3)  NOT NULL, 
  TAG_GROUP_CODE  VARCHAR2 (6)  NOT NULL, 
  TAG_CR_UID      VARCHAR2 (10), 
  TAG_CR_DT       DATE, 
  CONSTRAINT PK_TAG_01
  PRIMARY KEY ( TAG_TRAN_CODE, TAG_GROUP_CODE ) ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
SYS_C006171 CHECK  ( TAG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
SYS_C006172 CHECK  ( TAG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
TAG_NN_01 CHECK  ( TAG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
FIN_C0018470 CHECK  ( TAG_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
FIN_C0018471 CHECK  ( TAG_GROUP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
FIN_C0018472 CHECK  ( TAG_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
FIN_C0018473 CHECK  ( TAG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
TAG_NN_02 CHECK  ( TAG_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
SYS_C006179 CHECK  ( TAG_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD CONSTRAINT 
SYS_C006180 CHECK  ( TAG_GROUP_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_TRAN_APPR_GROUP
BEFORE INSERT OR UPDATE OR DELETE ON FM_TRAN_APPR_GROUP
FOR EACH ROW
DECLARE
 NEW_TAG_TRAN_CODE         VARCHAR2(1) := NULL;
 NEW_TAG_GROUP_CODE        VARCHAR2(1) := NULL;
 NEW_TAG_CR_UID            VARCHAR2(1) := NULL;
 NEW_TAG_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_TRAN_APPR_GROUP (
         :OLD.TAG_TRAN_CODE,
         :OLD.TAG_GROUP_CODE,
         :OLD.TAG_CR_UID,
         :OLD.TAG_CR_DT,
         :NEW.TAG_TRAN_CODE,
         :NEW.TAG_GROUP_CODE,
         :NEW.TAG_CR_UID,
         :NEW.TAG_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_TRAN_APPR_GROUP (
         :OLD.TAG_TRAN_CODE,
         :OLD.TAG_GROUP_CODE,
         :OLD.TAG_CR_UID,
         :OLD.TAG_CR_DT,
         NEW_TAG_TRAN_CODE,
         NEW_TAG_GROUP_CODE,
         NEW_TAG_CR_UID,
         NEW_TAG_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_TRAN_APPR_LEVEL ( 
  ALVL_TRAN_CODE    VARCHAR2 (3)  NOT NULL, 
  ALVL_USR_LVL      NUMBER (2)    NOT NULL, 
  ALVL_USR_AMT_FRM  NUMBER (14,3), 
  ALVL_USR_AMT_TO   NUMBER (14,3), 
  ALVL_CR_UID       VARCHAR2 (10), 
  ALVL_CR_DT        DATE, 
  CONSTRAINT PK_ALVL_01
  PRIMARY KEY ( ALVL_TRAN_CODE, ALVL_USR_LVL ) ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_CHK_01 CHECK  ( NVL(ALVL_USR_AMT_FRM,0) >= 0  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_CHK_02 CHECK  (     NVL(ALVL_USR_AMT_TO,0)     >= NVL(ALVL_USR_AMT_FRM,0)  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_NN_01 CHECK  ( ALVL_USR_AMT_FRM IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_NN_02 CHECK  ( ALVL_USR_AMT_TO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_NN_03 CHECK  ( ALVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
ALVL_NN_04 CHECK  ( ALVL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006189 CHECK  ( ALVL_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006190 CHECK  ( ALVL_USR_LVL IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006191 CHECK  ( ALVL_USR_AMT_FRM IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006192 CHECK  ( ALVL_USR_AMT_TO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018474 CHECK  ( ALVL_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018475 CHECK  ( ALVL_USR_LVL IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018476 CHECK  ( ALVL_USR_AMT_FRM IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018477 CHECK  ( ALVL_USR_AMT_TO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018478 CHECK  ( ALVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
FIN_C0018479 CHECK  ( ALVL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006199 CHECK  ( ALVL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD CONSTRAINT 
SYS_C006200 CHECK  ( ALVL_CR_DT IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_TRAN_APPR_LEVEL
BEFORE INSERT OR UPDATE OR DELETE ON FM_TRAN_APPR_LEVEL
FOR EACH ROW
DECLARE
 NEW_ALVL_TRAN_CODE        VARCHAR2(1) := NULL;
 NEW_ALVL_USR_LVL          NUMBER(1) := NULL;
 NEW_ALVL_USR_AMT_FRM      NUMBER(1) := NULL;
 NEW_ALVL_USR_AMT_TO       NUMBER(1) := NULL;
 NEW_ALVL_CR_UID           VARCHAR2(1) := NULL;
 NEW_ALVL_CR_DT            DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_TRAN_APPR_LEVEL (
         :OLD.ALVL_TRAN_CODE,
         :OLD.ALVL_USR_LVL,
         :OLD.ALVL_USR_AMT_FRM,
         :OLD.ALVL_USR_AMT_TO,
         :OLD.ALVL_CR_UID,
         :OLD.ALVL_CR_DT,
         :NEW.ALVL_TRAN_CODE,
         :NEW.ALVL_USR_LVL,
         :NEW.ALVL_USR_AMT_FRM,
         :NEW.ALVL_USR_AMT_TO,
         :NEW.ALVL_CR_UID,
         :NEW.ALVL_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_TRAN_APPR_LEVEL (
         :OLD.ALVL_TRAN_CODE,
         :OLD.ALVL_USR_LVL,
         :OLD.ALVL_USR_AMT_FRM,
         :OLD.ALVL_USR_AMT_TO,
         :OLD.ALVL_CR_UID,
         :OLD.ALVL_CR_DT,
         NEW_ALVL_TRAN_CODE,
         NEW_ALVL_USR_LVL,
         NEW_ALVL_USR_AMT_FRM,
         NEW_ALVL_USR_AMT_TO,
         NEW_ALVL_CR_UID,
         NEW_ALVL_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_TRAN_DOC_NO ( 
  TDOC_COMP_CODE  VARCHAR2 (3)  NOT NULL, 
  TDOC_TRAN_CODE  VARCHAR2 (3)  NOT NULL, 
  TDOC_CUR_NO     NUMBER (6), 
  TDOC_MAX_NO     NUMBER (6), 
  TDOC_ACNT_YEAR  NUMBER (2)    NOT NULL, 
  CONSTRAINT PK_TDOC_01
  PRIMARY KEY ( TDOC_COMP_CODE, TDOC_TRAN_CODE, TDOC_ACNT_YEAR ) ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
FIN_C0018481 CHECK  ( TDOC_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
SYS_C006201 CHECK  ( TDOC_CUR_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
SYS_C006202 CHECK  ( TDOC_MAX_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
TDOC_CHK_01 CHECK  ( TDOC_CUR_NO BETWEEN 0 AND TDOC_MAX_NO  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
TDOC_NN_01 CHECK  ( TDOC_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
TDOC_NN_02 CHECK  ( TDOC_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
TDOC_NN_03 CHECK  ( TDOC_CUR_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
FIN_C0018480 CHECK  ( TDOC_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
FIN_C0018482 CHECK  ( TDOC_CUR_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
FIN_C0018483 CHECK  ( TDOC_MAX_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
TDOC_NN_04 CHECK  ( TDOC_MAX_NO IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
SYS_C006213 CHECK  ( TDOC_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD CONSTRAINT 
SYS_C006214 CHECK  ( TDOC_TRAN_CODE IS NOT NULL  ) 
/



/
CREATE TABLE FM_VALID_COMB ( 
  VCM_SEQ_NO               NUMBER (8), 
  VCM_LOW_COMP_CODE        VARCHAR2 (3), 
  VCM_LOW_MAIN_ACNT_CODE   VARCHAR2 (6), 
  VCM_LOW_SUB_ACNT_CODE    VARCHAR2 (6), 
  VCM_LOW_DIVN_CODE        VARCHAR2 (6), 
  VCM_LOW_DEPT_CODE        VARCHAR2 (6), 
  VCM_LOW_ANLY_CODE_1      VARCHAR2 (6), 
  VCM_LOW_ANLY_CODE_2      VARCHAR2 (6), 
  VCM_HIGH_COMP_CODE       VARCHAR2 (3), 
  VCM_HIGH_MAIN_ACNT_CODE  VARCHAR2 (6), 
  VCM_HIGH_SUB_ACNT_CODE   VARCHAR2 (6), 
  VCM_HIGH_DIVN_CODE       VARCHAR2 (6), 
  VCM_HIGH_DEPT_CODE       VARCHAR2 (6), 
  VCM_HIGH_ANLY_CODE_1     VARCHAR2 (6), 
  VCM_HIGH_ANLY_CODE_2     VARCHAR2 (6), 
  VCM_IE_CODE              VARCHAR2 (1), 
  VCM_ERROR_MSG            VARCHAR2 (60), 
  VCM_CR_UID               VARCHAR2 (10)  DEFAULT 'TEST1', 
  VCM_CR_DT                DATE          DEFAULT SYSDATE ) 
/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FM_VALID_COMB
BEFORE INSERT OR UPDATE OR DELETE ON FM_VALID_COMB
FOR EACH ROW
DECLARE
 NEW_VCM_SEQ_NO                NUMBER(1) := NULL;
 NEW_VCM_LOW_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_VCM_LOW_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_VCM_LOW_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_VCM_LOW_DIVN_CODE         VARCHAR2(1) := NULL;
 NEW_VCM_LOW_DEPT_CODE         VARCHAR2(1) := NULL;
 NEW_VCM_LOW_ANLY_CODE_1       VARCHAR2(1) := NULL;
 NEW_VCM_LOW_ANLY_CODE_2       VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_COMP_CODE        VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_MAIN_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_SUB_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_DIVN_CODE        VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_DEPT_CODE        VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_ANLY_CODE_1      VARCHAR2(1) := NULL;
 NEW_VCM_HIGH_ANLY_CODE_2      VARCHAR2(1) := NULL;
 NEW_VCM_IE_CODE               VARCHAR2(1) := NULL;
 NEW_VCM_ERROR_MSG             VARCHAR2(1) := NULL;
 NEW_VCM_CR_UID                VARCHAR2(1) := NULL;
 NEW_VCM_CR_DT                 DATE        := NULL;
 TRG_MODE                      VARCHAR2(1);
 TRG_ERR_NO                    NUMBER(6);
 TRG_ERR_MSG                   VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_VALID_COMB (
         :OLD.VCM_SEQ_NO,
         :OLD.VCM_LOW_COMP_CODE,
         :OLD.VCM_LOW_MAIN_ACNT_CODE,
         :OLD.VCM_LOW_SUB_ACNT_CODE,
         :OLD.VCM_LOW_DIVN_CODE,
         :OLD.VCM_LOW_DEPT_CODE,
         :OLD.VCM_LOW_ANLY_CODE_1,
         :OLD.VCM_LOW_ANLY_CODE_2,
         :OLD.VCM_HIGH_COMP_CODE,
         :OLD.VCM_HIGH_MAIN_ACNT_CODE,
         :OLD.VCM_HIGH_SUB_ACNT_CODE,
         :OLD.VCM_HIGH_DIVN_CODE,
         :OLD.VCM_HIGH_DEPT_CODE,
         :OLD.VCM_HIGH_ANLY_CODE_1,
         :OLD.VCM_HIGH_ANLY_CODE_2,
         :OLD.VCM_IE_CODE,
         :OLD.VCM_ERROR_MSG,
         :OLD.VCM_CR_UID,
         :OLD.VCM_CR_DT,
         :NEW.VCM_SEQ_NO,
         :NEW.VCM_LOW_COMP_CODE,
         :NEW.VCM_LOW_MAIN_ACNT_CODE,
         :NEW.VCM_LOW_SUB_ACNT_CODE,
         :NEW.VCM_LOW_DIVN_CODE,
         :NEW.VCM_LOW_DEPT_CODE,
         :NEW.VCM_LOW_ANLY_CODE_1,
         :NEW.VCM_LOW_ANLY_CODE_2,
         :NEW.VCM_HIGH_COMP_CODE,
         :NEW.VCM_HIGH_MAIN_ACNT_CODE,
         :NEW.VCM_HIGH_SUB_ACNT_CODE,
         :NEW.VCM_HIGH_DIVN_CODE,
         :NEW.VCM_HIGH_DEPT_CODE,
         :NEW.VCM_HIGH_ANLY_CODE_1,
         :NEW.VCM_HIGH_ANLY_CODE_2,
         :NEW.VCM_IE_CODE,
         :NEW.VCM_ERROR_MSG,
         :NEW.VCM_CR_UID,
         :NEW.VCM_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_VALID_COMB (
         :OLD.VCM_SEQ_NO,
         :OLD.VCM_LOW_COMP_CODE,
         :OLD.VCM_LOW_MAIN_ACNT_CODE,
         :OLD.VCM_LOW_SUB_ACNT_CODE,
         :OLD.VCM_LOW_DIVN_CODE,
         :OLD.VCM_LOW_DEPT_CODE,
         :OLD.VCM_LOW_ANLY_CODE_1,
         :OLD.VCM_LOW_ANLY_CODE_2,
         :OLD.VCM_HIGH_COMP_CODE,
         :OLD.VCM_HIGH_MAIN_ACNT_CODE,
         :OLD.VCM_HIGH_SUB_ACNT_CODE,
         :OLD.VCM_HIGH_DIVN_CODE,
         :OLD.VCM_HIGH_DEPT_CODE,
         :OLD.VCM_HIGH_ANLY_CODE_1,
         :OLD.VCM_HIGH_ANLY_CODE_2,
         :OLD.VCM_IE_CODE,
         :OLD.VCM_ERROR_MSG,
         :OLD.VCM_CR_UID,
         :OLD.VCM_CR_DT,
         NEW_VCM_SEQ_NO,
         NEW_VCM_LOW_COMP_CODE,
         NEW_VCM_LOW_MAIN_ACNT_CODE,
         NEW_VCM_LOW_SUB_ACNT_CODE,
         NEW_VCM_LOW_DIVN_CODE,
         NEW_VCM_LOW_DEPT_CODE,
         NEW_VCM_LOW_ANLY_CODE_1,
         NEW_VCM_LOW_ANLY_CODE_2,
         NEW_VCM_HIGH_COMP_CODE,
         NEW_VCM_HIGH_MAIN_ACNT_CODE,
         NEW_VCM_HIGH_SUB_ACNT_CODE,
         NEW_VCM_HIGH_DIVN_CODE,
         NEW_VCM_HIGH_DEPT_CODE,
         NEW_VCM_HIGH_ANLY_CODE_1,
         NEW_VCM_HIGH_ANLY_CODE_2,
         NEW_VCM_IE_CODE,
         NEW_VCM_ERROR_MSG,
         NEW_VCM_CR_UID,
         NEW_VCM_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FM_YEARLY_BUDGET ( 
  YBUD_COMP_CODE       VARCHAR2 (3), 
  YBUD_ACNT_YEAR       NUMBER (2), 
  YBUD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  YBUD_SUB_ACNT_CODE   VARCHAR2 (6), 
  YBUD_DIVN_CODE       VARCHAR2 (6), 
  YBUD_DEPT_CODE       VARCHAR2 (6), 
  YBUD_HEAD_NO_1       NUMBER (1), 
  YBUD_ANLY_CODE_1     VARCHAR2 (6), 
  YBUD_HEAD_NO_2       NUMBER (1), 
  YBUD_ANLY_CODE_2     VARCHAR2 (6), 
  YBUD_ORGL_AMT        NUMBER (14,3), 
  YBUD_ORGL_DRCR_FLAG  VARCHAR2 (1)  DEFAULT 'D', 
  YBUD_REVI_AMT        NUMBER (14,3), 
  YBUD_REVI_DRCR_FLAG  VARCHAR2 (1)  DEFAULT 'D', 
  YBUD_YEAR_FLAG       VARCHAR2 (1)  DEFAULT 'N', 
  YBUD_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  YBUD_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD  CONSTRAINT PK_YBUD_01
 UNIQUE (YBUD_COMP_CODE, YBUD_ACNT_YEAR, YBUD_MAIN_ACNT_CODE, YBUD_SUB_ACNT_CODE, YBUD_DIVN_CODE, YBUD_DEPT_CODE, YBUD_HEAD_NO_1, YBUD_ANLY_CODE_1, YBUD_HEAD_NO_2, YBUD_ANLY_CODE_2, YBUD_YEAR_FLAG) 
/



ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018490 CHECK  ( YBUD_REVI_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_CHK_02 CHECK  ( YBUD_ORGL_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018484 CHECK  ( YBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018485 CHECK  ( YBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018486 CHECK  ( YBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018487 CHECK  ( YBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018488 CHECK  ( YBUD_ORGL_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018489 CHECK  ( YBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006239 CHECK  ( YBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006240 CHECK  ( YBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006241 CHECK  ( YBUD_ORGL_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006242 CHECK  ( YBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006243 CHECK  ( YBUD_REVI_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006244 CHECK  ( YBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006245 CHECK  ( YBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006246 CHECK  ( YBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_CHK_01 CHECK  ( NVL(YBUD_ORGL_AMT,0) >= 0  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_CHK_03 CHECK  ( NVL(YBUD_REVI_AMT,0) >= 0  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_CHK_04 CHECK  ( YBUD_REVI_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_CHK_05 CHECK  ( YBUD_YEAR_FLAG IN ('C','N','P')  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_01 CHECK  ( YBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_02 CHECK  ( YBUD_ORGL_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_03 CHECK  ( YBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_04 CHECK  ( YBUD_REVI_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_05 CHECK  ( YBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_06 CHECK  ( YBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_07 CHECK  ( YBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018491 CHECK  ( YBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018492 CHECK  ( YBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
FIN_C0018493 CHECK  ( YBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006225 CHECK  ( YBUD_ORGL_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006226 CHECK  ( YBUD_ORGL_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006227 CHECK  ( YBUD_REVI_AMT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006228 CHECK  ( YBUD_REVI_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006229 CHECK  ( YBUD_YEAR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_10 CHECK  ( YBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006232 CHECK  ( YBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006233 CHECK  ( YBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006234 CHECK  ( YBUD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006235 CHECK  ( YBUD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006236 CHECK  ( YBUD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006237 CHECK  ( YBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
SYS_C006238 CHECK  ( YBUD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_08 CHECK  ( YBUD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD CONSTRAINT 
YBUD_NN_09 CHECK  ( YBUD_ACNT_YEAR IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FM_YEARLY_BUDGET" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FM_YEARLY_BUDGET REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_YBUD_COMP_CODE        VARCHAR2(1) := NULL;
 NEW_YBUD_ACNT_YEAR        NUMBER(1) := NULL;
 NEW_YBUD_MAIN_ACNT_CODE   VARCHAR2(1) := NULL;
 NEW_YBUD_SUB_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_YBUD_DIVN_CODE        VARCHAR2(1) := NULL;
 NEW_YBUD_DEPT_CODE        VARCHAR2(1) := NULL;
 NEW_YBUD_HEAD_NO_1        NUMBER(1) := NULL;
 NEW_YBUD_ANLY_CODE_1      VARCHAR2(1) := NULL;
 NEW_YBUD_HEAD_NO_2        NUMBER(1) := NULL;
 NEW_YBUD_ANLY_CODE_2      VARCHAR2(1) := NULL;
 NEW_YBUD_ORGL_AMT         NUMBER(1) := NULL;
 NEW_YBUD_ORGL_DRCR_FLAG   VARCHAR2(1) := NULL;
 NEW_YBUD_REVI_AMT         NUMBER(1) := NULL;
 NEW_YBUD_REVI_DRCR_FLAG   VARCHAR2(1) := NULL;
 NEW_YBUD_YEAR_FLAG        VARCHAR2(1) := NULL;
 NEW_YBUD_CR_UID           VARCHAR2(1) := NULL;
 NEW_YBUD_CR_DT            DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FM_YEARLY_BUDGET (
         :OLD.YBUD_COMP_CODE,
         :OLD.YBUD_ACNT_YEAR,
         :OLD.YBUD_MAIN_ACNT_CODE,
         :OLD.YBUD_SUB_ACNT_CODE,
         :OLD.YBUD_DIVN_CODE,
         :OLD.YBUD_DEPT_CODE,
         :OLD.YBUD_HEAD_NO_1,
         :OLD.YBUD_ANLY_CODE_1,
         :OLD.YBUD_HEAD_NO_2,
         :OLD.YBUD_ANLY_CODE_2,
         :OLD.YBUD_ORGL_AMT,
         :OLD.YBUD_ORGL_DRCR_FLAG,
         :OLD.YBUD_REVI_AMT,
         :OLD.YBUD_REVI_DRCR_FLAG,
         :OLD.YBUD_YEAR_FLAG,
         :OLD.YBUD_CR_UID,
         :OLD.YBUD_CR_DT,
         :NEW.YBUD_COMP_CODE,
         :NEW.YBUD_ACNT_YEAR,
         :NEW.YBUD_MAIN_ACNT_CODE,
         :NEW.YBUD_SUB_ACNT_CODE,
         :NEW.YBUD_DIVN_CODE,
         :NEW.YBUD_DEPT_CODE,
         :NEW.YBUD_HEAD_NO_1,
         :NEW.YBUD_ANLY_CODE_1,
         :NEW.YBUD_HEAD_NO_2,
         :NEW.YBUD_ANLY_CODE_2,
         :NEW.YBUD_ORGL_AMT,
         :NEW.YBUD_ORGL_DRCR_FLAG,
         :NEW.YBUD_REVI_AMT,
         :NEW.YBUD_REVI_DRCR_FLAG,
         :NEW.YBUD_YEAR_FLAG,
         :NEW.YBUD_CR_UID,
         :NEW.YBUD_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FM_YEARLY_BUDGET (
         :OLD.YBUD_COMP_CODE,
         :OLD.YBUD_ACNT_YEAR,
         :OLD.YBUD_MAIN_ACNT_CODE,
         :OLD.YBUD_SUB_ACNT_CODE,
         :OLD.YBUD_DIVN_CODE,
         :OLD.YBUD_DEPT_CODE,
         :OLD.YBUD_HEAD_NO_1,
         :OLD.YBUD_ANLY_CODE_1,
         :OLD.YBUD_HEAD_NO_2,
         :OLD.YBUD_ANLY_CODE_2,
         :OLD.YBUD_ORGL_AMT,
         :OLD.YBUD_ORGL_DRCR_FLAG,
         :OLD.YBUD_REVI_AMT,
         :OLD.YBUD_REVI_DRCR_FLAG,
         :OLD.YBUD_YEAR_FLAG,
         :OLD.YBUD_CR_UID,
         :OLD.YBUD_CR_DT,
         NEW_YBUD_COMP_CODE,
         NEW_YBUD_ACNT_YEAR,
         NEW_YBUD_MAIN_ACNT_CODE,
         NEW_YBUD_SUB_ACNT_CODE,
         NEW_YBUD_DIVN_CODE,
         NEW_YBUD_DEPT_CODE,
         NEW_YBUD_HEAD_NO_1,
         NEW_YBUD_ANLY_CODE_1,
         NEW_YBUD_HEAD_NO_2,
         NEW_YBUD_ANLY_CODE_2,
         NEW_YBUD_ORGL_AMT,
         NEW_YBUD_ORGL_DRCR_FLAG,
         NEW_YBUD_REVI_AMT,
         NEW_YBUD_REVI_DRCR_FLAG,
         NEW_YBUD_YEAR_FLAG,
         NEW_YBUD_CR_UID,
         NEW_YBUD_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FP_DBTRG_INTERFACE ( 
  DBTI_KEY_FIELD  VARCHAR2 (30), 
  DBTI_VALUE_1    VARCHAR2 (30), 
  DBTI_VALUE_2    VARCHAR2 (30), 
  DBTI_VALUE_3    VARCHAR2 (30), 
  DBTI_VALUE_4    VARCHAR2 (30), 
  DBTI_VALUE_5    VARCHAR2 (30), 
  DBTI_VALUE_6    VARCHAR2 (30), 
  DBTI_VALUE_7    VARCHAR2 (30), 
  DBTI_VALUE_8    VARCHAR2 (30), 
  DBTI_VALUE_9    VARCHAR2 (30), 
  DBTI_VALUE_10   VARCHAR2 (30), 
  DBTI_VALUE_11   VARCHAR2 (30), 
  DBTI_VALUE_12   VARCHAR2 (30), 
  DBTI_VALUE_13   VARCHAR2 (30), 
  DBTI_VALUE_14   VARCHAR2 (30), 
  DBTI_VALUE_15   VARCHAR2 (30) ) 
/


CREATE INDEX NUX_FP_DBTRG_INTERFACE_01 ON 
  FP_DBTRG_INTERFACE(DBTI_KEY_FIELD) 

/

/
CREATE TABLE FP_ERROR_MESSAGE ( 
  EM_ERR_NO          NUMBER (6)    NOT NULL, 
  EM_LANG_CODE       VARCHAR2 (3), 
  EM_ERR_MSG         VARCHAR2 (80), 
  EM_ERR_MSG_FOR     VARCHAR2 (80), 
  EM_ERR_ACTN        VARCHAR2 (2000), 
  EM_ERR_REASON      VARCHAR2 (2000), 
  EM_ERR_ACTN_FOR    VARCHAR2 (2000), 
  EM_ERR_REASON_FOR  VARCHAR2 (2000), 
  EM_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  EM_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_EM_01
  PRIMARY KEY ( EM_ERR_NO ) ) 
/

ALTER TABLE FP_ERROR_MESSAGE ADD CONSTRAINT 
FIN_C0018494 CHECK  ( EM_ERR_NO IS NOT NULL  ) 
/

ALTER TABLE FP_ERROR_MESSAGE ADD CONSTRAINT 
SYS_C006263 CHECK  ( EM_ERR_NO IS NOT NULL  ) 
/



/
CREATE TABLE FP_PARAMETER ( 
  PARA_ID        VARCHAR2 (15), 
  PARA_NO        NUMBER (3), 
  PARA_DESC      VARCHAR2 (60), 
  PARA_BL_DESC   VARCHAR2 (60), 
  PARA_VALUE     VARCHAR2 (80), 
  PARA_BL_VALUE  VARCHAR2 (80), 
  PARA_CR_UID    VARCHAR2 (10)  DEFAULT 'TEST1', 
  PARA_CR_DT     DATE          DEFAULT SYSDATE, 
  PARA_MOD_YN    VARCHAR2 (1) ) 
/


CREATE INDEX FP_PARAMETER_NX ON 
  FP_PARAMETER(PARA_ID) 

/

/
CREATE TABLE FP_RATIO_HEAD_SETUP ( 
  RHS_RATIO_HEAD           VARCHAR2 (20)  NOT NULL, 
  RHS_SEQ_NO               NUMBER (3)    NOT NULL, 
  RHS_AS                   NUMBER (1), 
  RHS_LOW_COMP_CODE        VARCHAR2 (3), 
  RHS_LOW_MAIN_ACNT_CODE   VARCHAR2 (6), 
  RHS_LOW_SUB_ACNT_CODE    VARCHAR2 (6), 
  RHS_LOW_DIVN_CODE        VARCHAR2 (6), 
  RHS_LOW_DEPT_CODE        VARCHAR2 (6), 
  RHS_LOW_ANLY_CODE_1      VARCHAR2 (6), 
  RHS_LOW_ANLY_CODE_2      VARCHAR2 (6), 
  RHS_HIGH_COMP_CODE       VARCHAR2 (3), 
  RHS_HIGH_MAIN_ACNT_CODE  VARCHAR2 (6), 
  RHS_HIGH_SUB_ACNT_CODE   VARCHAR2 (6), 
  RHS_HIGH_DIVN_CODE       VARCHAR2 (6), 
  RHS_HIGH_DEPT_CODE       VARCHAR2 (6), 
  RHS_HIGH_ANLY_CODE_1     VARCHAR2 (6), 
  RHS_HIGH_ANLY_CODE_2     VARCHAR2 (6), 
  RHS_IE_CODE              VARCHAR2 (1), 
  RHS_CR_UID               VARCHAR2 (10)  DEFAULT 'TEST1', 
  RHS_CR_DT                DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_RHS_01
  PRIMARY KEY ( RHS_RATIO_HEAD, RHS_SEQ_NO ) ) 
/

ALTER TABLE FP_RATIO_HEAD_SETUP ADD CONSTRAINT 
FIN_C0018496 CHECK  ( RHS_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_HEAD_SETUP ADD CONSTRAINT 
SYS_C006266 CHECK  ( RHS_RATIO_HEAD IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_HEAD_SETUP ADD CONSTRAINT 
SYS_C006267 CHECK  ( RHS_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_HEAD_SETUP ADD CONSTRAINT 
FIN_C0018495 CHECK  ( RHS_RATIO_HEAD IS NOT NULL  ) 
/



/
CREATE TABLE FP_RATIO_SETUP ( 
  RATIO_ID      VARCHAR2 (10)  NOT NULL, 
  RATIO_NAME_1  VARCHAR2 (30), 
  RATIO_NAME_2  VARCHAR2 (30), 
  RATIO_NUMTR   VARCHAR2 (2000), 
  RATIO_DENTR   VARCHAR2 (2000), 
  RATIO_CR_UID  VARCHAR2 (10)  DEFAULT 'TEST1', 
  RATIO_CR_DT   DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_RATIO_01
  PRIMARY KEY ( RATIO_ID ) ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
FIN_C0018497 CHECK  ( RATIO_ID IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
FIN_C0018498 CHECK  ( RATIO_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
FIN_C0018499 CHECK  ( RATIO_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
RATIO_NN_01 CHECK  ( RATIO_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
RATIO_NN_02 CHECK  ( RATIO_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
SYS_C006275 CHECK  ( RATIO_ID IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
SYS_C006276 CHECK  ( RATIO_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FP_RATIO_SETUP ADD CONSTRAINT 
SYS_C006277 CHECK  ( RATIO_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FP_REP_INFO ( 
  REP_KEY_NO    NUMBER (8), 
  REP_VALUE_1   VARCHAR2 (60), 
  REP_VALUE_2   VARCHAR2 (60), 
  REP_VALUE_3   VARCHAR2 (60), 
  REP_VALUE_4   VARCHAR2 (60), 
  REP_VALUE_5   VARCHAR2 (60), 
  REP_VALUE_6   VARCHAR2 (60), 
  REP_VALUE_7   VARCHAR2 (60), 
  REP_VALUE_8   VARCHAR2 (60), 
  REP_VALUE_9   VARCHAR2 (60), 
  REP_VALUE_10  VARCHAR2 (60), 
  REP_VALUE_11  VARCHAR2 (60), 
  REP_VALUE_12  VARCHAR2 (60), 
  REP_VALUE_13  VARCHAR2 (60), 
  REP_VALUE_14  VARCHAR2 (60), 
  REP_VALUE_15  VARCHAR2 (60), 
  REP_VALUE_16  VARCHAR2 (60), 
  REP_VALUE_17  VARCHAR2 (60), 
  REP_VALUE_18  VARCHAR2 (60), 
  REP_VALUE_19  VARCHAR2 (60), 
  REP_VALUE_20  VARCHAR2 (60), 
  REP_CR_UID    VARCHAR2 (10)  DEFAULT 'TEST1', 
  REP_CR_DT     DATE          DEFAULT SYSDATE ) 
/


CREATE INDEX NUX_FP_REP_INFO_01 ON 
  FP_REP_INFO(REP_KEY_NO) 

/

/
CREATE TABLE FS_CUR_ACNT_BAL ( 
  ABAL_COMP_CODE       VARCHAR2 (3), 
  ABAL_ACNT_YEAR       NUMBER (2), 
  ABAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ABAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  ABAL_DIVN_CODE       VARCHAR2 (6), 
  ABAL_DEPT_CODE       VARCHAR2 (6), 
  ABAL_HEAD_NO_1       NUMBER (1), 
  ABAL_ANLY_CODE_1     VARCHAR2 (6), 
  ABAL_HEAD_NO_2       NUMBER (1), 
  ABAL_ANLY_CODE_2     VARCHAR2 (6), 
  ABAL_CAL_YEAR        NUMBER (4), 
  ABAL_CAL_MONTH       NUMBER (2), 
  ABAL_CURR_CODE       VARCHAR2 (3), 
  ABAL_LC_MTD_DR       NUMBER (14,3), 
  ABAL_LC_MTD_CR       NUMBER (14,3), 
  ABAL_FC_MTD_DR       NUMBER (14,3), 
  ABAL_FC_MTD_CR       NUMBER (14,3), 
  ABAL_LC_UNP_DR       NUMBER (14,3), 
  ABAL_LC_UNP_CR       NUMBER (14,3), 
  ABAL_FC_UNP_DR       NUMBER (14,3), 
  ABAL_FC_UNP_CR       NUMBER (14,3), 
  ABAL_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  ABAL_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD  CONSTRAINT PK_ABAL_CUR_01
 UNIQUE (ABAL_COMP_CODE, ABAL_MAIN_ACNT_CODE, ABAL_ACNT_YEAR, ABAL_CAL_YEAR, ABAL_CAL_MONTH, ABAL_DIVN_CODE, ABAL_DEPT_CODE, ABAL_SUB_ACNT_CODE, ABAL_CURR_CODE, ABAL_HEAD_NO_1, ABAL_ANLY_CODE_1, ABAL_HEAD_NO_2, ABAL_ANLY_CODE_2) 
/



ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_04 CHECK  ( NVL(ABAL_LC_MTD_DR,0) >= 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018505 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018506 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006283 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006284 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018501 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_05 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_06 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_07 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006289 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006290 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006291 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006293 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006294 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006295 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006296 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006297 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006298 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018502 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018503 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018504 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006299 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006300 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
SYS_C006301 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_01 CHECK  ( ABAL_ACNT_YEAR > 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_02 CHECK  ( ABAL_CAL_YEAR > 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_03 CHECK  ( ABAL_CAL_MONTH BETWEEN 0 AND 12  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_05 CHECK  ( NVL(ABAL_LC_MTD_CR,0) >= 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_06 CHECK  ( NVL(ABAL_FC_MTD_DR,0) >= 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_CHK_07 CHECK  ( NVL(ABAL_FC_MTD_CR,0) >= 0  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_01 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_02 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_03 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
ABAL_CUR_NN_04 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD CONSTRAINT 
FIN_C0018500 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/




CREATE UNIQUE INDEX FUX_FS_CUR_ACNT_BAL ON 
  FS_CUR_ACNT_BAL(ABAL_COMP_CODE, ABAL_MAIN_ACNT_CODE, ABAL_CAL_YEAR, ABAL_CAL_MONTH, ABAL_ACNT_YEAR, ABAL_SUB_ACNT_CODE, ABAL_CURR_CODE, ABAL_DIVN_CODE, ABAL_DEPT_CODE, ABAL_ANLY_CODE_1, ABAL_ANLY_CODE_2) 

CREATE INDEX NUX_FS_CUR_ACNT_BAL_01 ON 
  FS_CUR_ACNT_BAL(ABAL_COMP_CODE, ABAL_MAIN_ACNT_CODE, ABAL_SUB_ACNT_CODE, ABAL_CAL_YEAR, ABAL_CAL_MONTH, ABAL_CURR_CODE, ABAL_DIVN_CODE, ABAL_DEPT_CODE) 

/

/
CREATE TABLE FS_MATCH_OS ( 
  OST_KEY_NO             NUMBER (8), 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1), 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10), 
  OST_CR_DT              DATE, 
  OST_UNMATCH_UID        VARCHAR2 (10), 
  OST_UNMATCH_DT         DATE ) 
/

/
CREATE TABLE FS_PDC_TRAIL ( 
  PT_PDC_SEQ_NO     NUMBER (10), 
  PT_PDC_COMP_CODE  VARCHAR2 (3), 
  PT_PDC_CHQ_NO     VARCHAR2 (10), 
  PT_ACNT_YEAR      NUMBER (2), 
  PT_TRAN_CODE      VARCHAR2 (3), 
  PT_DOC_NO         NUMBER (6), 
  PT_SEQ_NO         NUMBER (3), 
  PT_CR_UID         VARCHAR2 (10), 
  PT_CR_DT          DATE ) 
/

/
CREATE TABLE FS_PROC_DETAIL ( 
  PDS_KEY_NO          NUMBER (8)    NOT NULL, 
  PDS_SEQ_NO          NUMBER (6)    NOT NULL, 
  PDS_COMP_CODE       VARCHAR2 (3), 
  PDS_CAL_MONTH       NUMBER (2), 
  PDS_CAL_YEAR        NUMBER (4), 
  PDS_MAIN_ACNT_CODE  VARCHAR2 (6), 
  PDS_SUB_ACNT_CODE   VARCHAR2 (6), 
  PDS_DIVN_CODE       VARCHAR2 (6), 
  PDS_DEPT_CODE       VARCHAR2 (6), 
  PDS_HEAD_NO_1       NUMBER (1), 
  PDS_ANLY_CODE_1     VARCHAR2 (6), 
  PDS_HEAD_NO_2       NUMBER (1), 
  PDS_ANLY_CODE_2     VARCHAR2 (6), 
  PDS_BEFORE_BAL_AMT  NUMBER (14,3), 
  PDS_AFTER_BAL_AMT   NUMBER (14,3), 
  PDS_PROC_UID        VARCHAR2 (10), 
  PDS_PROC_DT         DATE, 
  PDS_PROC_STATUS     VARCHAR2 (10), 
  PDS_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  PDS_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_PDS_01
  PRIMARY KEY ( PDS_KEY_NO, PDS_SEQ_NO ) ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018508 CHECK  ( PDS_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_CHK_03 CHECK  ( PDS_CAL_YEAR > 0  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_CHK_04 CHECK  ( PDS_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_NN_01 CHECK  ( PDS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_NN_02 CHECK  ( PDS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_NN_03 CHECK  ( PDS_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
PDS_NN_04 CHECK  ( PDS_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018507 CHECK  ( PDS_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018509 CHECK  ( PDS_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018510 CHECK  ( PDS_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018511 CHECK  ( PDS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018512 CHECK  ( PDS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006314 CHECK  ( PDS_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006315 CHECK  ( PDS_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006316 CHECK  ( PDS_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006317 CHECK  ( PDS_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006318 CHECK  ( PDS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006319 CHECK  ( PDS_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FS_PROC_HEADER ( 
  PHS_KEY_NO          NUMBER (8)    NOT NULL, 
  PHS_USER_ID         VARCHAR2 (10), 
  PHS_PROC_DT         DATE, 
  PHS_PROC_STATUS     VARCHAR2 (1), 
  PHS_COMP_CODE       VARCHAR2 (3), 
  PHS_TRAN_FRM        VARCHAR2 (3), 
  PHS_TRAN_TO         VARCHAR2 (3), 
  PHS_TRAN_DT_FRM     DATE, 
  PHS_TRAN_DT_TO      DATE, 
  PHS_DOC_NO_FRM      NUMBER (6), 
  PHS_DOC_NO_TO       NUMBER (6), 
  PHS_USER_PATTERN    VARCHAR2 (10), 
  PHS_HEAD_REC_TOT    NUMBER (6), 
  PHS_DETAIL_REC_TOT  NUMBER (6), 
  PHS_AMT_TOT         NUMBER (14,3), 
  PHS_ERROR_NAME      VARCHAR2 (20), 
  PHS_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  PHS_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_PHS_01
  PRIMARY KEY ( PHS_KEY_NO ) ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018513 CHECK  ( PHS_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018514 CHECK  ( PHS_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018515 CHECK  ( PHS_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018516 CHECK  ( PHS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018517 CHECK  ( PHS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_CHK_02 CHECK  ( (PHS_DOC_NO_TO  >  0)  AND  (PHS_DOC_NO_TO  >= PHS_DOC_NO_FRM)  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_NN_01 CHECK  ( PHS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_NN_02 CHECK  ( PHS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_NN_03 CHECK  ( PHS_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_NN_04 CHECK  ( PHS_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
SYS_C006343 CHECK  ( PHS_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
SYS_C006344 CHECK  ( PHS_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
SYS_C006345 CHECK  ( PHS_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
SYS_C006346 CHECK  ( PHS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
SYS_C006348 CHECK  ( PHS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PROC_HEADER ADD CONSTRAINT 
PHS_CHK_01 CHECK  ( PHS_DOC_NO_FRM > 0  ) 
/



/
CREATE TABLE FS_PRV_ACNT_BAL ( 
  ABAL_COMP_CODE       VARCHAR2 (3), 
  ABAL_ACNT_YEAR       NUMBER (2), 
  ABAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ABAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  ABAL_DIVN_CODE       VARCHAR2 (6), 
  ABAL_DEPT_CODE       VARCHAR2 (6), 
  ABAL_HEAD_NO_1       NUMBER (1), 
  ABAL_ANLY_CODE_1     VARCHAR2 (6), 
  ABAL_HEAD_NO_2       NUMBER (1), 
  ABAL_ANLY_CODE_2     VARCHAR2 (6), 
  ABAL_CAL_YEAR        NUMBER (4), 
  ABAL_CAL_MONTH       NUMBER (2), 
  ABAL_CURR_CODE       VARCHAR2 (3), 
  ABAL_LC_MTD_DR       NUMBER (14,3), 
  ABAL_LC_MTD_CR       NUMBER (14,3), 
  ABAL_FC_MTD_DR       NUMBER (14,3), 
  ABAL_FC_MTD_CR       NUMBER (14,3), 
  ABAL_LC_UNP_DR       NUMBER (14,3), 
  ABAL_LC_UNP_CR       NUMBER (14,3), 
  ABAL_FC_UNP_DR       NUMBER (14,3), 
  ABAL_FC_UNP_CR       NUMBER (14,3), 
  ABAL_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  ABAL_CR_DT           DATE          DEFAULT SYSDATE ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD  CONSTRAINT PK_ABAL_PRV_01
 UNIQUE (ABAL_COMP_CODE, ABAL_MAIN_ACNT_CODE, ABAL_ACNT_YEAR, ABAL_CAL_YEAR, ABAL_CAL_MONTH, ABAL_DIVN_CODE, ABAL_DEPT_CODE, ABAL_SUB_ACNT_CODE, ABAL_CURR_CODE, ABAL_HEAD_NO_1, ABAL_ANLY_CODE_1, ABAL_HEAD_NO_2, ABAL_ANLY_CODE_2) 
/



ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018518 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006380 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006381 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006382 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006383 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006384 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006385 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_01 CHECK  ( ABAL_ACNT_YEAR > 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018519 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018520 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018521 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018522 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018523 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_02 CHECK  ( ABAL_CAL_YEAR > 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_03 CHECK  ( ABAL_CAL_MONTH BETWEEN 0 AND 12  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_04 CHECK  ( NVL(ABAL_LC_MTD_DR,0) >= 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_05 CHECK  ( NVL(ABAL_LC_MTD_CR,0) >= 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_06 CHECK  ( NVL(ABAL_FC_MTD_DR,0) >= 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_CHK_07 CHECK  ( NVL(ABAL_FC_MTD_CR,0) >= 0  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_01 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_02 CHECK  ( ABAL_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_03 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_04 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_05 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_06 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
ABAL_PRV_NN_07 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006379 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006350 CHECK  ( ABAL_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006351 CHECK  ( ABAL_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006352 CHECK  ( ABAL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006353 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006354 CHECK  ( ABAL_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006355 CHECK  ( ABAL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
FIN_C0018524 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD CONSTRAINT 
SYS_C006357 CHECK  ( ABAL_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FS_PRV_ACNT_BAL_01 ON 
  FS_PRV_ACNT_BAL(ABAL_COMP_CODE, ABAL_MAIN_ACNT_CODE, ABAL_SUB_ACNT_CODE, ABAL_CAL_YEAR, ABAL_CAL_MONTH, ABAL_CURR_CODE, ABAL_DIVN_CODE, ABAL_DEPT_CODE) 

/

/
CREATE TABLE FS_PURGE_AUDIT_TRAIL ( 
  PAT_KEY_NO          NUMBER (8), 
  PAT_ALL_CR_DT       DATE, 
  PAT_ORGN_CR_DT      DATE, 
  PAT_COMP_CR_DT      DATE, 
  PAT_DIVN_CR_DT      DATE, 
  PAT_DEPT_CR_DT      DATE, 
  PAT_TC_CR_DT        DATE, 
  PAT_TRAN_CR_DT      DATE, 
  PAT_TAG_CR_DT       DATE, 
  PAT_ALVL_CR_DT      DATE, 
  PAT_NARR_CR_DT      DATE, 
  PAT_ALL_COA_CR_DT   DATE, 
  PAT_COA_CR_DT       DATE, 
  PAT_LVL_CR_DT       DATE, 
  PAT_CAF_CR_DT       DATE, 
  PAT_MAIN_CR_DT      DATE, 
  PAT_SUB_CR_DT       DATE, 
  PAT_MS_CR_DT        DATE, 
  PAT_SCOMP_CR_DT     DATE, 
  PAT_SCURR_CR_DT     DATE, 
  PAT_ACOMP_CR_DT     DATE, 
  PAT_ACURR_CR_DT     DATE, 
  PAT_SUPP_CR_DT      DATE, 
  PAT_CUST_CR_DT      DATE, 
  PAT_CATG_CR_DT      DATE, 
  PAT_ALS_CR_DT       DATE, 
  PAT_ALL_ANLY_CR_DT  DATE, 
  PAT_ANLY_CR_DT      DATE, 
  PAT_AANLY_CR_DT     DATE, 
  PAT_AFM_CR_DT       DATE, 
  PAT_ALM_CR_DT       DATE, 
  PAT_AAL_CR_DT       DATE, 
  PAT_AAF_CR_DT       DATE, 
  PAT_ACTY_CR_DT      DATE, 
  PAT_AVAL_CR_DT      DATE, 
  PAT_PROC_CR_DT      DATE, 
  PAT_PHS_CR_DT       DATE, 
  PAT_PDS_CR_DT       DATE, 
  PAT_MISC_CR_DT      DATE, 
  PAT_CURR_CR_DT      DATE, 
  PAT_CER_CR_DT       DATE, 
  PAT_RHS_CR_DT       DATE, 
  PAT_RATIO_CR_DT     DATE, 
  PAT_VCM_CR_DT       DATE, 
  PAT_APER_CR_DT      DATE, 
  PAT_CR_UID          VARCHAR2 (10), 
  PAT_CR_DT           DATE ) 
/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FS_PURGE_AUDIT_TRAIL
BEFORE INSERT OR UPDATE OR DELETE ON FS_PURGE_AUDIT_TRAIL
FOR EACH ROW
DECLARE
 NEW_PAT_KEY_NO            NUMBER(1) := NULL;
 NEW_PAT_ALL_CR_DT         DATE        := NULL;
 NEW_PAT_ORGN_CR_DT        DATE        := NULL;
 NEW_PAT_COMP_CR_DT        DATE        := NULL;
 NEW_PAT_DIVN_CR_DT        DATE        := NULL;
 NEW_PAT_DEPT_CR_DT        DATE        := NULL;
 NEW_PAT_TC_CR_DT          DATE        := NULL;
 NEW_PAT_TRAN_CR_DT        DATE        := NULL;
 NEW_PAT_TAG_CR_DT         DATE        := NULL;
 NEW_PAT_ALVL_CR_DT        DATE        := NULL;
 NEW_PAT_NARR_CR_DT        DATE        := NULL;
 NEW_PAT_ALL_COA_CR_DT     DATE        := NULL;
 NEW_PAT_COA_CR_DT         DATE        := NULL;
 NEW_PAT_LVL_CR_DT         DATE        := NULL;
 NEW_PAT_CAF_CR_DT         DATE        := NULL;
 NEW_PAT_MAIN_CR_DT        DATE        := NULL;
 NEW_PAT_SUB_CR_DT         DATE        := NULL;
 NEW_PAT_MS_CR_DT          DATE        := NULL;
 NEW_PAT_SCOMP_CR_DT       DATE        := NULL;
 NEW_PAT_SCURR_CR_DT       DATE        := NULL;
 NEW_PAT_ACOMP_CR_DT       DATE        := NULL;
 NEW_PAT_ACURR_CR_DT       DATE        := NULL;
 NEW_PAT_SUPP_CR_DT        DATE        := NULL;
 NEW_PAT_CUST_CR_DT        DATE        := NULL;
 NEW_PAT_CATG_CR_DT        DATE        := NULL;
 NEW_PAT_ALS_CR_DT         DATE        := NULL;
 NEW_PAT_ALL_ANLY_CR_DT    DATE        := NULL;
 NEW_PAT_ANLY_CR_DT        DATE        := NULL;
 NEW_PAT_AANLY_CR_DT       DATE        := NULL;
 NEW_PAT_AFM_CR_DT         DATE        := NULL;
 NEW_PAT_ALM_CR_DT         DATE        := NULL;
 NEW_PAT_AAL_CR_DT         DATE        := NULL;
 NEW_PAT_AAF_CR_DT         DATE        := NULL;
 NEW_PAT_ACTY_CR_DT        DATE        := NULL;
 NEW_PAT_AVAL_CR_DT        DATE        := NULL;
 NEW_PAT_PROC_CR_DT        DATE        := NULL;
 NEW_PAT_PHS_CR_DT         DATE        := NULL;
 NEW_PAT_PDS_CR_DT         DATE        := NULL;
 NEW_PAT_MISC_CR_DT        DATE        := NULL;
 NEW_PAT_CURR_CR_DT        DATE        := NULL;
 NEW_PAT_CER_CR_DT         DATE        := NULL;
 NEW_PAT_RHS_CR_DT         DATE        := NULL;
 NEW_PAT_RATIO_CR_DT       DATE        := NULL;
 NEW_PAT_VCM_CR_DT         DATE        := NULL;
 NEW_PAT_APER_CR_DT        DATE        := NULL;
 NEW_PAT_CR_UID            VARCHAR2(1) := NULL;
 NEW_PAT_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FS_PURGE_AUDIT_TRAIL (
         :OLD.PAT_KEY_NO,
         :OLD.PAT_ALL_CR_DT,
         :OLD.PAT_ORGN_CR_DT,
         :OLD.PAT_COMP_CR_DT,
         :OLD.PAT_DIVN_CR_DT,
         :OLD.PAT_DEPT_CR_DT,
         :OLD.PAT_TC_CR_DT,
         :OLD.PAT_TRAN_CR_DT,
         :OLD.PAT_TAG_CR_DT,
         :OLD.PAT_ALVL_CR_DT,
         :OLD.PAT_NARR_CR_DT,
         :OLD.PAT_ALL_COA_CR_DT,
         :OLD.PAT_COA_CR_DT,
         :OLD.PAT_LVL_CR_DT,
         :OLD.PAT_CAF_CR_DT,
         :OLD.PAT_MAIN_CR_DT,
         :OLD.PAT_SUB_CR_DT,
         :OLD.PAT_MS_CR_DT,
         :OLD.PAT_SCOMP_CR_DT,
         :OLD.PAT_SCURR_CR_DT,
         :OLD.PAT_ACOMP_CR_DT,
         :OLD.PAT_ACURR_CR_DT,
         :OLD.PAT_SUPP_CR_DT,
         :OLD.PAT_CUST_CR_DT,
         :OLD.PAT_CATG_CR_DT,
         :OLD.PAT_ALS_CR_DT,
         :OLD.PAT_ALL_ANLY_CR_DT,
         :OLD.PAT_ANLY_CR_DT,
         :OLD.PAT_AANLY_CR_DT,
         :OLD.PAT_AFM_CR_DT,
         :OLD.PAT_ALM_CR_DT,
         :OLD.PAT_AAL_CR_DT,
         :OLD.PAT_AAF_CR_DT,
         :OLD.PAT_ACTY_CR_DT,
         :OLD.PAT_AVAL_CR_DT,
         :OLD.PAT_PROC_CR_DT,
         :OLD.PAT_PHS_CR_DT,
         :OLD.PAT_PDS_CR_DT,
         :OLD.PAT_MISC_CR_DT,
         :OLD.PAT_CURR_CR_DT,
         :OLD.PAT_CER_CR_DT,
         :OLD.PAT_RHS_CR_DT,
         :OLD.PAT_RATIO_CR_DT,
         :OLD.PAT_VCM_CR_DT,
         :OLD.PAT_APER_CR_DT,
         :OLD.PAT_CR_UID,
         :OLD.PAT_CR_DT,
         :NEW.PAT_KEY_NO,
         :NEW.PAT_ALL_CR_DT,
         :NEW.PAT_ORGN_CR_DT,
         :NEW.PAT_COMP_CR_DT,
         :NEW.PAT_DIVN_CR_DT,
         :NEW.PAT_DEPT_CR_DT,
         :NEW.PAT_TC_CR_DT,
         :NEW.PAT_TRAN_CR_DT,
         :NEW.PAT_TAG_CR_DT,
         :NEW.PAT_ALVL_CR_DT,
         :NEW.PAT_NARR_CR_DT,
         :NEW.PAT_ALL_COA_CR_DT,
         :NEW.PAT_COA_CR_DT,
         :NEW.PAT_LVL_CR_DT,
         :NEW.PAT_CAF_CR_DT,
         :NEW.PAT_MAIN_CR_DT,
         :NEW.PAT_SUB_CR_DT,
         :NEW.PAT_MS_CR_DT,
         :NEW.PAT_SCOMP_CR_DT,
         :NEW.PAT_SCURR_CR_DT,
         :NEW.PAT_ACOMP_CR_DT,
         :NEW.PAT_ACURR_CR_DT,
         :NEW.PAT_SUPP_CR_DT,
         :NEW.PAT_CUST_CR_DT,
         :NEW.PAT_CATG_CR_DT,
         :NEW.PAT_ALS_CR_DT,
         :NEW.PAT_ALL_ANLY_CR_DT,
         :NEW.PAT_ANLY_CR_DT,
         :NEW.PAT_AANLY_CR_DT,
         :NEW.PAT_AFM_CR_DT,
         :NEW.PAT_ALM_CR_DT,
         :NEW.PAT_AAL_CR_DT,
         :NEW.PAT_AAF_CR_DT,
         :NEW.PAT_ACTY_CR_DT,
         :NEW.PAT_AVAL_CR_DT,
         :NEW.PAT_PROC_CR_DT,
         :NEW.PAT_PHS_CR_DT,
         :NEW.PAT_PDS_CR_DT,
         :NEW.PAT_MISC_CR_DT,
         :NEW.PAT_CURR_CR_DT,
         :NEW.PAT_CER_CR_DT,
         :NEW.PAT_RHS_CR_DT,
         :NEW.PAT_RATIO_CR_DT,
         :NEW.PAT_VCM_CR_DT,
         :NEW.PAT_APER_CR_DT,
         :NEW.PAT_CR_UID,
         :NEW.PAT_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FS_PURGE_AUDIT_TRAIL (
         :OLD.PAT_KEY_NO,
         :OLD.PAT_ALL_CR_DT,
         :OLD.PAT_ORGN_CR_DT,
         :OLD.PAT_COMP_CR_DT,
         :OLD.PAT_DIVN_CR_DT,
         :OLD.PAT_DEPT_CR_DT,
         :OLD.PAT_TC_CR_DT,
         :OLD.PAT_TRAN_CR_DT,
         :OLD.PAT_TAG_CR_DT,
         :OLD.PAT_ALVL_CR_DT,
         :OLD.PAT_NARR_CR_DT,
         :OLD.PAT_ALL_COA_CR_DT,
         :OLD.PAT_COA_CR_DT,
         :OLD.PAT_LVL_CR_DT,
         :OLD.PAT_CAF_CR_DT,
         :OLD.PAT_MAIN_CR_DT,
         :OLD.PAT_SUB_CR_DT,
         :OLD.PAT_MS_CR_DT,
         :OLD.PAT_SCOMP_CR_DT,
         :OLD.PAT_SCURR_CR_DT,
         :OLD.PAT_ACOMP_CR_DT,
         :OLD.PAT_ACURR_CR_DT,
         :OLD.PAT_SUPP_CR_DT,
         :OLD.PAT_CUST_CR_DT,
         :OLD.PAT_CATG_CR_DT,
         :OLD.PAT_ALS_CR_DT,
         :OLD.PAT_ALL_ANLY_CR_DT,
         :OLD.PAT_ANLY_CR_DT,
         :OLD.PAT_AANLY_CR_DT,
         :OLD.PAT_AFM_CR_DT,
         :OLD.PAT_ALM_CR_DT,
         :OLD.PAT_AAL_CR_DT,
         :OLD.PAT_AAF_CR_DT,
         :OLD.PAT_ACTY_CR_DT,
         :OLD.PAT_AVAL_CR_DT,
         :OLD.PAT_PROC_CR_DT,
         :OLD.PAT_PHS_CR_DT,
         :OLD.PAT_PDS_CR_DT,
         :OLD.PAT_MISC_CR_DT,
         :OLD.PAT_CURR_CR_DT,
         :OLD.PAT_CER_CR_DT,
         :OLD.PAT_RHS_CR_DT,
         :OLD.PAT_RATIO_CR_DT,
         :OLD.PAT_VCM_CR_DT,
         :OLD.PAT_APER_CR_DT,
         :OLD.PAT_CR_UID,
         :OLD.PAT_CR_DT,
         NEW_PAT_KEY_NO,
         NEW_PAT_ALL_CR_DT,
         NEW_PAT_ORGN_CR_DT,
         NEW_PAT_COMP_CR_DT,
         NEW_PAT_DIVN_CR_DT,
         NEW_PAT_DEPT_CR_DT,
         NEW_PAT_TC_CR_DT,
         NEW_PAT_TRAN_CR_DT,
         NEW_PAT_TAG_CR_DT,
         NEW_PAT_ALVL_CR_DT,
         NEW_PAT_NARR_CR_DT,
         NEW_PAT_ALL_COA_CR_DT,
         NEW_PAT_COA_CR_DT,
         NEW_PAT_LVL_CR_DT,
         NEW_PAT_CAF_CR_DT,
         NEW_PAT_MAIN_CR_DT,
         NEW_PAT_SUB_CR_DT,
         NEW_PAT_MS_CR_DT,
         NEW_PAT_SCOMP_CR_DT,
         NEW_PAT_SCURR_CR_DT,
         NEW_PAT_ACOMP_CR_DT,
         NEW_PAT_ACURR_CR_DT,
         NEW_PAT_SUPP_CR_DT,
         NEW_PAT_CUST_CR_DT,
         NEW_PAT_CATG_CR_DT,
         NEW_PAT_ALS_CR_DT,
         NEW_PAT_ALL_ANLY_CR_DT,
         NEW_PAT_ANLY_CR_DT,
         NEW_PAT_AANLY_CR_DT,
         NEW_PAT_AFM_CR_DT,
         NEW_PAT_ALM_CR_DT,
         NEW_PAT_AAL_CR_DT,
         NEW_PAT_AAF_CR_DT,
         NEW_PAT_ACTY_CR_DT,
         NEW_PAT_AVAL_CR_DT,
         NEW_PAT_PROC_CR_DT,
         NEW_PAT_PHS_CR_DT,
         NEW_PAT_PDS_CR_DT,
         NEW_PAT_MISC_CR_DT,
         NEW_PAT_CURR_CR_DT,
         NEW_PAT_CER_CR_DT,
         NEW_PAT_RHS_CR_DT,
         NEW_PAT_RATIO_CR_DT,
         NEW_PAT_VCM_CR_DT,
         NEW_PAT_APER_CR_DT,
         NEW_PAT_CR_UID,
         NEW_PAT_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FS_SYS_PROC_DETAIL ( 
  SPD_KEY_NO          NUMBER (8), 
  SPD_SEQ_NO          NUMBER (6), 
  SPD_COMP_CODE       VARCHAR2 (3), 
  SPD_CAL_MONTH       NUMBER (2), 
  SPD_CAL_YEAR        NUMBER (4), 
  SPD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  SPD_SUB_ACNT_CODE   VARCHAR2 (6), 
  SPD_DIVN_CODE       VARCHAR2 (6), 
  SPD_DEPT_CODE       VARCHAR2 (6), 
  SPD_HEAD_NO_1       NUMBER (1), 
  SPD_ANLY_CODE_1     VARCHAR2 (6), 
  SPD_HEAD_NO_2       NUMBER (1), 
  SPD_ANLY_CODE_2     VARCHAR2 (6), 
  SPD_BEFORE_BAL_AMT  NUMBER (14,3), 
  SPD_AFTER_BAL_AMT   NUMBER (14,3), 
  SPD_PROC_UID        VARCHAR2 (10), 
  SPD_PROC_DT         DATE, 
  SPD_PROC_STATUS     VARCHAR2 (10), 
  SPD_CR_UID          VARCHAR2 (10), 
  SPD_CR_DT           DATE ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018530 CHECK  ( SPD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018526 CHECK  ( SPD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018527 CHECK  ( SPD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018528 CHECK  ( SPD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018529 CHECK  ( SPD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00916 CHECK  ( SPD_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00917 CHECK  ( SPD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00918 CHECK  ( SPD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00919 CHECK  ( SPD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00920 CHECK  ( SPD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C00921 CHECK  ( SPD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006387 CHECK  ( SPD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006388 CHECK  ( SPD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006389 CHECK  ( SPD_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006390 CHECK  ( SPD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006391 CHECK  ( SPD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006392 CHECK  ( SPD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006393 CHECK  ( SPD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006394 CHECK  ( SPD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006395 CHECK  ( SPD_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006396 CHECK  ( SPD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006397 CHECK  ( SPD_CAL_MONTH IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
SYS_C006398 CHECK  ( SPD_CAL_YEAR IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_DETAIL ADD CONSTRAINT 
FIN_C0018525 CHECK  ( SPD_KEY_NO IS NOT NULL  ) 
/



/
CREATE TABLE FS_SYS_PROC_HEADER ( 
  SPH_KEY_NO          NUMBER (8), 
  SPH_USER_ID         VARCHAR2 (10), 
  SPH_PROC_DT         DATE, 
  SPH_PROC_STATUS     VARCHAR2 (1), 
  SPH_COMP_CODE       VARCHAR2 (3), 
  SPH_TRAN_FRM        VARCHAR2 (3), 
  SPH_TRAN_TO         VARCHAR2 (3), 
  SPH_TRAN_DT_FRM     DATE, 
  SPH_TRAN_DT_TO      DATE, 
  SPH_DOC_NO_FRM      NUMBER (6), 
  SPH_DOC_NO_TO       NUMBER (6), 
  SPH_USER_PATTERN    VARCHAR2 (10), 
  SPH_HEAD_REC_TOT    NUMBER (6), 
  SPH_DETAIL_REC_TOT  NUMBER (6), 
  SPH_AMT_TOT         NUMBER (14,3), 
  SPH_ERROR_NAME      VARCHAR2 (20), 
  SPH_CR_UID          VARCHAR2 (10), 
  SPH_CR_DT           DATE ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018532 CHECK  ( SPH_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018533 CHECK  ( SPH_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018534 CHECK  ( SPH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018535 CHECK  ( SPH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C00922 CHECK  ( SPH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C00923 CHECK  ( SPH_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C00924 CHECK  ( SPH_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C00925 CHECK  ( SPH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C00926 CHECK  ( SPH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006410 CHECK  ( SPH_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006411 CHECK  ( SPH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006412 CHECK  ( SPH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006413 CHECK  ( SPH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006414 CHECK  ( SPH_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006415 CHECK  ( SPH_DOC_NO_TO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006416 CHECK  ( SPH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006417 CHECK  ( SPH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006418 CHECK  ( SPH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
SYS_C006419 CHECK  ( SPH_DOC_NO_FRM IS NOT NULL  ) 
/

ALTER TABLE FS_SYS_PROC_HEADER ADD CONSTRAINT 
FIN_C0018531 CHECK  ( SPH_KEY_NO IS NOT NULL  ) 
/



/
CREATE TABLE FS_UNMATCH_OS ( 
  OST_KEY_NO             NUMBER (8), 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1), 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10), 
  OST_CR_DT              DATE, 
  OST_UNMATCH_UID        VARCHAR2 (10), 
  OST_UNMATCH_DT         DATE ) 
/

/
CREATE TABLE FT_AJV_DETAIL ( 
  AJD_KEY_NO         NUMBER (8)    NOT NULL, 
  AJD_SEQ_NO         NUMBER (3)    NOT NULL, 
  AJD_DOC_DT         DATE, 
  AJD_DOC_CAL_YEAR   NUMBER (4), 
  AJD_DOC_CAL_MONTH  NUMBER (2), 
  AJD_ALLOC_AMT      NUMBER (14,3), 
  AJD_STATUS         VARCHAR2 (1), 
  AJD_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  AJD_CR_DT          DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_AJD_01
  PRIMARY KEY ( AJD_KEY_NO, AJD_SEQ_NO ) ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
AJD_NN_02 CHECK  ( AJD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
AJD_CHK_01 CHECK  ( NVL(AJD_ALLOC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
AJD_CHK_02 CHECK  ( AJD_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
AJD_CHK_03 CHECK  ( AJD_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
FIN_C0018536 CHECK  ( AJD_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
FIN_C0018537 CHECK  ( AJD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
FIN_C0018538 CHECK  ( AJD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
FIN_C0018539 CHECK  ( AJD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
AJD_NN_01 CHECK  ( AJD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
SYS_C006437 CHECK  ( AJD_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
SYS_C006438 CHECK  ( AJD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
SYS_C006439 CHECK  ( AJD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_AJV_DETAIL ADD CONSTRAINT 
SYS_C006441 CHECK  ( AJD_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_AJV_DETAIL_01 ON 
  FT_AJV_DETAIL(AJD_DOC_CAL_YEAR, AJD_DOC_CAL_MONTH) 

/

/
CREATE TABLE FT_ALLOCATION_JV ( 
  AJV_KEY_NO          NUMBER (8)    NOT NULL, 
  AJV_REF_COMP_CODE   VARCHAR2 (3), 
  AJV_REF_ACNT_YEAR   NUMBER (2), 
  AJV_REF_TRAN_CODE   VARCHAR2 (3), 
  AJV_REF_DOC_NO      NUMBER (6), 
  AJV_REF_SEQ_NO      NUMBER (3), 
  AJV_COMP_CODE       VARCHAR2 (3), 
  AJV_TRAN_CODE       VARCHAR2 (3), 
  AJV_START_DT        DATE, 
  AJV_UPTO_DT         DATE, 
  AJV_DOC_AMT         NUMBER (14,3), 
  AJV_MAIN_ACNT_CODE  VARCHAR2 (6), 
  AJV_SUB_ACNT_CODE   VARCHAR2 (6), 
  AJV_DEPT_CODE       VARCHAR2 (6), 
  AJV_DIVN_CODE       VARCHAR2 (6), 
  AJV_HEAD_NO_1       NUMBER (1), 
  AJV_ANLY_CODE_1     VARCHAR2 (6), 
  AJV_HEAD_NO_2       NUMBER (1), 
  AJV_ANLY_CODE_2     VARCHAR2 (6), 
  AJV_ACTY_CODE_1     VARCHAR2 (6), 
  AJV_ACTY_CODE_2     VARCHAR2 (6), 
  AJV_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  AJV_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_AJV_01
  PRIMARY KEY ( AJV_KEY_NO ) ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
FIN_C0018540 CHECK  ( AJV_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
FIN_C0018541 CHECK  ( AJV_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
FIN_C0018542 CHECK  ( AJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
FIN_C0018543 CHECK  ( AJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
AJV_CHK_01 CHECK  ( NVL(AJV_DOC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
AJV_CHK_02 CHECK  ( AJV_ACTY_CODE_1 IS NOT NULL OR AJV_ACTY_CODE_2 IS NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
AJV_NN_01 CHECK  ( AJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
AJV_NN_02 CHECK  ( AJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
AJV_NN_03 CHECK  ( AJV_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
SYS_C006454 CHECK  ( AJV_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
SYS_C006455 CHECK  ( AJV_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
SYS_C006456 CHECK  ( AJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_ALLOCATION_JV ADD CONSTRAINT 
SYS_C006457 CHECK  ( AJV_CR_DT IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_ALLOCATION_JV" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_ALLOCATION_JV REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_AJV_KEY_NO            NUMBER(1) := NULL;
 NEW_AJV_REF_COMP_CODE     VARCHAR2(1) := NULL;
 NEW_AJV_REF_ACNT_YEAR     NUMBER(1) := NULL;
 NEW_AJV_REF_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_AJV_REF_DOC_NO        NUMBER(1) := NULL;
 NEW_AJV_REF_SEQ_NO        NUMBER(1) := NULL;
 NEW_AJV_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_AJV_TRAN_CODE         VARCHAR2(1) := NULL;
 NEW_AJV_START_DT          DATE        := NULL;
 NEW_AJV_UPTO_DT           DATE        := NULL;
 NEW_AJV_DOC_AMT           NUMBER(1) := NULL;
 NEW_AJV_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_AJV_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_AJV_DEPT_CODE         VARCHAR2(1) := NULL;
 NEW_AJV_DIVN_CODE         VARCHAR2(1) := NULL;
 NEW_AJV_HEAD_NO_1         NUMBER(1) := NULL;
 NEW_AJV_ANLY_CODE_1       VARCHAR2(1) := NULL;
 NEW_AJV_HEAD_NO_2         NUMBER(1) := NULL;
 NEW_AJV_ANLY_CODE_2       VARCHAR2(1) := NULL;
 NEW_AJV_ACTY_CODE_1       VARCHAR2(1) := NULL;
 NEW_AJV_ACTY_CODE_2       VARCHAR2(1) := NULL;
 NEW_AJV_CR_UID            VARCHAR2(1) := NULL;
 NEW_AJV_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_ALLOCATION_JV (
         :OLD.AJV_KEY_NO,
         :OLD.AJV_REF_COMP_CODE,
         :OLD.AJV_REF_ACNT_YEAR,
         :OLD.AJV_REF_TRAN_CODE,
         :OLD.AJV_REF_DOC_NO,
         :OLD.AJV_REF_SEQ_NO,
         :OLD.AJV_COMP_CODE,
         :OLD.AJV_TRAN_CODE,
         :OLD.AJV_START_DT,
         :OLD.AJV_UPTO_DT,
         :OLD.AJV_DOC_AMT,
         :OLD.AJV_MAIN_ACNT_CODE,
         :OLD.AJV_SUB_ACNT_CODE,
         :OLD.AJV_DEPT_CODE,
         :OLD.AJV_DIVN_CODE,
         :OLD.AJV_HEAD_NO_1,
         :OLD.AJV_ANLY_CODE_1,
         :OLD.AJV_HEAD_NO_2,
         :OLD.AJV_ANLY_CODE_2,
         :OLD.AJV_ACTY_CODE_1,
         :OLD.AJV_ACTY_CODE_2,
         :OLD.AJV_CR_UID,
         :OLD.AJV_CR_DT,
         :NEW.AJV_KEY_NO,
         :NEW.AJV_REF_COMP_CODE,
         :NEW.AJV_REF_ACNT_YEAR,
         :NEW.AJV_REF_TRAN_CODE,
         :NEW.AJV_REF_DOC_NO,
         :NEW.AJV_REF_SEQ_NO,
         :NEW.AJV_COMP_CODE,
         :NEW.AJV_TRAN_CODE,
         :NEW.AJV_START_DT,
         :NEW.AJV_UPTO_DT,
         :NEW.AJV_DOC_AMT,
         :NEW.AJV_MAIN_ACNT_CODE,
         :NEW.AJV_SUB_ACNT_CODE,
         :NEW.AJV_DEPT_CODE,
         :NEW.AJV_DIVN_CODE,
         :NEW.AJV_HEAD_NO_1,
         :NEW.AJV_ANLY_CODE_1,
         :NEW.AJV_HEAD_NO_2,
         :NEW.AJV_ANLY_CODE_2,
         :NEW.AJV_ACTY_CODE_1,
         :NEW.AJV_ACTY_CODE_2,
         :NEW.AJV_CR_UID,
         :NEW.AJV_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_ALLOCATION_JV (
         :OLD.AJV_KEY_NO,
         :OLD.AJV_REF_COMP_CODE,
         :OLD.AJV_REF_ACNT_YEAR,
         :OLD.AJV_REF_TRAN_CODE,
         :OLD.AJV_REF_DOC_NO,
         :OLD.AJV_REF_SEQ_NO,
         :OLD.AJV_COMP_CODE,
         :OLD.AJV_TRAN_CODE,
         :OLD.AJV_START_DT,
         :OLD.AJV_UPTO_DT,
         :OLD.AJV_DOC_AMT,
         :OLD.AJV_MAIN_ACNT_CODE,
         :OLD.AJV_SUB_ACNT_CODE,
         :OLD.AJV_DEPT_CODE,
         :OLD.AJV_DIVN_CODE,
         :OLD.AJV_HEAD_NO_1,
         :OLD.AJV_ANLY_CODE_1,
         :OLD.AJV_HEAD_NO_2,
         :OLD.AJV_ANLY_CODE_2,
         :OLD.AJV_ACTY_CODE_1,
         :OLD.AJV_ACTY_CODE_2,
         :OLD.AJV_CR_UID,
         :OLD.AJV_CR_DT,
         NEW_AJV_KEY_NO,
         NEW_AJV_REF_COMP_CODE,
         NEW_AJV_REF_ACNT_YEAR,
         NEW_AJV_REF_TRAN_CODE,
         NEW_AJV_REF_DOC_NO,
         NEW_AJV_REF_SEQ_NO,
         NEW_AJV_COMP_CODE,
         NEW_AJV_TRAN_CODE,
         NEW_AJV_START_DT,
         NEW_AJV_UPTO_DT,
         NEW_AJV_DOC_AMT,
         NEW_AJV_MAIN_ACNT_CODE,
         NEW_AJV_SUB_ACNT_CODE,
         NEW_AJV_DEPT_CODE,
         NEW_AJV_DIVN_CODE,
         NEW_AJV_HEAD_NO_1,
         NEW_AJV_ANLY_CODE_1,
         NEW_AJV_HEAD_NO_2,
         NEW_AJV_ANLY_CODE_2,
         NEW_AJV_ACTY_CODE_1,
         NEW_AJV_ACTY_CODE_2,
         NEW_AJV_CR_UID,
         NEW_AJV_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_BOUNCED_CHEQUE ( 
  BCT_KEY_NO                  NUMBER (8)    NOT NULL, 
  BCT_COMP_CODE               VARCHAR2 (3), 
  BCT_TRAN_CODE               VARCHAR2 (3), 
  BCT_ACNT_YEAR               NUMBER (2), 
  BCT_DOC_NO                  NUMBER (6), 
  BCT_SEQ_NO                  NUMBER (3), 
  BCT_DOC_DT                  DATE, 
  BCT_DOC_REF                 VARCHAR2 (15), 
  BCT_DESC                    VARCHAR2 (2000), 
  BCT_REF_TRAN_CODE           VARCHAR2 (3), 
  BCT_REF_ACNT_YEAR           NUMBER (2), 
  BCT_REF_DOC_NO              NUMBER (6), 
  BCT_REF_SEQ_NO              NUMBER (3), 
  BCT_BANK_MAIN_ACNT_CODE     VARCHAR2 (6), 
  BCT_BANK_SUB_ACNT_CODE      VARCHAR2 (6), 
  BCT_BANK_DIVN_CODE          VARCHAR2 (6), 
  BCT_BANK_DEPT_CODE          VARCHAR2 (6), 
  BCT_BANK_HEAD_NO_1          NUMBER (1), 
  BCT_BANK_ANLY_CODE_1        VARCHAR2 (6), 
  BCT_BANK_HEAD_NO_2          NUMBER (1), 
  BCT_BANK_ANLY_CODE_2        VARCHAR2 (6), 
  BCT_BANK_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  BCT_BANK_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  BCT_BANK_CURR_CODE          VARCHAR2 (3), 
  BCT_CLEAR_DT                DATE, 
  BCT_CR_UID                  VARCHAR2 (10)  DEFAULT 'TEST1', 
  BCT_CR_DT                   DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_BCT_01
  PRIMARY KEY ( BCT_KEY_NO ) ) 
/

ALTER TABLE FT_BOUNCED_CHEQUE ADD CONSTRAINT 
SYS_C006458 CHECK  ( BCT_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_BOUNCED_CHEQUE ADD CONSTRAINT 
FIN_C0018544 CHECK  ( BCT_KEY_NO IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_BOUNCED_CHEQUE" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_BOUNCED_CHEQUE REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_BCT_KEY_NO            NUMBER(1) := NULL;
 NEW_BCT_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_BCT_TRAN_CODE         VARCHAR2(1) := NULL;
 NEW_BCT_ACNT_YEAR         NUMBER(1) := NULL;
 NEW_BCT_DOC_NO            NUMBER(1) := NULL;
 NEW_BCT_SEQ_NO            NUMBER(1) := NULL;
 NEW_BCT_DOC_DT            DATE        := NULL;
 NEW_BCT_DOC_REF           VARCHAR2(1) := NULL;
 NEW_BCT_DESC              VARCHAR2(1) := NULL;
 NEW_BCT_REF_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_BCT_REF_ACNT_YEAR     NUMBER(1) := NULL;
 NEW_BCT_REF_DOC_NO        NUMBER(1) := NULL;
 NEW_BCT_REF_SEQ_NO        NUMBER(1) := NULL;
 NEW_BCT_CR_UID            VARCHAR2(1) := NULL;
 NEW_BCT_CR_DT             DATE        := NULL;
 NEW_BCT_BANK_MAIN_ACNT_CODE VARCHAR2(6) := NULL;
 NEW_BCT_BANK_SUB_ACNT_CODE  VARCHAR2(6) := NULL;
 NEW_BCT_BANK_CURR_CODE      VARCHAR2(3) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_BOUNCED_CHEQUE (
         :OLD.BCT_KEY_NO,
         :OLD.BCT_COMP_CODE,
         :OLD.BCT_TRAN_CODE,
         :OLD.BCT_ACNT_YEAR,
         :OLD.BCT_DOC_NO,
         :OLD.BCT_SEQ_NO,
         :OLD.BCT_DOC_DT,
         :OLD.BCT_DOC_REF,
         :OLD.BCT_DESC,
         :OLD.BCT_REF_TRAN_CODE,
         :OLD.BCT_REF_ACNT_YEAR,
         :OLD.BCT_REF_DOC_NO,
         :OLD.BCT_REF_SEQ_NO,
         :OLD.BCT_CR_UID,
         :OLD.BCT_CR_DT,
         :OLD.BCT_BANK_MAIN_ACNT_CODE,
         :OLD.BCT_BANK_SUB_ACNT_CODE,
         :OLD.BCT_BANK_CURR_CODE    ,
         :NEW.BCT_KEY_NO,
         :NEW.BCT_COMP_CODE,
         :NEW.BCT_TRAN_CODE,
         :NEW.BCT_ACNT_YEAR,
         :NEW.BCT_DOC_NO,
         :NEW.BCT_SEQ_NO,
         :NEW.BCT_DOC_DT,
         :NEW.BCT_DOC_REF,
         :NEW.BCT_DESC,
         :NEW.BCT_REF_TRAN_CODE,
         :NEW.BCT_REF_ACNT_YEAR,
         :NEW.BCT_REF_DOC_NO,
         :NEW.BCT_REF_SEQ_NO,
         :NEW.BCT_CR_UID,
         :NEW.BCT_CR_DT,
         :NEW.BCT_BANK_MAIN_ACNT_CODE,
         :NEW.BCT_BANK_SUB_ACNT_CODE,
         :NEW.BCT_BANK_CURR_CODE    ,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_BOUNCED_CHEQUE (
         :OLD.BCT_KEY_NO,
         :OLD.BCT_COMP_CODE,
         :OLD.BCT_TRAN_CODE,
         :OLD.BCT_ACNT_YEAR,
         :OLD.BCT_DOC_NO,
         :OLD.BCT_SEQ_NO,
         :OLD.BCT_DOC_DT,
         :OLD.BCT_DOC_REF,
         :OLD.BCT_DESC,
         :OLD.BCT_REF_TRAN_CODE,
         :OLD.BCT_REF_ACNT_YEAR,
         :OLD.BCT_REF_DOC_NO,
         :OLD.BCT_REF_SEQ_NO,
         :OLD.BCT_CR_UID,
         :OLD.BCT_CR_DT,
         :OLD.BCT_BANK_MAIN_ACNT_CODE,
         :OLD.BCT_BANK_SUB_ACNT_CODE,
         :OLD.BCT_BANK_CURR_CODE,
         NEW_BCT_KEY_NO,
         NEW_BCT_COMP_CODE,
         NEW_BCT_TRAN_CODE,
         NEW_BCT_ACNT_YEAR,
         NEW_BCT_DOC_NO,
         NEW_BCT_SEQ_NO,
         NEW_BCT_DOC_DT,
         NEW_BCT_DOC_REF,
         NEW_BCT_DESC,
         NEW_BCT_REF_TRAN_CODE,
         NEW_BCT_REF_ACNT_YEAR,
         NEW_BCT_REF_DOC_NO,
         NEW_BCT_REF_SEQ_NO,
         NEW_BCT_CR_UID,
         NEW_BCT_CR_DT,
         NEW_BCT_BANK_MAIN_ACNT_CODE,
         NEW_BCT_BANK_SUB_ACNT_CODE,
         NEW_BCT_BANK_CURR_CODE,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_CASH_DISB ( 
  DISB_KEY_NO               NUMBER (8)    NOT NULL, 
  DISB_COMP_CODE            VARCHAR2 (3), 
  DISB_PETTY_CASH_NO        VARCHAR2 (6), 
  DISB_CASH_MAIN_ACNT_CODE  VARCHAR2 (6), 
  DISB_DISB_DT              DATE, 
  DISB_DESC                 VARCHAR2 (2000), 
  DISB_RIMB_KEY_NO          NUMBER (8), 
  DISB_REF                  VARCHAR2 (10), 
  DISB_MAIN_ACNT_CODE       VARCHAR2 (6), 
  DISB_SUB_ACNT_CODE        VARCHAR2 (6), 
  DISB_DIVN_CODE            VARCHAR2 (6), 
  DISB_DEPT_CODE            VARCHAR2 (6), 
  DISB_HEAD_NO_1            NUMBER (1), 
  DISB_ANLY_CODE_1          VARCHAR2 (6), 
  DISB_HEAD_NO_2            NUMBER (1), 
  DISB_ANLY_CODE_2          VARCHAR2 (6), 
  DISB_ACTY_VALUE_CODE_1    VARCHAR2 (6), 
  DISB_ACTY_VALUE_CODE_2    VARCHAR2 (6), 
  DISB_CURR_CODE            VARCHAR2 (3), 
  DISB_FC_AMT               NUMBER (14,3), 
  DISB_LC_AMT               NUMBER (14,3), 
  DISB_CR_UID               VARCHAR2 (10)  DEFAULT 'TEST1', 
  DISB_CR_DT                DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_DISB_01
  PRIMARY KEY ( DISB_KEY_NO ) ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
FIN_C0018548 CHECK  ( DISB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
FIN_C0018547 CHECK  ( DISB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
FIN_C0022073 CHECK  ( DISB_PETTY_CASH_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
DISB_CHK_01 CHECK  ( NVL(DISB_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
DISB_CHK_02 CHECK  ( NVL(DISB_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
DISB_NN_01 CHECK  ( DISB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
DISB_NN_02 CHECK  ( DISB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
DISB_NN_03 CHECK  ( DISB_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
SYS_C006472 CHECK  ( DISB_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
SYS_C006473 CHECK  ( DISB_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
SYS_C006474 CHECK  ( DISB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
SYS_C006475 CHECK  ( DISB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
SYS_C006476 CHECK  ( DISB_PETTY_CASH_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
FIN_C0018545 CHECK  ( DISB_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_DISB ADD CONSTRAINT 
FIN_C0018546 CHECK  ( DISB_LC_AMT IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_CASH_DISB_01 ON 
  FT_CASH_DISB(DISB_COMP_CODE, DISB_PETTY_CASH_NO) 

/

/
CREATE TABLE FT_CASH_RIMB ( 
  RIMB_KEY_NO                  NUMBER (8)    NOT NULL, 
  RIMB_COMP_CODE               VARCHAR2 (3), 
  RIMB_PETTY_CASH_NO           VARCHAR2 (6), 
  RIMB_CASH_MAIN_ACNT_CODE     VARCHAR2 (6), 
  RIMB_DOC_NO                  NUMBER (6), 
  RIMB_DOC_DT                  DATE, 
  RIMB_BANK_MAIN_ACNT_CODE     VARCHAR2 (6), 
  RIMB_BANK_SUB_ACNT_CODE      VARCHAR2 (6), 
  RIMB_BANK_DIVN_CODE          VARCHAR2 (6), 
  RIMB_BANK_DEPT_CODE          VARCHAR2 (6), 
  RIMB_BANK_HEAD_NO_1          NUMBER (1), 
  RIMB_BANK_ANLY_CODE_1        VARCHAR2 (6), 
  RIMB_BANK_HEAD_NO_2          NUMBER (1), 
  RIMB_BANK_ANLY_CODE_2        VARCHAR2 (6), 
  RIMB_BANK_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  RIMB_BANK_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  RIMB_TOT_DISB_AMT            NUMBER (14,3), 
  RIMB_CR_UID                  VARCHAR2 (10)  DEFAULT 'TEST1', 
  RIMB_CR_DT                   DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_RIMB_01
  PRIMARY KEY ( RIMB_KEY_NO ) ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
RIMB_NN_03 CHECK  ( RIMB_TOT_DISB_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
SYS_C006486 CHECK  ( RIMB_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
SYS_C006487 CHECK  ( RIMB_TOT_DISB_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
SYS_C006488 CHECK  ( RIMB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
SYS_C006489 CHECK  ( RIMB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
RIMB_CHK_01 CHECK  ( NVL(RIMB_TOT_DISB_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
RIMB_CHK_02 CHECK  ( RIMB_DOC_NO > 0  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
RIMB_NN_01 CHECK  ( RIMB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
RIMB_NN_02 CHECK  ( RIMB_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
FIN_C0018549 CHECK  ( RIMB_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
FIN_C0018550 CHECK  ( RIMB_TOT_DISB_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
FIN_C0018551 CHECK  ( RIMB_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_RIMB ADD CONSTRAINT 
FIN_C0018552 CHECK  ( RIMB_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_CASH_RIMB_01 ON 
  FT_CASH_RIMB(RIMB_COMP_CODE, RIMB_PETTY_CASH_NO) 

/

/
CREATE TABLE FT_CASH_SUMMARY ( 
  CS_COMP_CODE               VARCHAR2 (3)  NOT NULL, 
  CS_PETTY_CASH_NO           VARCHAR2 (6)  NOT NULL, 
  CS_PETTY_CASH_NAME         VARCHAR2 (30), 
  CS_CASH_MAIN_ACNT_CODE     VARCHAR2 (6), 
  CS_CASH_SUB_ACNT_CODE      VARCHAR2 (6), 
  CS_CASH_DIVN_CODE          VARCHAR2 (6), 
  CS_CASH_DEPT_CODE          VARCHAR2 (6), 
  CS_CASH_HEAD_NO_1          NUMBER (1), 
  CS_CASH_ANLY_CODE_1        VARCHAR2 (6), 
  CS_CASH_HEAD_NO_2          NUMBER (1), 
  CS_CASH_ANLY_CODE_2        VARCHAR2 (6), 
  CS_CASH_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  CS_CASH_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  CS_IMPREST_AMT             NUMBER (14,3), 
  CS_BAL_AMT                 NUMBER (14,3), 
  CS_TOT_DISB_AMT            NUMBER (14,3), 
  CS_GEN_TRAN_FLAG           VARCHAR2 (1), 
  CS_REF_TRAN_CODE           VARCHAR2 (3), 
  CS_REF_DOC_NO              NUMBER (6), 
  CS_REF_DOC_DT              DATE, 
  CS_REF_SEQ_NO              NUMBER (3), 
  CS_REF_ACNT_YEAR           NUMBER (2), 
  CS_REF_DIVN_CODE           VARCHAR2 (6), 
  CS_REF_DEPT_CODE           VARCHAR2 (6), 
  CS_REF_MAIN_ACNT_CODE      VARCHAR2 (6), 
  CS_REF_ANLY_HEAD_1         NUMBER (1), 
  CS_REF_ANLY_CODE_1         VARCHAR2 (6), 
  CS_REF_ANLY_HEAD_2         NUMBER (1), 
  CS_REF_ANLY_CODE_2         VARCHAR2 (6), 
  CS_CR_UID                  VARCHAR2 (10), 
  CS_CR_DT                   DATE, 
  CONSTRAINT PK_CS_01
  PRIMARY KEY ( CS_COMP_CODE, CS_PETTY_CASH_NO ) ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT UK_CS_01
 UNIQUE (CS_COMP_CODE, CS_CASH_MAIN_ACNT_CODE, CS_CASH_DIVN_CODE, CS_CASH_DEPT_CODE) 
/



ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
CS_CHK_01 CHECK  ( CS_GEN_TRAN_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
SYS_C006491 CHECK  ( CS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
FIN_C0018553 CHECK  ( CS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
FIN_C0018554 CHECK  ( CS_CASH_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
SYS_C006494 CHECK  ( CS_CASH_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
CS_CHK_02 CHECK  ( NVL(CS_IMPREST_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
CS_CHK_03 CHECK  ( NVL(CS_BAL_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CASH_SUMMARY ADD CONSTRAINT 
CS_CHK_04 CHECK  ( CS_TOT_DISB_AMT >= 0  ) 
/



/
CREATE TABLE FT_CJV_DETAIL ( 
  CJVD_COMP_CODE            VARCHAR2 (3), 
  CJVD_ORGL_ACNT_YEAR       NUMBER (2), 
  CJVD_ORGL_TRAN_CODE       VARCHAR2 (3), 
  CJVD_ORGL_DOC_NO          NUMBER (6), 
  CJVD_ORGL_SEQ_NO          NUMBER (3), 
  CJVD_ORGL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CJVD_ORGL_SUB_ACNT_CODE   VARCHAR2 (6), 
  CJVD_ORGL_DIVN_CODE       VARCHAR2 (6), 
  CJVD_ORGL_DEPT_CODE       VARCHAR2 (6), 
  CJVD_ORGL_ANLY_CODE_1     VARCHAR2 (6), 
  CJVD_ORGL_ANLY_CODE_2     VARCHAR2 (6), 
  CJVD_ORGL_ACTY_CODE_1     VARCHAR2 (6), 
  CJVD_ORGL_ACTY_CODE_2     VARCHAR2 (6), 
  CJVD_ORGL_CURR_CODE       VARCHAR2 (3), 
  CJVD_ORGL_FC_AMT          NUMBER (14,3), 
  CJVD_ORGL_LC_AMT          NUMBER (14,3), 
  CJVD_ORGL_DOC_DRCR_FLAG   VARCHAR2 (1), 
  CJVD_CORR_MAIN_ACNT_CODE  VARCHAR2 (6), 
  CJVD_CORR_SUB_ACNT_CODE   VARCHAR2 (6), 
  CJVD_CORR_DIVN_CODE       VARCHAR2 (6), 
  CJVD_CORR_DEPT_CODE       VARCHAR2 (6), 
  CJVD_CORR_ANLY_CODE_1     VARCHAR2 (6), 
  CJVD_CORR_ANLY_CODE_2     VARCHAR2 (6), 
  CJVD_CORR_ACTY_CODE_1     VARCHAR2 (6), 
  CJVD_CORR_ACTY_CODE_2     VARCHAR2 (6), 
  CJVD_CR_UID               VARCHAR2 (10), 
  CJVD_CR_DT                DATE ) 
/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_CJV_DETAIL" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_CJV_DETAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_CJVD_COMP_CODE           VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_ACNT_YEAR      NUMBER(1) := NULL;
 NEW_CJVD_ORGL_TRAN_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_DOC_NO         NUMBER(1) := NULL;
 NEW_CJVD_ORGL_SEQ_NO         NUMBER(1) := NULL;
 NEW_CJVD_ORGL_MAIN_ACNT_CODE VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_SUB_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_DIVN_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_DEPT_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_ANLY_CODE_1    VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_ANLY_CODE_2    VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_ACTY_CODE_1    VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_ACTY_CODE_2    VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_CURR_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_ORGL_FC_AMT         NUMBER(1) := NULL;
 NEW_CJVD_ORGL_LC_AMT         NUMBER(1) := NULL;
 NEW_CJVD_ORGL_DOC_DRCR_FLAG  VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_MAIN_ACNT_CODE VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_SUB_ACNT_CODE  VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_DIVN_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_DEPT_CODE      VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_ANLY_CODE_1    VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_ANLY_CODE_2    VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_ACTY_CODE_1    VARCHAR2(1) := NULL;
 NEW_CJVD_CORR_ACTY_CODE_2    VARCHAR2(1) := NULL;
 NEW_CJVD_CR_UID              VARCHAR2(1) := NULL;
 NEW_CJVD_CR_DT               DATE        := NULL;
 TRG_MODE                     VARCHAR2(1);
 TRG_ERR_NO                   NUMBER(6);
 TRG_ERR_MSG                  VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_CJV_DETAIL (
         :OLD.CJVD_COMP_CODE,
         :OLD.CJVD_ORGL_ACNT_YEAR,
         :OLD.CJVD_ORGL_TRAN_CODE,
         :OLD.CJVD_ORGL_DOC_NO,
         :OLD.CJVD_ORGL_SEQ_NO,
         :OLD.CJVD_ORGL_MAIN_ACNT_CODE,
         :OLD.CJVD_ORGL_SUB_ACNT_CODE,
         :OLD.CJVD_ORGL_DIVN_CODE,
         :OLD.CJVD_ORGL_DEPT_CODE,
         :OLD.CJVD_ORGL_ANLY_CODE_1,
         :OLD.CJVD_ORGL_ANLY_CODE_2,
         :OLD.CJVD_ORGL_ACTY_CODE_1,
         :OLD.CJVD_ORGL_ACTY_CODE_2,
         :OLD.CJVD_ORGL_CURR_CODE,
         :OLD.CJVD_ORGL_FC_AMT,
         :OLD.CJVD_ORGL_LC_AMT,
         :OLD.CJVD_ORGL_DOC_DRCR_FLAG,
         :OLD.CJVD_CORR_MAIN_ACNT_CODE,
         :OLD.CJVD_CORR_SUB_ACNT_CODE,
         :OLD.CJVD_CORR_DIVN_CODE,
         :OLD.CJVD_CORR_DEPT_CODE,
         :OLD.CJVD_CORR_ANLY_CODE_1,
         :OLD.CJVD_CORR_ANLY_CODE_2,
         :OLD.CJVD_CORR_ACTY_CODE_1,
         :OLD.CJVD_CORR_ACTY_CODE_2,
         :OLD.CJVD_CR_UID,
         :OLD.CJVD_CR_DT,
         :NEW.CJVD_COMP_CODE,
         :NEW.CJVD_ORGL_ACNT_YEAR,
         :NEW.CJVD_ORGL_TRAN_CODE,
         :NEW.CJVD_ORGL_DOC_NO,
         :NEW.CJVD_ORGL_SEQ_NO,
         :NEW.CJVD_ORGL_MAIN_ACNT_CODE,
         :NEW.CJVD_ORGL_SUB_ACNT_CODE,
         :NEW.CJVD_ORGL_DIVN_CODE,
         :NEW.CJVD_ORGL_DEPT_CODE,
         :NEW.CJVD_ORGL_ANLY_CODE_1,
         :NEW.CJVD_ORGL_ANLY_CODE_2,
         :NEW.CJVD_ORGL_ACTY_CODE_1,
         :NEW.CJVD_ORGL_ACTY_CODE_2,
         :NEW.CJVD_ORGL_CURR_CODE,
         :NEW.CJVD_ORGL_FC_AMT,
         :NEW.CJVD_ORGL_LC_AMT,
         :NEW.CJVD_ORGL_DOC_DRCR_FLAG,
         :NEW.CJVD_CORR_MAIN_ACNT_CODE,
         :NEW.CJVD_CORR_SUB_ACNT_CODE,
         :NEW.CJVD_CORR_DIVN_CODE,
         :NEW.CJVD_CORR_DEPT_CODE,
         :NEW.CJVD_CORR_ANLY_CODE_1,
         :NEW.CJVD_CORR_ANLY_CODE_2,
         :NEW.CJVD_CORR_ACTY_CODE_1,
         :NEW.CJVD_CORR_ACTY_CODE_2,
         :NEW.CJVD_CR_UID,
         :NEW.CJVD_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_CJV_DETAIL (
         :OLD.CJVD_COMP_CODE,
         :OLD.CJVD_ORGL_ACNT_YEAR,
         :OLD.CJVD_ORGL_TRAN_CODE,
         :OLD.CJVD_ORGL_DOC_NO,
         :OLD.CJVD_ORGL_SEQ_NO,
         :OLD.CJVD_ORGL_MAIN_ACNT_CODE,
         :OLD.CJVD_ORGL_SUB_ACNT_CODE,
         :OLD.CJVD_ORGL_DIVN_CODE,
         :OLD.CJVD_ORGL_DEPT_CODE,
         :OLD.CJVD_ORGL_ANLY_CODE_1,
         :OLD.CJVD_ORGL_ANLY_CODE_2,
         :OLD.CJVD_ORGL_ACTY_CODE_1,
         :OLD.CJVD_ORGL_ACTY_CODE_2,
         :OLD.CJVD_ORGL_CURR_CODE,
         :OLD.CJVD_ORGL_FC_AMT,
         :OLD.CJVD_ORGL_LC_AMT,
         :OLD.CJVD_ORGL_DOC_DRCR_FLAG,
         :OLD.CJVD_CORR_MAIN_ACNT_CODE,
         :OLD.CJVD_CORR_SUB_ACNT_CODE,
         :OLD.CJVD_CORR_DIVN_CODE,
         :OLD.CJVD_CORR_DEPT_CODE,
         :OLD.CJVD_CORR_ANLY_CODE_1,
         :OLD.CJVD_CORR_ANLY_CODE_2,
         :OLD.CJVD_CORR_ACTY_CODE_1,
         :OLD.CJVD_CORR_ACTY_CODE_2,
         :OLD.CJVD_CR_UID,
         :OLD.CJVD_CR_DT,
         NEW_CJVD_COMP_CODE,
         NEW_CJVD_ORGL_ACNT_YEAR,
         NEW_CJVD_ORGL_TRAN_CODE,
         NEW_CJVD_ORGL_DOC_NO,
         NEW_CJVD_ORGL_SEQ_NO,
         NEW_CJVD_ORGL_MAIN_ACNT_CODE,
         NEW_CJVD_ORGL_SUB_ACNT_CODE,
         NEW_CJVD_ORGL_DIVN_CODE,
         NEW_CJVD_ORGL_DEPT_CODE,
         NEW_CJVD_ORGL_ANLY_CODE_1,
         NEW_CJVD_ORGL_ANLY_CODE_2,
         NEW_CJVD_ORGL_ACTY_CODE_1,
         NEW_CJVD_ORGL_ACTY_CODE_2,
         NEW_CJVD_ORGL_CURR_CODE,
         NEW_CJVD_ORGL_FC_AMT,
         NEW_CJVD_ORGL_LC_AMT,
         NEW_CJVD_ORGL_DOC_DRCR_FLAG,
         NEW_CJVD_CORR_MAIN_ACNT_CODE,
         NEW_CJVD_CORR_SUB_ACNT_CODE,
         NEW_CJVD_CORR_DIVN_CODE,
         NEW_CJVD_CORR_DEPT_CODE,
         NEW_CJVD_CORR_ANLY_CODE_1,
         NEW_CJVD_CORR_ANLY_CODE_2,
         NEW_CJVD_CORR_ACTY_CODE_1,
         NEW_CJVD_CORR_ACTY_CODE_2,
         NEW_CJVD_CR_UID,
         NEW_CJVD_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_CORRECTION_JV ( 
  CJV_COMP_CODE       VARCHAR2 (3)  NOT NULL, 
  CJV_ORGL_ACNT_YEAR  NUMBER (2)    NOT NULL, 
  CJV_ORGL_TRAN_CODE  VARCHAR2 (3)  NOT NULL, 
  CJV_ORGL_DOC_NO     NUMBER (6)    NOT NULL, 
  CJV_ORGL_DOC_DT     DATE, 
  CJV_CORR_TRAN_CODE  VARCHAR2 (3), 
  CJV_CORR_DOC_NO     NUMBER (6), 
  CJV_CORR_DOC_DT     DATE, 
  CJV_CORR_DESC       VARCHAR2 (2000), 
  CJV_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  CJV_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_CJV_01
  PRIMARY KEY ( CJV_COMP_CODE, CJV_ORGL_ACNT_YEAR, CJV_ORGL_TRAN_CODE, CJV_ORGL_DOC_NO ) ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
CJV_NN_01 CHECK  ( CJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018558 CHECK  ( CJV_ORGL_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018559 CHECK  ( CJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018560 CHECK  ( CJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
CJV_CHK_01 CHECK  ( CJV_ORGL_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
CJV_NN_02 CHECK  ( CJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006511 CHECK  ( CJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006512 CHECK  ( CJV_ORGL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006513 CHECK  ( CJV_ORGL_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006514 CHECK  ( CJV_ORGL_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006515 CHECK  ( CJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
SYS_C006516 CHECK  ( CJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018555 CHECK  ( CJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018556 CHECK  ( CJV_ORGL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CORRECTION_JV ADD CONSTRAINT 
FIN_C0018557 CHECK  ( CJV_ORGL_TRAN_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_CORRECTION_JV" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_CORRECTION_JV REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_CJV_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_CJV_ORGL_ACNT_YEAR    NUMBER(1) := NULL;
 NEW_CJV_ORGL_TRAN_CODE    VARCHAR2(1) := NULL;
 NEW_CJV_ORGL_DOC_NO       NUMBER(1) := NULL;
 NEW_CJV_ORGL_DOC_DT       DATE        := NULL;
 NEW_CJV_CORR_TRAN_CODE    VARCHAR2(1) := NULL;
 NEW_CJV_CORR_DOC_NO       NUMBER(1) := NULL;
 NEW_CJV_CORR_DOC_DT       DATE        := NULL;
 NEW_CJV_CORR_DESC         VARCHAR2(1) := NULL;
 NEW_CJV_CR_UID            VARCHAR2(1) := NULL;
 NEW_CJV_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_CORRECTION_JV (
         :OLD.CJV_COMP_CODE,
         :OLD.CJV_ORGL_ACNT_YEAR,
         :OLD.CJV_ORGL_TRAN_CODE,
         :OLD.CJV_ORGL_DOC_NO,
         :OLD.CJV_ORGL_DOC_DT,
         :OLD.CJV_CORR_TRAN_CODE,
         :OLD.CJV_CORR_DOC_NO,
         :OLD.CJV_CORR_DOC_DT,
         :OLD.CJV_CORR_DESC,
         :OLD.CJV_CR_UID,
         :OLD.CJV_CR_DT,
         :NEW.CJV_COMP_CODE,
         :NEW.CJV_ORGL_ACNT_YEAR,
         :NEW.CJV_ORGL_TRAN_CODE,
         :NEW.CJV_ORGL_DOC_NO,
         :NEW.CJV_ORGL_DOC_DT,
         :NEW.CJV_CORR_TRAN_CODE,
         :NEW.CJV_CORR_DOC_NO,
         :NEW.CJV_CORR_DOC_DT,
         :NEW.CJV_CORR_DESC,
         :NEW.CJV_CR_UID,
         :NEW.CJV_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_CORRECTION_JV (
         :OLD.CJV_COMP_CODE,
         :OLD.CJV_ORGL_ACNT_YEAR,
         :OLD.CJV_ORGL_TRAN_CODE,
         :OLD.CJV_ORGL_DOC_NO,
         :OLD.CJV_ORGL_DOC_DT,
         :OLD.CJV_CORR_TRAN_CODE,
         :OLD.CJV_CORR_DOC_NO,
         :OLD.CJV_CORR_DOC_DT,
         :OLD.CJV_CORR_DESC,
         :OLD.CJV_CR_UID,
         :OLD.CJV_CR_DT,
         NEW_CJV_COMP_CODE,
         NEW_CJV_ORGL_ACNT_YEAR,
         NEW_CJV_ORGL_TRAN_CODE,
         NEW_CJV_ORGL_DOC_NO,
         NEW_CJV_ORGL_DOC_DT,
         NEW_CJV_CORR_TRAN_CODE,
         NEW_CJV_CORR_DOC_NO,
         NEW_CJV_CORR_DOC_DT,
         NEW_CJV_CORR_DESC,
         NEW_CJV_CR_UID,
         NEW_CJV_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_CUR_TRANS_DETAIL ( 
  TD_COMP_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_ACNT_YEAR              NUMBER (2)    NOT NULL, 
  TD_TRAN_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_DOC_NO                 NUMBER (6)    NOT NULL, 
  TD_SEQ_NO                 NUMBER (3)    NOT NULL, 
  TD_MAIN_ACNT_CODE         VARCHAR2 (6), 
  TD_SUB_ACNT_CODE          VARCHAR2 (6), 
  TD_DIVN_CODE              VARCHAR2 (6), 
  TD_DEPT_CODE              VARCHAR2 (6), 
  TD_HEAD_NO_1              NUMBER (1), 
  TD_ANLY_CODE_1            VARCHAR2 (6), 
  TD_HEAD_NO_2              NUMBER (1), 
  TD_ANLY_CODE_2            VARCHAR2 (6), 
  TD_CURR_CODE              VARCHAR2 (3), 
  TD_DOC_AMT                NUMBER (14,3) DEFAULT 0, 
  TD_DOC_DRCR_FLAG          VARCHAR2 (1)  DEFAULT 'D', 
  TD_FC_AMT                 NUMBER (14,3) DEFAULT 0, 
  TD_DOC_REF                VARCHAR2 (15), 
  TD_DOC_DUE_DT             DATE, 
  TD_OTH_REF                VARCHAR2 (15), 
  TD_ACTY_VALUE_CODE_1      VARCHAR2 (6), 
  TD_ACTY_VALUE_CODE_2      VARCHAR2 (6), 
  TD_DESC                   VARCHAR2 (2000), 
  TD_DBK_PRINT_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_LED_PRINT_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_MONTH_PRC_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_BILL_FC_AMT            NUMBER (14,3), 
  TD_BILL_LC_AMT            NUMBER (14,3), 
  TD_BILL_STATUS            VARCHAR2 (1), 
  TD_PYMT_APPR_FLAG         VARCHAR2 (1)  DEFAULT '0', 
  TD_CR_UID                 VARCHAR2 (10)  DEFAULT 'TEST1', 
  TD_CR_DT                  DATE          DEFAULT SYSDATE, 
  TD_PYMT_LAST_APPR_FC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_LC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_BANK    VARCHAR2 (6), 
  CONSTRAINT PK_TD_CUR_01
  PRIMARY KEY ( TD_COMP_CODE, TD_ACNT_YEAR, TD_TRAN_CODE, TD_DOC_NO, TD_SEQ_NO ) ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_02 CHECK  ( NVL(TD_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_08 CHECK  (  TD_ACTY_VALUE_CODE_1  IS  NOT  NULL  OR TD_ACTY_VALUE_CODE_2 IS NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006517 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006518 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006519 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006520 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018566 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018567 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018568 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006565 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006566 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006567 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_06 CHECK  ( TD_MONTH_PRC_FLAG IN ('Y','N', 'O', 'o')  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_07 CHECK  ( td_pymt_appr_flag in ('0','1','2','3')  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006570 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006571 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006572 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006573 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006574 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_01 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_02 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_03 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_04 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_05 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_06 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_07 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_NN_08 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006544 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006545 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018561 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018562 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018563 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018564 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018565 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006551 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006552 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006553 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006554 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006555 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006556 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006557 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006558 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006559 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006560 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006561 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006562 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006563 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006564 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006585 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018569 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018570 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018571 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018572 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018573 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006529 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006530 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006531 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_01 CHECK  ( NVL(TD_DOC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_03 CHECK  ( TD_DOC_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_04 CHECK  ( TD_DBK_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
TD_CUR_CHK_05 CHECK  ( TD_LED_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006537 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006538 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006539 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006540 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006541 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006542 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006543 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/




CREATE INDEX FT_CUR_TRANS_DETAIL_02 ON 
  FT_CUR_TRANS_DETAIL(TD_COMP_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 

CREATE INDEX NUX_FT_CUR_TRANS_DETAIL_01 ON 
  FT_CUR_TRANS_DETAIL(TD_COMP_CODE, TD_TRAN_CODE, TD_DOC_NO, TD_SEQ_NO) 

CREATE INDEX REP_TD_MAIN_SUB_AC ON 
  FT_CUR_TRANS_DETAIL(TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_CUR_TRANS_DETAIL
BEFORE INSERT OR UPDATE OR DELETE ON FT_CUR_TRANS_DETAIL
FOR EACH ROW
DECLARE
 NEW_TD_COMP_CODE             VARCHAR2(1) := NULL;
 NEW_TD_ACNT_YEAR             NUMBER(1) := NULL;
 NEW_TD_TRAN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_NO                NUMBER(1) := NULL;
 NEW_TD_SEQ_NO                NUMBER(1) := NULL;
 NEW_TD_MAIN_ACNT_CODE        VARCHAR2(1) := NULL;
 NEW_TD_SUB_ACNT_CODE         VARCHAR2(1) := NULL;
 NEW_TD_DIVN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DEPT_CODE             VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_1             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_1           VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_2             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_2           VARCHAR2(1) := NULL;
 NEW_TD_CURR_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_AMT               NUMBER(1) := NULL;
 NEW_TD_DOC_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_TD_FC_AMT                NUMBER(1) := NULL;
 NEW_TD_DOC_REF               VARCHAR2(1) := NULL;
 NEW_TD_DOC_DUE_DT            DATE        := NULL;
 NEW_TD_OTH_REF               VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_1     VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_2     VARCHAR2(1) := NULL;
 NEW_TD_DESC                  VARCHAR2(1) := NULL;
 NEW_TD_DBK_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_LED_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_MONTH_PRC_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_BILL_FC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_LC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_STATUS           VARCHAR2(1) := NULL;
 NEW_TD_PYMT_APPR_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_CR_UID                VARCHAR2(1) := NULL;
 NEW_TD_CR_DT                 DATE        := NULL;
 NEW_TD_PYMT_LAST_APPR_FC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_LC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_BANK   VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
	TRG_MODE := 'I';
    ELSIF UPDATING THEN
	TRG_MODE := 'U';
    ELSIF DELETING THEN
	TRG_MODE := 'D';
    ELSE
	TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
	STP_FT_CUR_TRANS_DETAIL (
	 :OLD.TD_COMP_CODE,
	 :OLD.TD_ACNT_YEAR,
	 :OLD.TD_TRAN_CODE,
	 :OLD.TD_DOC_NO,
	 :OLD.TD_SEQ_NO,
	 :OLD.TD_MAIN_ACNT_CODE,
	 :OLD.TD_SUB_ACNT_CODE,
	 :OLD.TD_DIVN_CODE,
	 :OLD.TD_DEPT_CODE,
	 :OLD.TD_HEAD_NO_1,
	 :OLD.TD_ANLY_CODE_1,
	 :OLD.TD_HEAD_NO_2,
	 :OLD.TD_ANLY_CODE_2,
	 :OLD.TD_CURR_CODE,
	 :OLD.TD_DOC_AMT,
	 :OLD.TD_DOC_DRCR_FLAG,
	 :OLD.TD_FC_AMT,
	 :OLD.TD_DOC_REF,
	 :OLD.TD_DOC_DUE_DT,
	 :OLD.TD_OTH_REF,
	 :OLD.TD_ACTY_VALUE_CODE_1,
	 :OLD.TD_ACTY_VALUE_CODE_2,
	 :OLD.TD_DESC,
	 :OLD.TD_DBK_PRINT_FLAG,
	 :OLD.TD_LED_PRINT_FLAG,
	 :OLD.TD_MONTH_PRC_FLAG,
	 :OLD.TD_BILL_FC_AMT,
	 :OLD.TD_BILL_LC_AMT,
	 :OLD.TD_BILL_STATUS,
	 :OLD.TD_PYMT_APPR_FLAG,
	 :OLD.TD_CR_UID,
	 :OLD.TD_CR_DT,
	 :OLD.TD_PYMT_LAST_APPR_FC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_LC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_BANK,
	 :NEW.TD_COMP_CODE,
	 :NEW.TD_ACNT_YEAR,
	 :NEW.TD_TRAN_CODE,
	 :NEW.TD_DOC_NO,
	 :NEW.TD_SEQ_NO,
	 :NEW.TD_MAIN_ACNT_CODE,
	 :NEW.TD_SUB_ACNT_CODE,
	 :NEW.TD_DIVN_CODE,
	 :NEW.TD_DEPT_CODE,
	 :NEW.TD_HEAD_NO_1,
	 :NEW.TD_ANLY_CODE_1,
	 :NEW.TD_HEAD_NO_2,
	 :NEW.TD_ANLY_CODE_2,
	 :NEW.TD_CURR_CODE,
	 :NEW.TD_DOC_AMT,
	 :NEW.TD_DOC_DRCR_FLAG,
	 :NEW.TD_FC_AMT,
	 :NEW.TD_DOC_REF,
	 :NEW.TD_DOC_DUE_DT,
	 :NEW.TD_OTH_REF,
	 :NEW.TD_ACTY_VALUE_CODE_1,
	 :NEW.TD_ACTY_VALUE_CODE_2,
	 :NEW.TD_DESC,
	 :NEW.TD_DBK_PRINT_FLAG,
	 :NEW.TD_LED_PRINT_FLAG,
	 :NEW.TD_MONTH_PRC_FLAG,
	 :NEW.TD_BILL_FC_AMT,
	 :NEW.TD_BILL_LC_AMT,
	 :NEW.TD_BILL_STATUS,
	 :NEW.TD_PYMT_APPR_FLAG,
	 :NEW.TD_CR_UID,
	 :NEW.TD_CR_DT,
	 :NEW.TD_PYMT_LAST_APPR_FC_AMT,
	 :NEW.TD_PYMT_LAST_APPR_LC_AMT,
	 :NEW.TD_PYMT_LAST_APPR_BANK,
	 TRG_MODE,
	 TRG_ERR_NO,
	 TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
	STP_FT_CUR_TRANS_DETAIL (
	 :OLD.TD_COMP_CODE,
	 :OLD.TD_ACNT_YEAR,
	 :OLD.TD_TRAN_CODE,
	 :OLD.TD_DOC_NO,
	 :OLD.TD_SEQ_NO,
	 :OLD.TD_MAIN_ACNT_CODE,
	 :OLD.TD_SUB_ACNT_CODE,
	 :OLD.TD_DIVN_CODE,
	 :OLD.TD_DEPT_CODE,
	 :OLD.TD_HEAD_NO_1,
	 :OLD.TD_ANLY_CODE_1,
	 :OLD.TD_HEAD_NO_2,
	 :OLD.TD_ANLY_CODE_2,
	 :OLD.TD_CURR_CODE,
	 :OLD.TD_DOC_AMT,
	 :OLD.TD_DOC_DRCR_FLAG,
	 :OLD.TD_FC_AMT,
	 :OLD.TD_DOC_REF,
	 :OLD.TD_DOC_DUE_DT,
	 :OLD.TD_OTH_REF,
	 :OLD.TD_ACTY_VALUE_CODE_1,
	 :OLD.TD_ACTY_VALUE_CODE_2,
	 :OLD.TD_DESC,
	 :OLD.TD_DBK_PRINT_FLAG,
	 :OLD.TD_LED_PRINT_FLAG,
	 :OLD.TD_MONTH_PRC_FLAG,
	 :OLD.TD_BILL_FC_AMT,
	 :OLD.TD_BILL_LC_AMT,
	 :OLD.TD_BILL_STATUS,
	 :OLD.TD_PYMT_APPR_FLAG,
	 :OLD.TD_CR_UID,
	 :OLD.TD_CR_DT,
	 :OLD.TD_PYMT_LAST_APPR_FC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_LC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_BANK,
	 NEW_TD_COMP_CODE,
	 NEW_TD_ACNT_YEAR,
	 NEW_TD_TRAN_CODE,
	 NEW_TD_DOC_NO,
	 NEW_TD_SEQ_NO,
	 NEW_TD_MAIN_ACNT_CODE,
	 NEW_TD_SUB_ACNT_CODE,
	 NEW_TD_DIVN_CODE,
	 NEW_TD_DEPT_CODE,
	 NEW_TD_HEAD_NO_1,
	 NEW_TD_ANLY_CODE_1,
	 NEW_TD_HEAD_NO_2,
	 NEW_TD_ANLY_CODE_2,
	 NEW_TD_CURR_CODE,
	 NEW_TD_DOC_AMT,
	 NEW_TD_DOC_DRCR_FLAG,
	 NEW_TD_FC_AMT,
	 NEW_TD_DOC_REF,
	 NEW_TD_DOC_DUE_DT,
	 NEW_TD_OTH_REF,
	 NEW_TD_ACTY_VALUE_CODE_1,
	 NEW_TD_ACTY_VALUE_CODE_2,
	 NEW_TD_DESC,
	 NEW_TD_DBK_PRINT_FLAG,
	 NEW_TD_LED_PRINT_FLAG,
	 NEW_TD_MONTH_PRC_FLAG,
	 NEW_TD_BILL_FC_AMT,
	 NEW_TD_BILL_LC_AMT,
	 NEW_TD_BILL_STATUS,
	 NEW_TD_PYMT_APPR_FLAG,
	 NEW_TD_CR_UID,
	 NEW_TD_CR_DT,
	 NEW_TD_PYMT_LAST_APPR_FC_AMT,
	 NEW_TD_PYMT_LAST_APPR_LC_AMT,
	 NEW_TD_PYMT_LAST_APPR_BANK,
	 TRG_MODE,
	 TRG_ERR_NO,
	 TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
	RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_CUR_TRANS_HEADER ( 
  TH_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_ACNT_YEAR      NUMBER (2)    NOT NULL, 
  TH_TRAN_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_DOC_NO         NUMBER (6)    NOT NULL, 
  TH_DOC_DT         DATE, 
  TH_DOC_CAL_YEAR   NUMBER (4), 
  TH_DOC_CAL_MONTH  NUMBER (2), 
  TH_DOC_REF        VARCHAR2 (15), 
  TH_DOC_REF_DT     DATE, 
  TH_DOC_DUE_DT     DATE, 
  TH_DIVN_CODE      VARCHAR2 (6), 
  TH_DEPT_CODE      VARCHAR2 (6), 
  TH_CTL_TOTAL      NUMBER (14,3) DEFAULT 0, 
  TH_DESC           VARCHAR2 (2000), 
  TH_ANNOTATION     VARCHAR2 (2000), 
  TH_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  TH_CR_DT          DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_TH_CUR_01
  PRIMARY KEY ( TH_COMP_CODE, TH_ACNT_YEAR, TH_TRAN_CODE, TH_DOC_NO ) ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_04 CHECK  ( TH_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018579 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006588 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006589 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006590 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006591 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006592 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006593 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_01 CHECK  ( NVL(TH_CTL_TOTAL,0) >= 0  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_02 CHECK  ( TH_DOC_NO > 0  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_03 CHECK  ( TH_DOC_DUE_DT >= TH_DOC_DT  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006597 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006598 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006599 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006600 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006601 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006602 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006603 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006604 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006605 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006606 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_05 CHECK  ( TH_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_CHK_06 CHECK  ( TH_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_NN_01 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
TH_CUR_NN_02 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018574 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018575 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018576 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018577 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018578 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006617 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD CONSTRAINT 
SYS_C006618 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/




CREATE INDEX FT_CUR_TRANS_HEADER_01 ON 
  FT_CUR_TRANS_HEADER(TH_COMP_CODE, TH_ACNT_YEAR, TH_DOC_CAL_MONTH, TH_DOC_CAL_YEAR) 

CREATE INDEX NUX_FT_CUR_TRANS_HEADER_01 ON 
  FT_CUR_TRANS_HEADER(TH_COMP_CODE, TH_TRAN_CODE, TH_DOC_NO) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_CUR_TRANS_HEADER
BEFORE INSERT OR UPDATE OR DELETE ON FT_CUR_TRANS_HEADER
FOR EACH ROW
DECLARE
 NEW_TH_COMP_CODE          VARCHAR2(1) := NULL;
 NEW_TH_ACNT_YEAR          NUMBER(1) := NULL;
 NEW_TH_TRAN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DOC_NO             NUMBER(1) := NULL;
 NEW_TH_DOC_DT             DATE        := NULL;
 NEW_TH_DOC_CAL_YEAR       NUMBER(1) := NULL;
 NEW_TH_DOC_CAL_MONTH      NUMBER(1) := NULL;
 NEW_TH_DOC_REF            VARCHAR2(1) := NULL;
 NEW_TH_DOC_REF_DT         DATE        := NULL;
 NEW_TH_DOC_DUE_DT         DATE        := NULL;
 NEW_TH_DIVN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DEPT_CODE          VARCHAR2(1) := NULL;
 NEW_TH_CTL_TOTAL          NUMBER(1) := NULL;
 NEW_TH_DESC               VARCHAR2(1) := NULL;
 NEW_TH_ANNOTATION         VARCHAR2(1) := NULL;
 NEW_TH_CR_UID             VARCHAR2(1) := NULL;
 NEW_TH_CR_DT              DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_CUR_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         :NEW.TH_COMP_CODE,
         :NEW.TH_ACNT_YEAR,
         :NEW.TH_TRAN_CODE,
         :NEW.TH_DOC_NO,
         :NEW.TH_DOC_DT,
         :NEW.TH_DOC_CAL_YEAR,
         :NEW.TH_DOC_CAL_MONTH,
         :NEW.TH_DOC_REF,
         :NEW.TH_DOC_REF_DT,
         :NEW.TH_DOC_DUE_DT,
         :NEW.TH_DIVN_CODE,
         :NEW.TH_DEPT_CODE,
         :NEW.TH_CTL_TOTAL,
         :NEW.TH_DESC,
         :NEW.TH_ANNOTATION,
         :NEW.TH_CR_UID,
         :NEW.TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_CUR_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         NEW_TH_COMP_CODE,
         NEW_TH_ACNT_YEAR,
         NEW_TH_TRAN_CODE,
         NEW_TH_DOC_NO,
         NEW_TH_DOC_DT,
         NEW_TH_DOC_CAL_YEAR,
         NEW_TH_DOC_CAL_MONTH,
         NEW_TH_DOC_REF,
         NEW_TH_DOC_REF_DT,
         NEW_TH_DOC_DUE_DT,
         NEW_TH_DIVN_CODE,
         NEW_TH_DEPT_CODE,
         NEW_TH_CTL_TOTAL,
         NEW_TH_DESC,
         NEW_TH_ANNOTATION,
         NEW_TH_CR_UID,
         NEW_TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_FIXED_JV ( 
  FJV_REF        VARCHAR2 (15)  NOT NULL, 
  FJV_COMP_CODE  VARCHAR2 (3)  NOT NULL, 
  FJV_ACNT_YEAR  NUMBER (2), 
  FJV_REF_NAME   VARCHAR2 (60), 
  FJV_TRAN_CODE  VARCHAR2 (3), 
  FJV_DOC_NO     NUMBER (6), 
  FJV_DESC       VARCHAR2 (2000), 
  FJV_CR_UID     VARCHAR2 (10)  DEFAULT 'TEST1', 
  FJV_CR_DT      DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_FJV_01
  PRIMARY KEY ( FJV_COMP_CODE, FJV_REF ) ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FIN_C0018580 CHECK  ( FJV_REF IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FIN_C0018581 CHECK  ( FJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FIN_C0018582 CHECK  ( FJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FIN_C0018583 CHECK  ( FJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FJV_CHK_01 CHECK  ( FJV_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FJV_CHK_02 CHECK  ( FJV_DOC_NO > 0  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FJV_NN_01 CHECK  ( FJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
FJV_NN_02 CHECK  ( FJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
SYS_C006628 CHECK  ( FJV_REF IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
SYS_C006629 CHECK  ( FJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
SYS_C006630 CHECK  ( FJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_FIXED_JV ADD CONSTRAINT 
SYS_C006631 CHECK  ( FJV_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FT_OS ( 
  OST_KEY_NO             NUMBER (8)    NOT NULL, 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1)  DEFAULT 'C', 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10)  DEFAULT 'TEST1', 
  OST_CR_DT              DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_OST_01
  PRIMARY KEY ( OST_KEY_NO ) ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018586 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_03 CHECK  ( OST_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018584 CHECK  ( OST_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018585 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018587 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018588 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018589 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
FIN_C0018590 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_04 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_05 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_06 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006642 CHECK  ( OST_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006643 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006644 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006645 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006646 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006647 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
SYS_C006648 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_01 CHECK  ( NVL(OST_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_02 CHECK  ( NVL(OST_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_04 CHECK  ( OST_DUE_DT >= OST_DOC_DT  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_05 CHECK  (       NVL(OST_LC_ADJ_AMT,0)  - NVL(OST_LC_AMT,0) < 0.05  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_06 CHECK  (       NVL(OST_FC_ADJ_AMT,0)  - NVL(OST_FC_AMT,0) < 0.05  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_07 CHECK  ( OST_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_08 CHECK  ( OST_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_09 CHECK  ( OST_DOC_NO > 0  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_10 CHECK  ( OST_TYPE IN ('P','R',NULL)  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_CHK_11 CHECK  ( OST_DUE_DT >= OST_DOC_DT  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_01 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_02 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS ADD CONSTRAINT 
OST_NN_03 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/




CREATE INDEX FNX_OS_01 ON 
  FT_OS(OST_COMP_CODE, OST_ACNT_YEAR, OST_TRAN_CODE, OST_DOC_NO, OST_SEQ_NO, OST_MAIN_ACNT_CODE, OST_SUB_ACNT_CODE) 

CREATE INDEX FNX_OS_02 ON 
  FT_OS(OST_COMP_CODE, OST_REF_ACNT_YEAR, OST_REF_TRAN_CODE, OST_REF_DOC_NO, OST_REF_SEQ_NO) 

CREATE INDEX FT_OS_1 ON 
  FT_OS(OST_TRAN_CODE, OST_DOC_NO) 

CREATE INDEX FT_OS_NX_01 ON 
  FT_OS(OST_COMP_CODE, OST_MAIN_ACNT_CODE, OST_SUB_ACNT_CODE, OST_DOC_DT) 

CREATE INDEX FT_OS_NX_02 ON 
  FT_OS(OST_REF_KEY_NO) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_OS
BEFORE INSERT OR UPDATE OR DELETE ON FT_OS
FOR EACH ROW
DECLARE
 NEW_OST_KEY_NO            NUMBER(1) := NULL;
 NEW_OST_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_OST_TRAN_CODE         VARCHAR2(1) := NULL;
 NEW_OST_DOC_NO            NUMBER(1) := NULL;
 NEW_OST_SEQ_NO            NUMBER(1) := NULL;
 NEW_OST_ACNT_YEAR         NUMBER(1) := NULL;
 NEW_OST_DOC_DT            DATE        := NULL;
 NEW_OST_DOC_CAL_YEAR      NUMBER(1) := NULL;
 NEW_OST_DOC_CAL_MONTH     NUMBER(1) := NULL;
 NEW_OST_DUE_DT            DATE        := NULL;
 NEW_OST_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_OST_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_OST_DIVN_CODE         VARCHAR2(1) := NULL;
 NEW_OST_DEPT_CODE         VARCHAR2(1) := NULL;
 NEW_OST_HEAD_NO_1         NUMBER(1) := NULL;
 NEW_OST_ANLY_CODE_1       VARCHAR2(1) := NULL;
 NEW_OST_HEAD_NO_2         NUMBER(1) := NULL;
 NEW_OST_ANLY_CODE_2       VARCHAR2(1) := NULL;
 NEW_OST_ACTY_CODE_1       VARCHAR2(1) := NULL;
 NEW_OST_ACTY_CODE_2       VARCHAR2(1) := NULL;
 NEW_OST_CURR_CODE         VARCHAR2(1) := NULL;
 NEW_OST_LC_AMT            NUMBER(1) := NULL;
 NEW_OST_FC_AMT            NUMBER(1) := NULL;
 NEW_OST_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_OST_DOC_REF           VARCHAR2(1) := NULL;
 NEW_OST_DOC_REF_DT        DATE        := NULL;
 NEW_OST_OTH_REF           VARCHAR2(1) := NULL;
 NEW_OST_LC_ADJ_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_ADJ_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_PDC_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_PDC_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_UNP_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_UNP_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_UNDEP_AMT      NUMBER(1) := NULL;
 NEW_OST_FC_UNDEP_AMT      NUMBER(1) := NULL;
 NEW_OST_LC_ORG_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_ORG_AMT        NUMBER(1) := NULL;
 NEW_OST_REF_KEY_NO        NUMBER(1) := NULL;
 NEW_OST_REF_COMP_CODE     VARCHAR2(1) := NULL;
 NEW_OST_REF_ACNT_YEAR     NUMBER(1) := NULL;
 NEW_OST_REF_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_OST_REF_SEQ_NO        NUMBER(1) := NULL;
 NEW_OST_REF_DOC_NO        NUMBER(1) := NULL;
 NEW_OST_REF_DOC_DT        DATE        := NULL;
 NEW_OST_REF_DOC_CAL_YEAR  NUMBER(1) := NULL;
 NEW_OST_REF_DOC_CAL_MONTH NUMBER(1) := NULL;
 NEW_OST_REF_DUE_DT        DATE        := NULL;
 NEW_OST_LAST_MATCH_DT     DATE        := NULL;
 NEW_OST_TYPE              VARCHAR2(1) := NULL;
 NEW_OST_CR_UID            VARCHAR2(1) := NULL;
 NEW_OST_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_OS (
         :OLD.OST_KEY_NO,
         :OLD.OST_COMP_CODE,
         :OLD.OST_TRAN_CODE,
         :OLD.OST_DOC_NO,
         :OLD.OST_SEQ_NO,
         :OLD.OST_ACNT_YEAR,
         :OLD.OST_DOC_DT,
         :OLD.OST_DOC_CAL_YEAR,
         :OLD.OST_DOC_CAL_MONTH,
         :OLD.OST_DUE_DT,
         :OLD.OST_MAIN_ACNT_CODE,
         :OLD.OST_SUB_ACNT_CODE,
         :OLD.OST_DIVN_CODE,
         :OLD.OST_DEPT_CODE,
         :OLD.OST_HEAD_NO_1,
         :OLD.OST_ANLY_CODE_1,
         :OLD.OST_HEAD_NO_2,
         :OLD.OST_ANLY_CODE_2,
         :OLD.OST_ACTY_CODE_1,
         :OLD.OST_ACTY_CODE_2,
         :OLD.OST_CURR_CODE,
         :OLD.OST_LC_AMT,
         :OLD.OST_FC_AMT,
         :OLD.OST_DRCR_FLAG,
         :OLD.OST_DOC_REF,
         :OLD.OST_DOC_REF_DT,
         :OLD.OST_OTH_REF,
         :OLD.OST_LC_ADJ_AMT,
         :OLD.OST_FC_ADJ_AMT,
         :OLD.OST_LC_PDC_AMT,
         :OLD.OST_FC_PDC_AMT,
         :OLD.OST_LC_UNP_AMT,
         :OLD.OST_FC_UNP_AMT,
         :OLD.OST_LC_UNDEP_AMT,
         :OLD.OST_FC_UNDEP_AMT,
         :OLD.OST_LC_ORG_AMT,
         :OLD.OST_FC_ORG_AMT,
         :OLD.OST_REF_KEY_NO,
         :OLD.OST_REF_COMP_CODE,
         :OLD.OST_REF_ACNT_YEAR,
         :OLD.OST_REF_TRAN_CODE,
         :OLD.OST_REF_SEQ_NO,
         :OLD.OST_REF_DOC_NO,
         :OLD.OST_REF_DOC_DT,
         :OLD.OST_REF_DOC_CAL_YEAR,
         :OLD.OST_REF_DOC_CAL_MONTH,
         :OLD.OST_REF_DUE_DT,
         :OLD.OST_LAST_MATCH_DT,
         :OLD.OST_TYPE,
         :OLD.OST_CR_UID,
         :OLD.OST_CR_DT,
         :NEW.OST_KEY_NO,
         :NEW.OST_COMP_CODE,
         :NEW.OST_TRAN_CODE,
         :NEW.OST_DOC_NO,
         :NEW.OST_SEQ_NO,
         :NEW.OST_ACNT_YEAR,
         :NEW.OST_DOC_DT,
         :NEW.OST_DOC_CAL_YEAR,
         :NEW.OST_DOC_CAL_MONTH,
         :NEW.OST_DUE_DT,
         :NEW.OST_MAIN_ACNT_CODE,
         :NEW.OST_SUB_ACNT_CODE,
         :NEW.OST_DIVN_CODE,
         :NEW.OST_DEPT_CODE,
         :NEW.OST_HEAD_NO_1,
         :NEW.OST_ANLY_CODE_1,
         :NEW.OST_HEAD_NO_2,
         :NEW.OST_ANLY_CODE_2,
         :NEW.OST_ACTY_CODE_1,
         :NEW.OST_ACTY_CODE_2,
         :NEW.OST_CURR_CODE,
         :NEW.OST_LC_AMT,
         :NEW.OST_FC_AMT,
         :NEW.OST_DRCR_FLAG,
         :NEW.OST_DOC_REF,
         :NEW.OST_DOC_REF_DT,
         :NEW.OST_OTH_REF,
         :NEW.OST_LC_ADJ_AMT,
         :NEW.OST_FC_ADJ_AMT,
         :NEW.OST_LC_PDC_AMT,
         :NEW.OST_FC_PDC_AMT,
         :NEW.OST_LC_UNP_AMT,
         :NEW.OST_FC_UNP_AMT,
         :NEW.OST_LC_UNDEP_AMT,
         :NEW.OST_FC_UNDEP_AMT,
         :NEW.OST_LC_ORG_AMT,
         :NEW.OST_FC_ORG_AMT,
         :NEW.OST_REF_KEY_NO,
         :NEW.OST_REF_COMP_CODE,
         :NEW.OST_REF_ACNT_YEAR,
         :NEW.OST_REF_TRAN_CODE,
         :NEW.OST_REF_SEQ_NO,
         :NEW.OST_REF_DOC_NO,
         :NEW.OST_REF_DOC_DT,
         :NEW.OST_REF_DOC_CAL_YEAR,
         :NEW.OST_REF_DOC_CAL_MONTH,
         :NEW.OST_REF_DUE_DT,
         :NEW.OST_LAST_MATCH_DT,
         :NEW.OST_TYPE,
         :NEW.OST_CR_UID,
         :NEW.OST_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_OS (
         :OLD.OST_KEY_NO,
         :OLD.OST_COMP_CODE,
         :OLD.OST_TRAN_CODE,
         :OLD.OST_DOC_NO,
         :OLD.OST_SEQ_NO,
         :OLD.OST_ACNT_YEAR,
         :OLD.OST_DOC_DT,
         :OLD.OST_DOC_CAL_YEAR,
         :OLD.OST_DOC_CAL_MONTH,
         :OLD.OST_DUE_DT,
         :OLD.OST_MAIN_ACNT_CODE,
         :OLD.OST_SUB_ACNT_CODE,
         :OLD.OST_DIVN_CODE,
         :OLD.OST_DEPT_CODE,
         :OLD.OST_HEAD_NO_1,
         :OLD.OST_ANLY_CODE_1,
         :OLD.OST_HEAD_NO_2,
         :OLD.OST_ANLY_CODE_2,
         :OLD.OST_ACTY_CODE_1,
         :OLD.OST_ACTY_CODE_2,
         :OLD.OST_CURR_CODE,
         :OLD.OST_LC_AMT,
         :OLD.OST_FC_AMT,
         :OLD.OST_DRCR_FLAG,
         :OLD.OST_DOC_REF,
         :OLD.OST_DOC_REF_DT,
         :OLD.OST_OTH_REF,
         :OLD.OST_LC_ADJ_AMT,
         :OLD.OST_FC_ADJ_AMT,
         :OLD.OST_LC_PDC_AMT,
         :OLD.OST_FC_PDC_AMT,
         :OLD.OST_LC_UNP_AMT,
         :OLD.OST_FC_UNP_AMT,
         :OLD.OST_LC_UNDEP_AMT,
         :OLD.OST_FC_UNDEP_AMT,
         :OLD.OST_LC_ORG_AMT,
         :OLD.OST_FC_ORG_AMT,
         :OLD.OST_REF_KEY_NO,
         :OLD.OST_REF_COMP_CODE,
         :OLD.OST_REF_ACNT_YEAR,
         :OLD.OST_REF_TRAN_CODE,
         :OLD.OST_REF_SEQ_NO,
         :OLD.OST_REF_DOC_NO,
         :OLD.OST_REF_DOC_DT,
         :OLD.OST_REF_DOC_CAL_YEAR,
         :OLD.OST_REF_DOC_CAL_MONTH,
         :OLD.OST_REF_DUE_DT,
         :OLD.OST_LAST_MATCH_DT,
         :OLD.OST_TYPE,
         :OLD.OST_CR_UID,
         :OLD.OST_CR_DT,
         NEW_OST_KEY_NO,
         NEW_OST_COMP_CODE,
         NEW_OST_TRAN_CODE,
         NEW_OST_DOC_NO,
         NEW_OST_SEQ_NO,
         NEW_OST_ACNT_YEAR,
         NEW_OST_DOC_DT,
         NEW_OST_DOC_CAL_YEAR,
         NEW_OST_DOC_CAL_MONTH,
         NEW_OST_DUE_DT,
         NEW_OST_MAIN_ACNT_CODE,
         NEW_OST_SUB_ACNT_CODE,
         NEW_OST_DIVN_CODE,
         NEW_OST_DEPT_CODE,
         NEW_OST_HEAD_NO_1,
         NEW_OST_ANLY_CODE_1,
         NEW_OST_HEAD_NO_2,
         NEW_OST_ANLY_CODE_2,
         NEW_OST_ACTY_CODE_1,
         NEW_OST_ACTY_CODE_2,
         NEW_OST_CURR_CODE,
         NEW_OST_LC_AMT,
         NEW_OST_FC_AMT,
         NEW_OST_DRCR_FLAG,
         NEW_OST_DOC_REF,
         NEW_OST_DOC_REF_DT,
         NEW_OST_OTH_REF,
         NEW_OST_LC_ADJ_AMT,
         NEW_OST_FC_ADJ_AMT,
         NEW_OST_LC_PDC_AMT,
         NEW_OST_FC_PDC_AMT,
         NEW_OST_LC_UNP_AMT,
         NEW_OST_FC_UNP_AMT,
         NEW_OST_LC_UNDEP_AMT,
         NEW_OST_FC_UNDEP_AMT,
         NEW_OST_LC_ORG_AMT,
         NEW_OST_FC_ORG_AMT,
         NEW_OST_REF_KEY_NO,
         NEW_OST_REF_COMP_CODE,
         NEW_OST_REF_ACNT_YEAR,
         NEW_OST_REF_TRAN_CODE,
         NEW_OST_REF_SEQ_NO,
         NEW_OST_REF_DOC_NO,
         NEW_OST_REF_DOC_DT,
         NEW_OST_REF_DOC_CAL_YEAR,
         NEW_OST_REF_DOC_CAL_MONTH,
         NEW_OST_REF_DUE_DT,
         NEW_OST_LAST_MATCH_DT,
         NEW_OST_TYPE,
         NEW_OST_CR_UID,
         NEW_OST_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_OS_TEMP ( 
  OST_KEY_NO             NUMBER (8), 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1), 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10), 
  OST_CR_DT              DATE ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006667 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006668 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006669 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006670 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006671 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006672 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006673 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006674 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018591 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018592 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018593 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018594 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018595 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C0018596 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002328 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002329 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002330 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002331 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002332 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
FIN_C002333 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006687 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006664 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006665 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_OS_TEMP ADD CONSTRAINT 
SYS_C006666 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FT_PAY_GEN_DETAIL ( 
  PGD_PGH_KEY_NO         NUMBER (10), 
  PGD_COMP_CODE          VARCHAR2 (3), 
  PGD_ACNT_YEAR          NUMBER (2), 
  PGD_TRAN_CODE          VARCHAR2 (3), 
  PGD_SEQ_NO             NUMBER (3), 
  PGD_MAIN_ACNT_CODE     VARCHAR2 (6), 
  PGD_SUB_ACNT_CODE      VARCHAR2 (6), 
  PGD_DIVN_CODE          VARCHAR2 (6), 
  PGD_DEPT_CODE          VARCHAR2 (6), 
  PGD_HEAD_NO_1          NUMBER (1), 
  PGD_ANLY_CODE_1        VARCHAR2 (6), 
  PGD_HEAD_NO_2          NUMBER (1), 
  PGD_ANLY_CODE_2        VARCHAR2 (6), 
  PGD_CURR_CODE          VARCHAR2 (3), 
  PGD_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  PGD_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  PGD_DOC_AMT            NUMBER (14,3), 
  PGD_FC_AMT             NUMBER (14,3) ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006688 CHECK  ( PGD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006689 CHECK  ( PGD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006690 CHECK  ( PGD_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006691 CHECK  ( PGD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006692 CHECK  ( PGD_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006693 CHECK  ( PGD_PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021296 CHECK  ( PGD_PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021297 CHECK  ( PGD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021298 CHECK  ( PGD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021299 CHECK  ( PGD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021300 CHECK  ( PGD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021301 CHECK  ( PGD_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021302 CHECK  ( PGD_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021303 CHECK  ( PGD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
FIN_C0021304 CHECK  ( PGD_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006703 CHECK  ( PGD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006704 CHECK  ( PGD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_DETAIL ADD CONSTRAINT 
SYS_C006705 CHECK  ( PGD_TRAN_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_PAY_GEN_DETAIL_01 ON 
  FT_PAY_GEN_DETAIL(PGD_PGH_KEY_NO) 

/

/
CREATE TABLE FT_PAY_GEN_EXPENSE ( 
  PGE_PGH_KEY_NO             NUMBER (10), 
  PGE_EXP_MAIN_ACNT_CODE     VARCHAR2 (6), 
  PGE_EXP_SUB_ACNT_CODE      VARCHAR2 (6), 
  PGE_EXP_DIVN_CODE          VARCHAR2 (6), 
  PGE_EXP_DEPT_CODE          VARCHAR2 (6), 
  PGE_EXP_HEAD_NO_1          NUMBER (1), 
  PGE_EXP_ANLY_CODE_1        VARCHAR2 (6), 
  PGE_EXP_HEAD_NO_2          NUMBER (1), 
  PGE_EXP_ANLY_CODE_2        VARCHAR2 (6), 
  PGE_EXP_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  PGE_EXP_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  PGE_EXP_CURR_CODE          VARCHAR2 (3), 
  PGE_EXP_DOC_AMT            NUMBER (14,3), 
  PGE_EXP_FC_AMT             NUMBER (14,3) ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
FIN_C0021307 CHECK  ( PGE_EXP_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
FIN_C0021308 CHECK  ( PGE_EXP_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
FIN_C0021309 CHECK  ( PGE_EXP_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
SYS_C006711 CHECK  ( PGE_PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
SYS_C006712 CHECK  ( PGE_EXP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
SYS_C006713 CHECK  ( PGE_EXP_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
SYS_C006714 CHECK  ( PGE_EXP_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
SYS_C006715 CHECK  ( PGE_EXP_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
FIN_C0021305 CHECK  ( PGE_PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_EXPENSE ADD CONSTRAINT 
FIN_C0021306 CHECK  ( PGE_EXP_MAIN_ACNT_CODE IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_PAY_GEN_EXPENSE_01 ON 
  FT_PAY_GEN_EXPENSE(PGE_PGH_KEY_NO) 

/

/
CREATE TABLE FT_PAY_GEN_HEADER ( 
  PGH_KEY_NO                  NUMBER (10)   NOT NULL, 
  PGH_COMP_CODE               VARCHAR2 (3), 
  PGH_DOC_NO                  NUMBER (6), 
  PGH_TRAN_CODE               VARCHAR2 (3), 
  PGH_DOC_DT                  DATE, 
  PGH_SUPP_MAIN_ACNT_CODE     VARCHAR2 (6), 
  PGH_SUPP_SUB_ACNT_CODE      VARCHAR2 (6), 
  PGH_SUPP_CURR_CODE          VARCHAR2 (3), 
  PGH_DOC_AMT                 NUMBER (14,3), 
  PGH_FC_AMT                  NUMBER (14,3), 
  PGH_BANK_MAIN_ACNT_CODE     VARCHAR2 (6), 
  PGH_BANK_SUB_ACNT_CODE      VARCHAR2 (6), 
  PGH_BANK_DIVN_CODE          VARCHAR2 (6), 
  PGH_BANK_DEPT_CODE          VARCHAR2 (6), 
  PGH_BANK_HEAD_NO_1          NUMBER (1), 
  PGH_BANK_ANLY_CODE_1        VARCHAR2 (6), 
  PGH_BANK_HEAD_NO_2          NUMBER (1), 
  PGH_BANK_ANLY_CODE_2        VARCHAR2 (6), 
  PGH_BANK_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  PGH_BANK_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  PGH_BANK_CURR_CODE          VARCHAR2 (3), 
  PGH_BANK_DOC_AMT            NUMBER (14,3), 
  PGH_BANK_FC_AMT             NUMBER (14,3), 
  PGH_PAYMENT_TYPE            VARCHAR2 (1), 
  PGH_DOC_REF                 VARCHAR2 (15), 
  PGH_CR_UID                  VARCHAR2 (10), 
  PGH_CR_DT                   DATE, 
  CONSTRAINT PK_PGH_01
  PRIMARY KEY ( PGH_KEY_NO ) ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021286 CHECK  ( PGH_SUPP_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021287 CHECK  ( PGH_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021288 CHECK  ( PGH_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006729 CHECK  ( PGH_SUPP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006730 CHECK  ( PGH_SUPP_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006731 CHECK  ( PGH_SUPP_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006732 CHECK  ( PGH_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006733 CHECK  ( PGH_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006734 CHECK  ( PGH_BANK_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006735 CHECK  ( PGH_BANK_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006736 CHECK  ( PGH_BANK_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006737 CHECK  ( PGH_BANK_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006738 CHECK  ( PGH_PAYMENT_TYPE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006739 CHECK  ( PGH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006740 CHECK  ( PGH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021279 CHECK  ( PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021280 CHECK  ( PGH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021281 CHECK  ( PGH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021282 CHECK  ( PGH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021283 CHECK  ( PGH_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021284 CHECK  ( PGH_SUPP_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021285 CHECK  ( PGH_SUPP_SUB_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021289 CHECK  ( PGH_BANK_MAIN_ACNT_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021290 CHECK  ( PGH_BANK_CURR_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021291 CHECK  ( PGH_BANK_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021292 CHECK  ( PGH_BANK_FC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021293 CHECK  ( PGH_PAYMENT_TYPE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021294 CHECK  ( PGH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
FIN_C0021295 CHECK  ( PGH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006723 CHECK  ( PGH_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006724 CHECK  ( PGH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006725 CHECK  ( PGH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006726 CHECK  ( PGH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PAY_GEN_HEADER ADD CONSTRAINT 
SYS_C006727 CHECK  ( PGH_DOC_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_PAY_GEN_HEADER_01 ON 
  FT_PAY_GEN_HEADER(PGH_COMP_CODE, PGH_DOC_NO, PGH_TRAN_CODE) 

/

/
CREATE TABLE FT_PDC ( 
  PDC_SEQ_NO                  NUMBER (10)   NOT NULL, 
  PDC_COMP_CODE               VARCHAR2 (3), 
  PDC_CHQ_NO                  VARCHAR2 (10), 
  PDC_BANK_ACNT_CODE          VARCHAR2 (6), 
  PDC_BANK_NAME               VARCHAR2 (30), 
  PDC_BANK_SUB_ACNT_CODE      VARCHAR2 (6), 
  PDC_BANK_DIVN_CODE          VARCHAR2 (6), 
  PDC_BANK_DEPT_CODE          VARCHAR2 (6), 
  PDC_BANK_ANLY_CODE_1        VARCHAR2 (6), 
  PDC_BANK_ANLY_CODE_2        VARCHAR2 (6), 
  PDC_BANK_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  PDC_BANK_HEAD_NO_1          NUMBER (1), 
  PDC_BANK_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  PDC_BANK_HEAD_NO_2          NUMBER (1), 
  PDC_BANK_CURR_CODE          VARCHAR2 (3), 
  PDC_BANK_FC_AMT             NUMBER (14,3), 
  PDC_DEPOSIT_BANK            VARCHAR2 (10), 
  PDC_DOC_NO                  NUMBER (6), 
  PDC_DOC_DT                  DATE, 
  PDC_DOC_CAL_YEAR            NUMBER (4), 
  PDC_DOC_CAL_MONTH           NUMBER (2), 
  PDC_DUE_DT                  DATE, 
  PDC_DIVN_CODE               VARCHAR2 (6), 
  PDC_DEPT_CODE               VARCHAR2 (6), 
  PDC_MAIN_ACNT_CODE          VARCHAR2 (6), 
  PDC_SUB_ACNT_CODE           VARCHAR2 (6), 
  PDC_HEAD_NO_1               NUMBER (1), 
  PDC_ANLY_CODE_1             VARCHAR2 (6), 
  PDC_HEAD_NO_2               NUMBER (1), 
  PDC_ANLY_CODE_2             VARCHAR2 (6), 
  PDC_ACTY_CODE_1             VARCHAR2 (6), 
  PDC_ACTY_CODE_2             VARCHAR2 (6), 
  PDC_CURR_CODE               VARCHAR2 (3), 
  PDC_FC_AMT                  NUMBER (14,3), 
  PDC_LC_AMT                  NUMBER (14,3), 
  PDC_NAME                    VARCHAR2 (30), 
  PDC_REF                     VARCHAR2 (15), 
  PDC_STATUS                  VARCHAR2 (1)  DEFAULT 'P', 
  PDC_TYPE_FLAG               VARCHAR2 (1)  DEFAULT 'I', 
  PDC_REF_TRAN_CODE           VARCHAR2 (3), 
  PDC_REF_ACNT_YEAR           NUMBER (2), 
  PDC_REF_DOC_NO              NUMBER (6), 
  PDC_REF_SEQ_NO              NUMBER (3), 
  PDC_REF_DOC_DT              DATE, 
  PDC_CDISC_TRAN_CODE         VARCHAR2 (3), 
  PDC_CDISC_DOC_NO            NUMBER (6), 
  PDC_FC_CDISC_AMT            NUMBER (14,3), 
  PDC_LC_CDISC_AMT            NUMBER (14,3), 
  PDC_CDISC_ACNT_YEAR         NUMBER (2), 
  PDC_CR_UID                  VARCHAR2 (10)  DEFAULT 'TEST1', 
  PDC_CR_DT                   DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_PDC_01
  PRIMARY KEY ( PDC_SEQ_NO ) ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_06 CHECK  ( PDC_DOC_NO > 0  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_02 CHECK  ( NVL(PDC_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_03 CHECK  ( NVL(PDC_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_04 CHECK  ( PDC_STATUS IN ('P','C','X')  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_01 CHECK  ( PDC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_02 CHECK  ( PDC_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_03 CHECK  ( PDC_STATUS IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_04 CHECK  ( PDC_TYPE_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_05 CHECK  ( PDC_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_NN_06 CHECK  ( PDC_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018597 CHECK  ( PDC_CHQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018598 CHECK  ( PDC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018599 CHECK  ( PDC_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018600 CHECK  ( PDC_STATUS IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018601 CHECK  ( PDC_TYPE_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018602 CHECK  ( PDC_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
FIN_C0018603 CHECK  ( PDC_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006767 CHECK  ( PDC_CHQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006769 CHECK  ( PDC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006770 CHECK  ( PDC_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006771 CHECK  ( PDC_STATUS IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006772 CHECK  ( PDC_TYPE_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006773 CHECK  ( PDC_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
SYS_C006774 CHECK  ( PDC_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_05 CHECK  ( PDC_TYPE_FLAG IN ('R','I','U')  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_07 CHECK  ( PDC_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_PDC ADD CONSTRAINT 
PDC_CHK_08 CHECK  ( PDC_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_PDC" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_PDC REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_PDC_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_PDC_CHQ_NO            VARCHAR2(1) := NULL;
 NEW_PDC_BANK_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_PDC_BANK_SUB_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_PDC_BANK_DIVN_CODE        VARCHAR2(1) := NULL;
 NEW_PDC_BANK_DEPT_CODE        VARCHAR2(1) := NULL;
 NEW_PDC_BANK_HEAD_NO_1        NUMBER(1) := NULL;
 NEW_PDC_BANK_ANLY_CODE_1      VARCHAR2(1) := NULL;
 NEW_PDC_BANK_HEAD_NO_2        NUMBER(1) := NULL;
 NEW_PDC_BANK_ANLY_CODE_2      VARCHAR2(1) := NULL;
 NEW_PDC_BANK_ACTY_VALUE_CODE_1 VARCHAR2(1) := NULL;
 NEW_PDC_BANK_ACTY_VALUE_CODE_2 VARCHAR2(1) := NULL;
 NEW_PDC_BANK_CURR_CODE         VARCHAR2(1) := NULL;
 NEW_PDC_BANK_FC_AMT            NUMBER(1) := NULL;
 NEW_PDC_BANK_NAME         VARCHAR2(1) := NULL;
 NEW_PDC_DEPOSIT_BANK      VARCHAR2(1) := NULL;
 NEW_PDC_DOC_NO            NUMBER(1) := NULL;
 NEW_PDC_DOC_DT            DATE        := NULL;
 NEW_PDC_DOC_CAL_YEAR      NUMBER(1) := NULL;
 NEW_PDC_DOC_CAL_MONTH     NUMBER(1) := NULL;
 NEW_PDC_DUE_DT            DATE        := NULL;
 NEW_PDC_DIVN_CODE         VARCHAR2(1) := NULL;
 NEW_PDC_DEPT_CODE         VARCHAR2(1) := NULL;
 NEW_PDC_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_PDC_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_PDC_HEAD_NO_1         NUMBER(1) := NULL;
 NEW_PDC_ANLY_CODE_1       VARCHAR2(1) := NULL;
 NEW_PDC_HEAD_NO_2         NUMBER(1) := NULL;
 NEW_PDC_ANLY_CODE_2       VARCHAR2(1) := NULL;
 NEW_PDC_ACTY_CODE_1       VARCHAR2(1) := NULL;
 NEW_PDC_ACTY_CODE_2       VARCHAR2(1) := NULL;
 NEW_PDC_CURR_CODE         VARCHAR2(1) := NULL;
 NEW_PDC_FC_AMT            NUMBER(1) := NULL;
 NEW_PDC_LC_AMT            NUMBER(1) := NULL;
 NEW_PDC_NAME              VARCHAR2(1) := NULL;
 NEW_PDC_REF               VARCHAR2(1) := NULL;
 NEW_PDC_STATUS            VARCHAR2(1) := NULL;
 NEW_PDC_TYPE_FLAG         VARCHAR2(1) := NULL;
 NEW_PDC_REF_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_PDC_REF_ACNT_YEAR     NUMBER(1) := NULL;
 NEW_PDC_REF_DOC_NO        NUMBER(1) := NULL;
 NEW_PDC_REF_SEQ_NO        NUMBER(1) := NULL;
 NEW_PDC_REF_DOC_DT        DATE        := NULL;
 NEW_PDC_CDISC_TRAN_CODE   VARCHAR2(1) := NULL;
 NEW_PDC_CDISC_DOC_NO      NUMBER(1) := NULL;
 NEW_PDC_FC_CDISC_AMT      NUMBER(1) := NULL;
 NEW_PDC_LC_CDISC_AMT      NUMBER(1) := NULL;
 NEW_PDC_CDISC_ACNT_YEAR   NUMBER(1) := NULL;
 NEW_PDC_CR_UID            VARCHAR2(1) := NULL;
 NEW_PDC_CR_DT             DATE        := NULL;
 NEW_PDC_SEQ_NO            NUMBER(10)  := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_PDC (
         :OLD.PDC_COMP_CODE,
         :OLD.PDC_CHQ_NO,
         :OLD.PDC_BANK_ACNT_CODE,
         :OLD.PDC_BANK_SUB_ACNT_CODE,
         :OLD.PDC_BANK_DIVN_CODE,
         :OLD.PDC_BANK_DEPT_CODE,
         :OLD.PDC_BANK_HEAD_NO_1,
         :OLD.PDC_BANK_ANLY_CODE_1,
         :OLD.PDC_BANK_HEAD_NO_2,
         :OLD.PDC_BANK_ANLY_CODE_2,
         :OLD.PDC_BANK_ACTY_VALUE_CODE_1,
         :OLD.PDC_BANK_ACTY_VALUE_CODE_2,
         :OLD.PDC_BANK_CURR_CODE,
         :OLD.PDC_BANK_FC_AMT,
         :OLD.PDC_BANK_NAME,
         :OLD.PDC_DEPOSIT_BANK,
         :OLD.PDC_DOC_NO,
         :OLD.PDC_DOC_DT,
         :OLD.PDC_DOC_CAL_YEAR,
         :OLD.PDC_DOC_CAL_MONTH,
         :OLD.PDC_DUE_DT,
         :OLD.PDC_DIVN_CODE,
         :OLD.PDC_DEPT_CODE,
         :OLD.PDC_MAIN_ACNT_CODE,
         :OLD.PDC_SUB_ACNT_CODE,
         :OLD.PDC_HEAD_NO_1,
         :OLD.PDC_ANLY_CODE_1,
         :OLD.PDC_HEAD_NO_2,
         :OLD.PDC_ANLY_CODE_2,
         :OLD.PDC_ACTY_CODE_1,
         :OLD.PDC_ACTY_CODE_2,
         :OLD.PDC_CURR_CODE,
         :OLD.PDC_FC_AMT,
         :OLD.PDC_LC_AMT,
         :OLD.PDC_NAME,
         :OLD.PDC_REF,
         :OLD.PDC_STATUS,
         :OLD.PDC_TYPE_FLAG,
         :OLD.PDC_REF_TRAN_CODE,
         :OLD.PDC_REF_ACNT_YEAR,
         :OLD.PDC_REF_DOC_NO,
         :OLD.PDC_REF_SEQ_NO,
         :OLD.PDC_REF_DOC_DT,
         :OLD.PDC_CDISC_TRAN_CODE,
         :OLD.PDC_CDISC_DOC_NO,
         :OLD.PDC_FC_CDISC_AMT,
         :OLD.PDC_LC_CDISC_AMT,
         :OLD.PDC_CDISC_ACNT_YEAR,
         :OLD.PDC_CR_UID,
         :OLD.PDC_CR_DT,
         :NEW.PDC_COMP_CODE,
         :NEW.PDC_CHQ_NO,
         :NEW.PDC_BANK_ACNT_CODE,
         :NEW.PDC_BANK_SUB_ACNT_CODE,
         :NEW.PDC_BANK_DIVN_CODE,
         :NEW.PDC_BANK_DEPT_CODE,
         :NEW.PDC_BANK_HEAD_NO_1,
         :NEW.PDC_BANK_ANLY_CODE_1,
         :NEW.PDC_BANK_HEAD_NO_2,
         :NEW.PDC_BANK_ANLY_CODE_2,
         :NEW.PDC_BANK_ACTY_VALUE_CODE_1,
         :NEW.PDC_BANK_ACTY_VALUE_CODE_2,
         :NEW.PDC_BANK_CURR_CODE,
         :NEW.PDC_BANK_FC_AMT,
         :NEW.PDC_BANK_NAME,
         :NEW.PDC_DEPOSIT_BANK,
         :NEW.PDC_DOC_NO,
         :NEW.PDC_DOC_DT,
         :NEW.PDC_DOC_CAL_YEAR,
         :NEW.PDC_DOC_CAL_MONTH,
         :NEW.PDC_DUE_DT,
         :NEW.PDC_DIVN_CODE,
         :NEW.PDC_DEPT_CODE,
         :NEW.PDC_MAIN_ACNT_CODE,
         :NEW.PDC_SUB_ACNT_CODE,
         :NEW.PDC_HEAD_NO_1,
         :NEW.PDC_ANLY_CODE_1,
         :NEW.PDC_HEAD_NO_2,
         :NEW.PDC_ANLY_CODE_2,
         :NEW.PDC_ACTY_CODE_1,
         :NEW.PDC_ACTY_CODE_2,
         :NEW.PDC_CURR_CODE,
         :NEW.PDC_FC_AMT,
         :NEW.PDC_LC_AMT,
         :NEW.PDC_NAME,
         :NEW.PDC_REF,
         :NEW.PDC_STATUS,
         :NEW.PDC_TYPE_FLAG,
         :NEW.PDC_REF_TRAN_CODE,
         :NEW.PDC_REF_ACNT_YEAR,
         :NEW.PDC_REF_DOC_NO,
         :NEW.PDC_REF_SEQ_NO,
         :NEW.PDC_REF_DOC_DT,
         :NEW.PDC_CDISC_TRAN_CODE,
         :NEW.PDC_CDISC_DOC_NO,
         :NEW.PDC_FC_CDISC_AMT,
         :NEW.PDC_LC_CDISC_AMT,
         :NEW.PDC_CDISC_ACNT_YEAR,
         :NEW.PDC_CR_UID,
         :NEW.PDC_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.PDC_SEQ_NO,
         :NEW.PDC_SEQ_NO);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_PDC (
         :OLD.PDC_COMP_CODE,
         :OLD.PDC_CHQ_NO,
         :OLD.PDC_BANK_ACNT_CODE,
         :OLD.PDC_BANK_SUB_ACNT_CODE,
         :OLD.PDC_BANK_DIVN_CODE,
         :OLD.PDC_BANK_DEPT_CODE,
         :OLD.PDC_BANK_HEAD_NO_1,
         :OLD.PDC_BANK_ANLY_CODE_1,
         :OLD.PDC_BANK_HEAD_NO_2,
         :OLD.PDC_BANK_ANLY_CODE_2,
         :OLD.PDC_BANK_ACTY_VALUE_CODE_1,
         :OLD.PDC_BANK_ACTY_VALUE_CODE_2,
         :OLD.PDC_BANK_CURR_CODE,
         :OLD.PDC_BANK_FC_AMT,
         :OLD.PDC_BANK_NAME,
         :OLD.PDC_DEPOSIT_BANK,
         :OLD.PDC_DOC_NO,
         :OLD.PDC_DOC_DT,
         :OLD.PDC_DOC_CAL_YEAR,
         :OLD.PDC_DOC_CAL_MONTH,
         :OLD.PDC_DUE_DT,
         :OLD.PDC_DIVN_CODE,
         :OLD.PDC_DEPT_CODE,
         :OLD.PDC_MAIN_ACNT_CODE,
         :OLD.PDC_SUB_ACNT_CODE,
         :OLD.PDC_HEAD_NO_1,
         :OLD.PDC_ANLY_CODE_1,
         :OLD.PDC_HEAD_NO_2,
         :OLD.PDC_ANLY_CODE_2,
         :OLD.PDC_ACTY_CODE_1,
         :OLD.PDC_ACTY_CODE_2,
         :OLD.PDC_CURR_CODE,
         :OLD.PDC_FC_AMT,
         :OLD.PDC_LC_AMT,
         :OLD.PDC_NAME,
         :OLD.PDC_REF,
         :OLD.PDC_STATUS,
         :OLD.PDC_TYPE_FLAG,
         :OLD.PDC_REF_TRAN_CODE,
         :OLD.PDC_REF_ACNT_YEAR,
         :OLD.PDC_REF_DOC_NO,
         :OLD.PDC_REF_SEQ_NO,
         :OLD.PDC_REF_DOC_DT,
         :OLD.PDC_CDISC_TRAN_CODE,
         :OLD.PDC_CDISC_DOC_NO,
         :OLD.PDC_FC_CDISC_AMT,
         :OLD.PDC_LC_CDISC_AMT,
         :OLD.PDC_CDISC_ACNT_YEAR,
         :OLD.PDC_CR_UID,
         :OLD.PDC_CR_DT,
         NEW_PDC_COMP_CODE,
         NEW_PDC_CHQ_NO,
         NEW_PDC_BANK_ACNT_CODE,
         NEW_PDC_BANK_SUB_ACNT_CODE,
         NEW_PDC_BANK_DIVN_CODE,
         NEW_PDC_BANK_DEPT_CODE,
         NEW_PDC_BANK_HEAD_NO_1,
         NEW_PDC_BANK_ANLY_CODE_1,
         NEW_PDC_BANK_HEAD_NO_2,
         NEW_PDC_BANK_ANLY_CODE_2,
         NEW_PDC_BANK_ACTY_VALUE_CODE_1,
         NEW_PDC_BANK_ACTY_VALUE_CODE_2,
         NEW_PDC_BANK_CURR_CODE,
         NEW_PDC_BANK_FC_AMT,
         NEW_PDC_BANK_NAME,
         NEW_PDC_DEPOSIT_BANK,
         NEW_PDC_DOC_NO,
         NEW_PDC_DOC_DT,
         NEW_PDC_DOC_CAL_YEAR,
         NEW_PDC_DOC_CAL_MONTH,
         NEW_PDC_DUE_DT,
         NEW_PDC_DIVN_CODE,
         NEW_PDC_DEPT_CODE,
         NEW_PDC_MAIN_ACNT_CODE,
         NEW_PDC_SUB_ACNT_CODE,
         NEW_PDC_HEAD_NO_1,
         NEW_PDC_ANLY_CODE_1,
         NEW_PDC_HEAD_NO_2,
         NEW_PDC_ANLY_CODE_2,
         NEW_PDC_ACTY_CODE_1,
         NEW_PDC_ACTY_CODE_2,
         NEW_PDC_CURR_CODE,
         NEW_PDC_FC_AMT,
         NEW_PDC_LC_AMT,
         NEW_PDC_NAME,
         NEW_PDC_REF,
         NEW_PDC_STATUS,
         NEW_PDC_TYPE_FLAG,
         NEW_PDC_REF_TRAN_CODE,
         NEW_PDC_REF_ACNT_YEAR,
         NEW_PDC_REF_DOC_NO,
         NEW_PDC_REF_SEQ_NO,
         NEW_PDC_REF_DOC_DT,
         NEW_PDC_CDISC_TRAN_CODE,
         NEW_PDC_CDISC_DOC_NO,
         NEW_PDC_FC_CDISC_AMT,
         NEW_PDC_LC_CDISC_AMT,
         NEW_PDC_CDISC_ACNT_YEAR,
         NEW_PDC_CR_UID,
         NEW_PDC_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG,
         :OLD.PDC_SEQ_NO,
         :NEW.PDC_SEQ_NO);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_PDC_OS ( 
  POS_PDC_SEQ_NO      NUMBER (10), 
  POS_KEY_NO          NUMBER (8)    NOT NULL, 
  POS_COMP_CODE       VARCHAR2 (3), 
  POS_PDC_CHQ_NO      VARCHAR2 (10), 
  POS_MAIN_ACNT_CODE  VARCHAR2 (6), 
  POS_SUB_ACNT_CODE   VARCHAR2 (6), 
  POS_CURR_CODE       VARCHAR2 (3), 
  POS_LC_AMT          NUMBER (14,3), 
  POS_FC_AMT          NUMBER (14,3), 
  POS_DRCR_FLAG       VARCHAR2 (1)  DEFAULT 'C', 
  POS_REF_DUE_DT      DATE, 
  POS_REF_KEY_NO      NUMBER (8), 
  POS_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  POS_CR_DT           DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_POS_01
  PRIMARY KEY ( POS_KEY_NO ) ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_NN_04 CHECK  ( POS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0018605 CHECK  ( POS_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_NN_03 CHECK  ( POS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006793 CHECK  ( POS_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006794 CHECK  ( POS_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006795 CHECK  ( POS_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006796 CHECK  ( POS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006797 CHECK  ( POS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
SYS_C006798 CHECK  ( POS_PDC_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_CHK_01 CHECK  ( NVL(POS_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_CHK_02 CHECK  ( NVL(POS_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_CHK_03 CHECK  ( POS_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_NN_01 CHECK  ( POS_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
POS_NN_02 CHECK  ( POS_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0018606 CHECK  ( POS_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0018607 CHECK  ( POS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0018608 CHECK  ( POS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0022210 CHECK  ( POS_PDC_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PDC_OS ADD CONSTRAINT 
FIN_C0018604 CHECK  ( POS_KEY_NO IS NOT NULL  ) 
/




CREATE INDEX FNX_PDC_OS_01 ON 
  FT_PDC_OS(POS_COMP_CODE, POS_PDC_CHQ_NO) 

CREATE INDEX NUX_FT_PDC_OS_01 ON 
  FT_PDC_OS(POS_PDC_SEQ_NO) 

CREATE INDEX NUX_FT_PDC_OS_02 ON 
  FT_PDC_OS(POS_REF_KEY_NO) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_PDC_OS
BEFORE INSERT OR UPDATE OR DELETE ON FT_PDC_OS
FOR EACH ROW
DECLARE
 NEW_POS_KEY_NO            NUMBER(1) := NULL;
 NEW_POS_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_POS_PDC_CHQ_NO        VARCHAR2(1) := NULL;
 NEW_POS_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_POS_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_POS_CURR_CODE         VARCHAR2(1) := NULL;
 NEW_POS_LC_AMT            NUMBER(1) := NULL;
 NEW_POS_FC_AMT            NUMBER(1) := NULL;
 NEW_POS_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_POS_REF_DUE_DT        DATE        := NULL;
 NEW_POS_REF_KEY_NO        NUMBER(1) := NULL;
 NEW_POS_CR_UID            VARCHAR2(1) := NULL;
 NEW_POS_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_PDC_OS (
         :OLD.POS_KEY_NO,
         :OLD.POS_COMP_CODE,
         :OLD.POS_PDC_CHQ_NO,
         :OLD.POS_MAIN_ACNT_CODE,
         :OLD.POS_SUB_ACNT_CODE,
         :OLD.POS_CURR_CODE,
         :OLD.POS_LC_AMT,
         :OLD.POS_FC_AMT,
         :OLD.POS_DRCR_FLAG,
         :OLD.POS_REF_DUE_DT,
         :OLD.POS_REF_KEY_NO,
         :OLD.POS_CR_UID,
         :OLD.POS_CR_DT,
         :NEW.POS_KEY_NO,
         :NEW.POS_COMP_CODE,
         :NEW.POS_PDC_CHQ_NO,
         :NEW.POS_MAIN_ACNT_CODE,
         :NEW.POS_SUB_ACNT_CODE,
         :NEW.POS_CURR_CODE,
         :NEW.POS_LC_AMT,
         :NEW.POS_FC_AMT,
         :NEW.POS_DRCR_FLAG,
         :NEW.POS_REF_DUE_DT,
         :NEW.POS_REF_KEY_NO,
         :NEW.POS_CR_UID,
         :NEW.POS_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_PDC_OS (
         :OLD.POS_KEY_NO,
         :OLD.POS_COMP_CODE,
         :OLD.POS_PDC_CHQ_NO,
         :OLD.POS_MAIN_ACNT_CODE,
         :OLD.POS_SUB_ACNT_CODE,
         :OLD.POS_CURR_CODE,
         :OLD.POS_LC_AMT,
         :OLD.POS_FC_AMT,
         :OLD.POS_DRCR_FLAG,
         :OLD.POS_REF_DUE_DT,
         :OLD.POS_REF_KEY_NO,
         :OLD.POS_CR_UID,
         :OLD.POS_CR_DT,
         NEW_POS_KEY_NO,
         NEW_POS_COMP_CODE,
         NEW_POS_PDC_CHQ_NO,
         NEW_POS_MAIN_ACNT_CODE,
         NEW_POS_SUB_ACNT_CODE,
         NEW_POS_CURR_CODE,
         NEW_POS_LC_AMT,
         NEW_POS_FC_AMT,
         NEW_POS_DRCR_FLAG,
         NEW_POS_REF_DUE_DT,
         NEW_POS_REF_KEY_NO,
         NEW_POS_CR_UID,
         NEW_POS_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_PRV_TRANS_DETAIL ( 
  TD_COMP_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_ACNT_YEAR              NUMBER (2)    NOT NULL, 
  TD_TRAN_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_DOC_NO                 NUMBER (6)    NOT NULL, 
  TD_SEQ_NO                 NUMBER (3)    NOT NULL, 
  TD_MAIN_ACNT_CODE         VARCHAR2 (6), 
  TD_SUB_ACNT_CODE          VARCHAR2 (6), 
  TD_DIVN_CODE              VARCHAR2 (6), 
  TD_DEPT_CODE              VARCHAR2 (6), 
  TD_HEAD_NO_1              NUMBER (1), 
  TD_ANLY_CODE_1            VARCHAR2 (6), 
  TD_HEAD_NO_2              NUMBER (1), 
  TD_ANLY_CODE_2            VARCHAR2 (6), 
  TD_CURR_CODE              VARCHAR2 (3), 
  TD_DOC_AMT                NUMBER (14,3), 
  TD_DOC_DRCR_FLAG          VARCHAR2 (1), 
  TD_FC_AMT                 NUMBER (14,3), 
  TD_DOC_REF                VARCHAR2 (15), 
  TD_DOC_DUE_DT             DATE, 
  TD_OTH_REF                VARCHAR2 (15), 
  TD_ACTY_VALUE_CODE_1      VARCHAR2 (6), 
  TD_ACTY_VALUE_CODE_2      VARCHAR2 (6), 
  TD_DESC                   VARCHAR2 (2000), 
  TD_DBK_PRINT_FLAG         VARCHAR2 (1), 
  TD_LED_PRINT_FLAG         VARCHAR2 (1), 
  TD_MONTH_PRC_FLAG         VARCHAR2 (1), 
  TD_BILL_FC_AMT            NUMBER (14,3), 
  TD_BILL_LC_AMT            NUMBER (14,3), 
  TD_BILL_STATUS            VARCHAR2 (1), 
  TD_PYMT_APPR_FLAG         VARCHAR2 (1), 
  TD_CR_UID                 VARCHAR2 (10), 
  TD_CR_DT                  DATE, 
  TD_PYMT_LAST_APPR_FC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_LC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_BANK    VARCHAR2 (6), 
  CONSTRAINT PK_TD_PRV_01
  PRIMARY KEY ( TD_COMP_CODE, TD_ACNT_YEAR, TD_TRAN_CODE, TD_DOC_NO, TD_SEQ_NO ) ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_01 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_06 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006851 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006852 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006853 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006854 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018621 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006831 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006832 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006833 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006834 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006835 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006836 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006837 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006838 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006839 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006840 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_07 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_08 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006844 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006845 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006846 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006847 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006848 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006849 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006850 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_06 CHECK  ( TD_MONTH_PRC_FLAG IN ('Y','N', 'O', 'o')  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_07 CHECK  ( td_pymt_appr_flag in ('0','1','2','3')  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_08 CHECK  (  TD_ACTY_VALUE_CODE_1  IS  NOT  NULL  OR TD_ACTY_VALUE_CODE_2 IS NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_02 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_03 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_04 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_NN_05 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018609 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018610 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018611 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018612 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018613 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018614 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018615 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018616 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018617 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018618 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018619 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018620 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006800 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006801 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006802 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006803 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006804 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_01 CHECK  ( NVL(TD_DOC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_02 CHECK  ( NVL(TD_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_03 CHECK  ( TD_DOC_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_04 CHECK  ( TD_DBK_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD CONSTRAINT 
TD_PRV_CHK_05 CHECK  ( TD_LED_PRINT_FLAG IN ('Y','N')  ) 
/




CREATE INDEX NUX_FT_PRV_TRANS_DETAIL_01 ON 
  FT_PRV_TRANS_DETAIL(TD_COMP_CODE, TD_TRAN_CODE, TD_DOC_NO, TD_SEQ_NO) 

CREATE INDEX NUX_FT_PRV_TRANS_DETAIL_02 ON 
  FT_PRV_TRANS_DETAIL(TD_COMP_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 

CREATE INDEX P_REP_TD_MAIN_SUB_AC ON 
  FT_PRV_TRANS_DETAIL(TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_PRV_TRANS_DETAIL" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_PRV_TRANS_DETAIL REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_TD_COMP_CODE             VARCHAR2(1) := NULL;
 NEW_TD_ACNT_YEAR             NUMBER(1) := NULL;
 NEW_TD_TRAN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_NO                NUMBER(1) := NULL;
 NEW_TD_SEQ_NO                NUMBER(1) := NULL;
 NEW_TD_MAIN_ACNT_CODE        VARCHAR2(1) := NULL;
 NEW_TD_SUB_ACNT_CODE         VARCHAR2(1) := NULL;
 NEW_TD_DIVN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DEPT_CODE             VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_1             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_1           VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_2             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_2           VARCHAR2(1) := NULL;
 NEW_TD_CURR_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_AMT               NUMBER(1) := NULL;
 NEW_TD_DOC_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_TD_FC_AMT                NUMBER(1) := NULL;
 NEW_TD_DOC_REF               VARCHAR2(1) := NULL;
 NEW_TD_DOC_DUE_DT            DATE        := NULL;
 NEW_TD_OTH_REF               VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_1     VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_2     VARCHAR2(1) := NULL;
 NEW_TD_DESC                  VARCHAR2(1) := NULL;
 NEW_TD_DBK_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_LED_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_MONTH_PRC_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_BILL_FC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_LC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_STATUS           VARCHAR2(1) := NULL;
 NEW_TD_PYMT_APPR_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_CR_UID                VARCHAR2(1) := NULL;
 NEW_TD_CR_DT                 DATE        := NULL;
 NEW_TD_PYMT_LAST_APPR_FC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_LC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_BANK   VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_PRV_TRANS_DETAIL (
         :OLD.TD_COMP_CODE,
         :OLD.TD_ACNT_YEAR,
         :OLD.TD_TRAN_CODE,
         :OLD.TD_DOC_NO,
         :OLD.TD_SEQ_NO,
         :OLD.TD_MAIN_ACNT_CODE,
         :OLD.TD_SUB_ACNT_CODE,
         :OLD.TD_DIVN_CODE,
         :OLD.TD_DEPT_CODE,
         :OLD.TD_HEAD_NO_1,
         :OLD.TD_ANLY_CODE_1,
         :OLD.TD_HEAD_NO_2,
         :OLD.TD_ANLY_CODE_2,
         :OLD.TD_CURR_CODE,
         :OLD.TD_DOC_AMT,
         :OLD.TD_DOC_DRCR_FLAG,
         :OLD.TD_FC_AMT,
         :OLD.TD_DOC_REF,
         :OLD.TD_DOC_DUE_DT,
         :OLD.TD_OTH_REF,
         :OLD.TD_ACTY_VALUE_CODE_1,
         :OLD.TD_ACTY_VALUE_CODE_2,
         :OLD.TD_DESC,
         :OLD.TD_DBK_PRINT_FLAG,
         :OLD.TD_LED_PRINT_FLAG,
         :OLD.TD_MONTH_PRC_FLAG,
         :OLD.TD_BILL_FC_AMT,
         :OLD.TD_BILL_LC_AMT,
         :OLD.TD_BILL_STATUS,
         :OLD.TD_PYMT_APPR_FLAG,
         :OLD.TD_CR_UID,
         :OLD.TD_CR_DT,
         :OLD.TD_PYMT_LAST_APPR_FC_AMT,
         :OLD.TD_PYMT_LAST_APPR_LC_AMT,
         :OLD.TD_PYMT_LAST_APPR_BANK,
         :NEW.TD_COMP_CODE,
         :NEW.TD_ACNT_YEAR,
         :NEW.TD_TRAN_CODE,
         :NEW.TD_DOC_NO,
         :NEW.TD_SEQ_NO,
         :NEW.TD_MAIN_ACNT_CODE,
         :NEW.TD_SUB_ACNT_CODE,
         :NEW.TD_DIVN_CODE,
         :NEW.TD_DEPT_CODE,
         :NEW.TD_HEAD_NO_1,
         :NEW.TD_ANLY_CODE_1,
         :NEW.TD_HEAD_NO_2,
         :NEW.TD_ANLY_CODE_2,
         :NEW.TD_CURR_CODE,
         :NEW.TD_DOC_AMT,
         :NEW.TD_DOC_DRCR_FLAG,
         :NEW.TD_FC_AMT,
         :NEW.TD_DOC_REF,
         :NEW.TD_DOC_DUE_DT,
         :NEW.TD_OTH_REF,
         :NEW.TD_ACTY_VALUE_CODE_1,
         :NEW.TD_ACTY_VALUE_CODE_2,
         :NEW.TD_DESC,
         :NEW.TD_DBK_PRINT_FLAG,
         :NEW.TD_LED_PRINT_FLAG,
         :NEW.TD_MONTH_PRC_FLAG,
         :NEW.TD_BILL_FC_AMT,
         :NEW.TD_BILL_LC_AMT,
         :NEW.TD_BILL_STATUS,
         :NEW.TD_PYMT_APPR_FLAG,
         :NEW.TD_CR_UID,
         :NEW.TD_CR_DT,
         :NEW.TD_PYMT_LAST_APPR_FC_AMT,
         :NEW.TD_PYMT_LAST_APPR_LC_AMT,
         :NEW.TD_PYMT_LAST_APPR_BANK,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_PRV_TRANS_DETAIL (
         :OLD.TD_COMP_CODE,
         :OLD.TD_ACNT_YEAR,
         :OLD.TD_TRAN_CODE,
         :OLD.TD_DOC_NO,
         :OLD.TD_SEQ_NO,
         :OLD.TD_MAIN_ACNT_CODE,
         :OLD.TD_SUB_ACNT_CODE,
         :OLD.TD_DIVN_CODE,
         :OLD.TD_DEPT_CODE,
         :OLD.TD_HEAD_NO_1,
         :OLD.TD_ANLY_CODE_1,
         :OLD.TD_HEAD_NO_2,
         :OLD.TD_ANLY_CODE_2,
         :OLD.TD_CURR_CODE,
         :OLD.TD_DOC_AMT,
         :OLD.TD_DOC_DRCR_FLAG,
         :OLD.TD_FC_AMT,
         :OLD.TD_DOC_REF,
         :OLD.TD_DOC_DUE_DT,
         :OLD.TD_OTH_REF,
         :OLD.TD_ACTY_VALUE_CODE_1,
         :OLD.TD_ACTY_VALUE_CODE_2,
         :OLD.TD_DESC,
         :OLD.TD_DBK_PRINT_FLAG,
         :OLD.TD_LED_PRINT_FLAG,
         :OLD.TD_MONTH_PRC_FLAG,
         :OLD.TD_BILL_FC_AMT,
         :OLD.TD_BILL_LC_AMT,
         :OLD.TD_BILL_STATUS,
         :OLD.TD_PYMT_APPR_FLAG,
         :OLD.TD_CR_UID,
         :OLD.TD_CR_DT,
         :OLD.TD_PYMT_LAST_APPR_FC_AMT,
         :OLD.TD_PYMT_LAST_APPR_LC_AMT,
         :OLD.TD_PYMT_LAST_APPR_BANK,
         NEW_TD_COMP_CODE,
         NEW_TD_ACNT_YEAR,
         NEW_TD_TRAN_CODE,
         NEW_TD_DOC_NO,
         NEW_TD_SEQ_NO,
         NEW_TD_MAIN_ACNT_CODE,
         NEW_TD_SUB_ACNT_CODE,
         NEW_TD_DIVN_CODE,
         NEW_TD_DEPT_CODE,
         NEW_TD_HEAD_NO_1,
         NEW_TD_ANLY_CODE_1,
         NEW_TD_HEAD_NO_2,
         NEW_TD_ANLY_CODE_2,
         NEW_TD_CURR_CODE,
         NEW_TD_DOC_AMT,
         NEW_TD_DOC_DRCR_FLAG,
         NEW_TD_FC_AMT,
         NEW_TD_DOC_REF,
         NEW_TD_DOC_DUE_DT,
         NEW_TD_OTH_REF,
         NEW_TD_ACTY_VALUE_CODE_1,
         NEW_TD_ACTY_VALUE_CODE_2,
         NEW_TD_DESC,
         NEW_TD_DBK_PRINT_FLAG,
         NEW_TD_LED_PRINT_FLAG,
         NEW_TD_MONTH_PRC_FLAG,
         NEW_TD_BILL_FC_AMT,
         NEW_TD_BILL_LC_AMT,
         NEW_TD_BILL_STATUS,
         NEW_TD_PYMT_APPR_FLAG,
         NEW_TD_CR_UID,
         NEW_TD_CR_DT,
         NEW_TD_PYMT_LAST_APPR_FC_AMT,
         NEW_TD_PYMT_LAST_APPR_LC_AMT,
         NEW_TD_PYMT_LAST_APPR_BANK,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_PRV_TRANS_HEADER ( 
  TH_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_ACNT_YEAR      NUMBER (2)    NOT NULL, 
  TH_TRAN_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_DOC_NO         NUMBER (6)    NOT NULL, 
  TH_DOC_DT         DATE, 
  TH_DOC_CAL_YEAR   NUMBER (4), 
  TH_DOC_CAL_MONTH  NUMBER (2), 
  TH_DOC_REF        VARCHAR2 (15), 
  TH_DOC_REF_DT     DATE, 
  TH_DOC_DUE_DT     DATE, 
  TH_DIVN_CODE      VARCHAR2 (6), 
  TH_DEPT_CODE      VARCHAR2 (6), 
  TH_CTL_TOTAL      NUMBER (14,3), 
  TH_DESC           VARCHAR2 (2000), 
  TH_ANNOTATION     VARCHAR2 (2000), 
  TH_CR_UID         VARCHAR2 (10), 
  TH_CR_DT          DATE, 
  CONSTRAINT PK_TH_PRV_01
  PRIMARY KEY ( TH_COMP_CODE, TH_ACNT_YEAR, TH_TRAN_CODE, TH_DOC_NO ) ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_02 CHECK  ( TH_DOC_NO > 0  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_04 CHECK  ( TH_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_05 CHECK  ( TH_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_06 CHECK  ( TH_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_NN_01 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_NN_02 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006877 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006878 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006879 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006880 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006855 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006856 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006857 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006858 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006859 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006860 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006861 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
SYS_C006862 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_01 CHECK  ( NVL(TH_CTL_TOTAL,0) >= 0  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018622 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018623 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018624 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018625 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018626 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018627 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD CONSTRAINT 
TH_PRV_CHK_03 CHECK  ( TH_DOC_DUE_DT >= TH_DOC_DT  ) 
/




CREATE INDEX FT_PRV_TRANS_HEADER_01 ON 
  FT_PRV_TRANS_HEADER(TH_COMP_CODE, TH_ACNT_YEAR, TH_DOC_CAL_MONTH, TH_DOC_CAL_YEAR) 

CREATE INDEX NUX_FT_PRV_TRANS_HEADER_01 ON 
  FT_PRV_TRANS_HEADER(TH_COMP_CODE, TH_TRAN_CODE, TH_DOC_NO) 

/

CREATE OR REPLACE TRIGGER "FINAL7"."TRG_FT_PRV_TRANS_HEADER" BEFORE INSERT OR DELETE OR UPDATE ON FINAL7.FT_PRV_TRANS_HEADER REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW  
DECLARE
 NEW_TH_COMP_CODE          VARCHAR2(1) := NULL;
 NEW_TH_ACNT_YEAR          NUMBER(1) := NULL;
 NEW_TH_TRAN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DOC_NO             NUMBER(1) := NULL;
 NEW_TH_DOC_DT             DATE        := NULL;
 NEW_TH_DOC_CAL_YEAR       NUMBER(1) := NULL;
 NEW_TH_DOC_CAL_MONTH      NUMBER(1) := NULL;
 NEW_TH_DOC_REF            VARCHAR2(1) := NULL;
 NEW_TH_DOC_REF_DT         DATE        := NULL;
 NEW_TH_DOC_DUE_DT         DATE        := NULL;
 NEW_TH_DIVN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DEPT_CODE          VARCHAR2(1) := NULL;
 NEW_TH_CTL_TOTAL          NUMBER(1) := NULL;
 NEW_TH_DESC               VARCHAR2(1) := NULL;
 NEW_TH_ANNOTATION         VARCHAR2(1) := NULL;
 NEW_TH_CR_UID             VARCHAR2(1) := NULL;
 NEW_TH_CR_DT              DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_PRV_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         :NEW.TH_COMP_CODE,
         :NEW.TH_ACNT_YEAR,
         :NEW.TH_TRAN_CODE,
         :NEW.TH_DOC_NO,
         :NEW.TH_DOC_DT,
         :NEW.TH_DOC_CAL_YEAR,
         :NEW.TH_DOC_CAL_MONTH,
         :NEW.TH_DOC_REF,
         :NEW.TH_DOC_REF_DT,
         :NEW.TH_DOC_DUE_DT,
         :NEW.TH_DIVN_CODE,
         :NEW.TH_DEPT_CODE,
         :NEW.TH_CTL_TOTAL,
         :NEW.TH_DESC,
         :NEW.TH_ANNOTATION,
         :NEW.TH_CR_UID,
         :NEW.TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_PRV_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         NEW_TH_COMP_CODE,
         NEW_TH_ACNT_YEAR,
         NEW_TH_TRAN_CODE,
         NEW_TH_DOC_NO,
         NEW_TH_DOC_DT,
         NEW_TH_DOC_CAL_YEAR,
         NEW_TH_DOC_CAL_MONTH,
         NEW_TH_DOC_REF,
         NEW_TH_DOC_REF_DT,
         NEW_TH_DOC_DUE_DT,
         NEW_TH_DIVN_CODE,
         NEW_TH_DEPT_CODE,
         NEW_TH_CTL_TOTAL,
         NEW_TH_DESC,
         NEW_TH_ANNOTATION,
         NEW_TH_CR_UID,
         NEW_TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;


/

/
CREATE TABLE FT_RECEIPT ( 
  REC_COMP_CODE        VARCHAR2 (3), 
  REC_CHQ_NO           VARCHAR2 (10), 
  REC_BANK_ACNT_CODE   VARCHAR2 (6), 
  REC_BANK_NAME        VARCHAR2 (30), 
  REC_DRAWN_BANK       VARCHAR2 (30), 
  REC_DOC_NO           NUMBER (6), 
  REC_DOC_DT           DATE, 
  REC_DOC_CAL_YEAR     NUMBER (4), 
  REC_DOC_CAL_MONTH    NUMBER (2), 
  REC_DUE_DT           DATE, 
  REC_DIVN_CODE        VARCHAR2 (6), 
  REC_DEPT_CODE        VARCHAR2 (6), 
  REC_MAIN_ACNT_CODE   VARCHAR2 (6), 
  REC_SUB_ACNT_CODE    VARCHAR2 (6), 
  REC_HEAD_NO_1        NUMBER (1), 
  REC_ANLY_CODE_1      VARCHAR2 (6), 
  REC_HEAD_NO_2        NUMBER (1), 
  REC_ANLY_CODE_2      VARCHAR2 (6), 
  REC_ACTY_CODE_1      VARCHAR2 (6), 
  REC_ACTY_CODE_2      VARCHAR2 (6), 
  REC_CURR_CODE        VARCHAR2 (3), 
  REC_FC_AMT           NUMBER (14,3), 
  REC_LC_AMT           NUMBER (14,3), 
  REC_NAME             VARCHAR2 (60), 
  REC_REF              VARCHAR2 (15), 
  REC_CDISC_TRAN_CODE  VARCHAR2 (3), 
  REC_CDISC_DOC_NO     NUMBER (6), 
  REC_FC_CDISC_AMT     NUMBER (14,3), 
  REC_LC_CDISC_AMT     NUMBER (14,3), 
  REC_CDISC_ACNT_YEAR  NUMBER (2), 
  REC_TYPE_FLAG        VARCHAR2 (1), 
  REC_CR_UID           VARCHAR2 (10), 
  REC_CR_DT            DATE ) 
/

/
CREATE TABLE FT_REVERSAL_JV ( 
  RJV_COMP_CODE       VARCHAR2 (3)  NOT NULL, 
  RJV_ORGL_ACNT_YEAR  NUMBER (2)    NOT NULL, 
  RJV_ORGL_TRAN_CODE  VARCHAR2 (3)  NOT NULL, 
  RJV_ORGL_DOC_NO     NUMBER (6)    NOT NULL, 
  RJV_REV_TRAN_CODE   VARCHAR2 (3), 
  RJV_REV_DOC_NO      NUMBER (6), 
  RJV_REV_DOC_DT      DATE, 
  RJV_CR_UID          VARCHAR2 (10)  DEFAULT 'TEST1', 
  RJV_CR_DT           DATE          DEFAULT SYSDATE, 
  RJV_ORGL_DOC_DT     DATE, 
  RJV_REV_DESC        VARCHAR2 (2000), 
  CONSTRAINT PK_RJV_01
  PRIMARY KEY ( RJV_COMP_CODE, RJV_ORGL_ACNT_YEAR, RJV_ORGL_TRAN_CODE, RJV_ORGL_DOC_NO ) ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018631 CHECK  ( RJV_ORGL_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
RJV_CHK_01 CHECK  ( RJV_ORGL_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
RJV_NN_01 CHECK  ( RJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
RJV_NN_02 CHECK  ( RJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006896 CHECK  ( RJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006897 CHECK  ( RJV_ORGL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006882 CHECK  ( RJV_ORGL_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006883 CHECK  ( RJV_ORGL_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006884 CHECK  ( RJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
SYS_C006885 CHECK  ( RJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018632 CHECK  ( RJV_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018633 CHECK  ( RJV_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018628 CHECK  ( RJV_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018629 CHECK  ( RJV_ORGL_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_REVERSAL_JV ADD CONSTRAINT 
FIN_C0018630 CHECK  ( RJV_ORGL_TRAN_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_REVERSAL_JV
BEFORE INSERT OR UPDATE OR DELETE ON FT_REVERSAL_JV
FOR EACH ROW
DECLARE
 NEW_RJV_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_RJV_ORGL_ACNT_YEAR    NUMBER(1) := NULL;
 NEW_RJV_ORGL_TRAN_CODE    VARCHAR2(1) := NULL;
 NEW_RJV_ORGL_DOC_NO       NUMBER(1) := NULL;
 NEW_RJV_REV_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_RJV_REV_DOC_NO        NUMBER(1) := NULL;
 NEW_RJV_REV_DOC_DT        DATE        := NULL;
 NEW_RJV_CR_UID            VARCHAR2(1) := NULL;
 NEW_RJV_CR_DT             DATE        := NULL;
 NEW_RJV_ORGL_DOC_DT       DATE        := NULL;
 NEW_RJV_REV_DESC          VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_REVERSAL_JV (
         :OLD.RJV_COMP_CODE,
         :OLD.RJV_ORGL_ACNT_YEAR,
         :OLD.RJV_ORGL_TRAN_CODE,
         :OLD.RJV_ORGL_DOC_NO,
         :OLD.RJV_REV_TRAN_CODE,
         :OLD.RJV_REV_DOC_NO,
         :OLD.RJV_REV_DOC_DT,
         :OLD.RJV_CR_UID,
         :OLD.RJV_CR_DT,
         :OLD.RJV_ORGL_DOC_DT,
         :OLD.RJV_REV_DESC,
         :NEW.RJV_COMP_CODE,
         :NEW.RJV_ORGL_ACNT_YEAR,
         :NEW.RJV_ORGL_TRAN_CODE,
         :NEW.RJV_ORGL_DOC_NO,
         :NEW.RJV_REV_TRAN_CODE,
         :NEW.RJV_REV_DOC_NO,
         :NEW.RJV_REV_DOC_DT,
         :NEW.RJV_CR_UID,
         :NEW.RJV_CR_DT,
         :NEW.RJV_ORGL_DOC_DT,
         :NEW.RJV_REV_DESC,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_REVERSAL_JV (
         :OLD.RJV_COMP_CODE,
         :OLD.RJV_ORGL_ACNT_YEAR,
         :OLD.RJV_ORGL_TRAN_CODE,
         :OLD.RJV_ORGL_DOC_NO,
         :OLD.RJV_REV_TRAN_CODE,
         :OLD.RJV_REV_DOC_NO,
         :OLD.RJV_REV_DOC_DT,
         :OLD.RJV_CR_UID,
         :OLD.RJV_CR_DT,
         :OLD.RJV_ORGL_DOC_DT,
         :OLD.RJV_REV_DESC,
         NEW_RJV_COMP_CODE,
         NEW_RJV_ORGL_ACNT_YEAR,
         NEW_RJV_ORGL_TRAN_CODE,
         NEW_RJV_ORGL_DOC_NO,
         NEW_RJV_REV_TRAN_CODE,
         NEW_RJV_REV_DOC_NO,
         NEW_RJV_REV_DOC_DT,
         NEW_RJV_CR_UID,
         NEW_RJV_CR_DT,
         NEW_RJV_ORGL_DOC_DT,
         NEW_RJV_REV_DESC,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_SUPP_BILL_HEADER ( 
  BILL_COMP_CODE          VARCHAR2 (3), 
  BILL_KEY_NO             NUMBER (8)    NOT NULL, 
  BILL_REGN_NO            VARCHAR2 (15), 
  BILL_MAIN_ACNT_CODE     VARCHAR2 (6), 
  BILL_SUPP_CODE          VARCHAR2 (6), 
  BILL_DIVN_CODE          VARCHAR2 (6), 
  BILL_DEPT_CODE          VARCHAR2 (6), 
  BILL_HEAD_NO_1          NUMBER (1), 
  BILL_ANLY_CODE_1        VARCHAR2 (6), 
  BILL_HEAD_NO_2          NUMBER (1), 
  BILL_ANLY_CODE_2        VARCHAR2 (6), 
  BILL_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  BILL_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  BILL_DT                 DATE, 
  BILL_SUPP_REF           VARCHAR2 (15), 
  BILL_CURR_CODE          VARCHAR2 (3), 
  BILL_FC_AMT             NUMBER (14,3), 
  BILL_LC_AMT             NUMBER (14,3), 
  BILL_DESC               VARCHAR2 (2000), 
  BILL_DOC_DT             DATE, 
  BILL_STATUS             VARCHAR2 (1), 
  BILL_CR_UID             VARCHAR2 (10)  DEFAULT 'TEST1', 
  BILL_CR_DT              DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_BILL_01
  PRIMARY KEY ( BILL_KEY_NO ) ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
FIN_C0018634 CHECK  ( BILL_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
FIN_C0018635 CHECK  ( BILL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
FIN_C0018636 CHECK  ( BILL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
BILL_CHK_01 CHECK  ( NVL(BILL_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
BILL_CHK_02 CHECK  ( NVL(BILL_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
BILL_NN_01 CHECK  ( BILL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
BILL_NN_02 CHECK  ( BILL_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
SYS_C006906 CHECK  ( BILL_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
SYS_C006907 CHECK  ( BILL_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD CONSTRAINT 
SYS_C006908 CHECK  ( BILL_CR_DT IS NOT NULL  ) 
/




CREATE INDEX NUX_FT_SUPP_BILL_HEADER_01 ON 
  FT_SUPP_BILL_HEADER(BILL_COMP_CODE, BILL_REGN_NO) 

CREATE INDEX NUX_FT_SUPP_BILL_HEADER_02 ON 
  FT_SUPP_BILL_HEADER(BILL_COMP_CODE, BILL_SUPP_CODE, BILL_MAIN_ACNT_CODE) 

/

/
CREATE TABLE FT_SUPP_DETAIL ( 
  SDET_KEY_NO         NUMBER (8)    NOT NULL, 
  SDET_SEQ_NO         NUMBER (3)    NOT NULL, 
  SDET_REF_COMP_CODE  VARCHAR2 (3), 
  SDET_REF_TRAN_CODE  VARCHAR2 (3), 
  SDET_REF_DOC_NO     NUMBER (6), 
  SDET_REF_SEQ_NO     NUMBER (3), 
  SDET_REF_ACNT_YEAR  NUMBER (2), 
  SDET_REF_FC_AMT     NUMBER (14,3), 
  SDET_REF_LC_AMT     NUMBER (14,3), 
  SDET_FC_AMT         NUMBER (14,3), 
  SDET_LC_AMT         NUMBER (14,3), 
  SDET_PV_FLAG        VARCHAR2 (1)  DEFAULT 'P', 
  SDET_DESC           VARCHAR2 (2000), 
  SDET_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  SDET_CR_DT          DATE          DEFAULT SYSDATE, 
  SDET_ACC_FC_AMT     NUMBER (14,3), 
  SDET_ACC_LC_AMT     NUMBER (14,3), 
  SDET_DIFF_FC_AMT    NUMBER (14,3), 
  SDET_DIFF_LC_AMT    NUMBER (14,3), 
  SDET_FOREX_FC_AMT   NUMBER (14,3), 
  SDET_FOREX_LC_AMT   NUMBER (14,3), 
  CONSTRAINT PK_SDET_01
  PRIMARY KEY ( SDET_KEY_NO, SDET_SEQ_NO ) ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD  CONSTRAINT PK_SDET_02
 UNIQUE (SDET_KEY_NO, SDET_REF_COMP_CODE, SDET_REF_ACNT_YEAR, SDET_REF_TRAN_CODE, SDET_REF_DOC_NO, SDET_REF_SEQ_NO) 
/



ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_CHK_01 CHECK  ( SDET_PV_FLAG IN ('P','V')  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_CHK_03 CHECK  ( NVL(SDET_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_CHK_02 CHECK  ( NVL(SDET_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
FIN_C0018637 CHECK  ( SDET_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
FIN_C0018638 CHECK  ( SDET_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
FIN_C0018639 CHECK  ( SDET_PV_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
FIN_C0018640 CHECK  ( SDET_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
FIN_C0018641 CHECK  ( SDET_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_CHK_04 CHECK  ( SDET_SEQ_NO > 0  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_NN_01 CHECK  ( SDET_PV_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_NN_02 CHECK  ( SDET_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SDET_NN_03 CHECK  ( SDET_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SYS_C006922 CHECK  ( SDET_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SYS_C006923 CHECK  ( SDET_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SYS_C006924 CHECK  ( SDET_PV_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SYS_C006925 CHECK  ( SDET_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_SUPP_DETAIL ADD CONSTRAINT 
SYS_C006926 CHECK  ( SDET_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FT_TEMP_TRANS_DETAIL ( 
  TD_COMP_CODE              VARCHAR2 (3), 
  TD_ACNT_YEAR              NUMBER (2), 
  TD_TRAN_CODE              VARCHAR2 (3), 
  TD_DOC_NO                 NUMBER (6), 
  TD_SEQ_NO                 NUMBER (3), 
  TD_MAIN_ACNT_CODE         VARCHAR2 (6), 
  TD_SUB_ACNT_CODE          VARCHAR2 (6), 
  TD_DIVN_CODE              VARCHAR2 (6), 
  TD_DEPT_CODE              VARCHAR2 (6), 
  TD_HEAD_NO_1              NUMBER (1), 
  TD_ANLY_CODE_1            VARCHAR2 (6), 
  TD_HEAD_NO_2              NUMBER (1), 
  TD_ANLY_CODE_2            VARCHAR2 (6), 
  TD_CURR_CODE              VARCHAR2 (3), 
  TD_DOC_AMT                NUMBER (14,3), 
  TD_DOC_DRCR_FLAG          VARCHAR2 (1), 
  TD_FC_AMT                 NUMBER (14,3), 
  TD_DOC_REF                VARCHAR2 (15), 
  TD_DOC_DUE_DT             DATE, 
  TD_OTH_REF                VARCHAR2 (15), 
  TD_ACTY_VALUE_CODE_1      VARCHAR2 (6), 
  TD_ACTY_VALUE_CODE_2      VARCHAR2 (6), 
  TD_DESC                   VARCHAR2 (2000), 
  TD_DBK_PRINT_FLAG         VARCHAR2 (1), 
  TD_LED_PRINT_FLAG         VARCHAR2 (1), 
  TD_MONTH_PRC_FLAG         VARCHAR2 (1), 
  TD_BILL_FC_AMT            NUMBER (14,3), 
  TD_BILL_LC_AMT            NUMBER (14,3), 
  TD_BILL_STATUS            VARCHAR2 (1), 
  TD_PYMT_APPR_FLAG         VARCHAR2 (1), 
  TD_CR_UID                 VARCHAR2 (10), 
  TD_CR_DT                  DATE, 
  TD_PYMT_LAST_APPR_FC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_LC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_BANK    VARCHAR2 (6) ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018644 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00933 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006955 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006956 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006957 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006958 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006959 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006933 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006934 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006935 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006936 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006937 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006938 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00934 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018642 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018643 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018645 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018646 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018647 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018648 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018649 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00927 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00928 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00929 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00930 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00931 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
FIN_C00932 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006928 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006929 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006930 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006931 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_DETAIL ADD CONSTRAINT 
SYS_C006932 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/



/
CREATE TABLE FT_TEMP_TRANS_HEADER ( 
  TH_COMP_CODE      VARCHAR2 (3), 
  TH_ACNT_YEAR      NUMBER (2), 
  TH_TRAN_CODE      VARCHAR2 (3), 
  TH_DOC_NO         NUMBER (6), 
  TH_DOC_DT         DATE, 
  TH_DOC_CAL_YEAR   NUMBER (4), 
  TH_DOC_CAL_MONTH  NUMBER (2), 
  TH_DOC_REF        VARCHAR2 (15), 
  TH_DOC_REF_DT     DATE, 
  TH_DOC_DUE_DT     DATE, 
  TH_DIVN_CODE      VARCHAR2 (6), 
  TH_DEPT_CODE      VARCHAR2 (6), 
  TH_CTL_TOTAL      NUMBER (14,3), 
  TH_DESC           VARCHAR2 (2000), 
  TH_ANNOTATION     VARCHAR2 (2000), 
  TH_CR_UID         VARCHAR2 (10), 
  TH_CR_DT          DATE ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
FIN_C00936 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018650 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018651 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
FIN_C00935 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
SYS_C006964 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
SYS_C006965 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
SYS_C006966 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TEMP_TRANS_HEADER ADD CONSTRAINT 
SYS_C006967 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/



/
CREATE TABLE FT_TRAN_APPR_STATUS ( 
  TAS_COMP_CODE    VARCHAR2 (3)  NOT NULL, 
  TAS_TRAN_CODE    VARCHAR2 (3)  NOT NULL, 
  TAS_DOC_NO       NUMBER (6)    NOT NULL, 
  TAS_ACNT_YEAR    NUMBER (2)    NOT NULL, 
  TAS_USR_LVL      NUMBER (2)    NOT NULL, 
  TAS_STATUS_FLAG  VARCHAR2 (1)  DEFAULT 'N', 
  TAS_CR_UID       VARCHAR2 (10)  DEFAULT 'TEST1', 
  TAS_CR_DT        DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_TAS_01
  PRIMARY KEY ( TAS_COMP_CODE, TAS_ACNT_YEAR, TAS_TRAN_CODE, TAS_DOC_NO, TAS_USR_LVL ) ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018654 CHECK  ( TAS_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_NN_02 CHECK  ( TAS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_NN_03 CHECK  ( TAS_STATUS_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006978 CHECK  ( TAS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006979 CHECK  ( TAS_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006980 CHECK  ( TAS_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006981 CHECK  ( TAS_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006982 CHECK  ( TAS_USR_LVL IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006983 CHECK  ( TAS_STATUS_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006984 CHECK  ( TAS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
SYS_C006985 CHECK  ( TAS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018652 CHECK  ( TAS_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018653 CHECK  ( TAS_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018655 CHECK  ( TAS_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018656 CHECK  ( TAS_USR_LVL IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018657 CHECK  ( TAS_STATUS_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018658 CHECK  ( TAS_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
FIN_C0018659 CHECK  ( TAS_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_CHK_01 CHECK  ( TAS_STATUS_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_CHK_02 CHECK  ( TAS_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_CHK_03 CHECK  ( TAS_DOC_NO > 0  ) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD CONSTRAINT 
TAS_NN_01 CHECK  ( TAS_CR_UID IS NOT NULL  ) 
/



/
CREATE TABLE FT_UNPOSTED_OS ( 
  OST_KEY_NO             NUMBER (8)    NOT NULL, 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1)  DEFAULT 'C', 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10)  DEFAULT 'TEST1', 
  OST_CR_DT              DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_OST_UNP_01
  PRIMARY KEY ( OST_KEY_NO ) ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_07 CHECK  ( OST_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_01 CHECK  ( NVL(OST_LC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_02 CHECK  ( NVL(OST_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_03 CHECK  ( OST_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_04 CHECK  ( OST_DUE_DT >= OST_DOC_DT  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_05 CHECK  ( NVL(OST_LC_ADJ_AMT,0) <= NVL(OST_LC_AMT,0)  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_06 CHECK  ( NVL(OST_FC_ADJ_AMT,0) <= NVL(OST_FC_AMT,0)  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_08 CHECK  ( OST_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_09 CHECK  ( OST_DOC_NO > 0  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_10 CHECK  ( OST_TYPE IN ('P','R',NULL)  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_CHK_11 CHECK  ( OST_DUE_DT >= OST_DOC_DT  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_01 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_02 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018660 CHECK  ( OST_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018661 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C007010 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C007011 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018662 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018663 CHECK  ( OST_LC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018664 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C006991 CHECK  ( OST_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C006992 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C006993 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018665 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
FIN_C0018666 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_03 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_04 CHECK  ( OST_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_05 CHECK  ( OST_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
OST_UNP_NN_06 CHECK  ( OST_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C007021 CHECK  ( OST_KEY_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_OS ADD CONSTRAINT 
SYS_C007022 CHECK  ( OST_DOC_DT IS NOT NULL  ) 
/




CREATE INDEX FNX_UNPOSTED_OS_01 ON 
  FT_UNPOSTED_OS(OST_COMP_CODE, OST_ACNT_YEAR, OST_TRAN_CODE, OST_DOC_NO, OST_SEQ_NO, OST_MAIN_ACNT_CODE, OST_SUB_ACNT_CODE) 

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_UNPOSTED_OS
BEFORE INSERT OR UPDATE OR DELETE ON FT_UNPOSTED_OS
FOR EACH ROW
DECLARE
 NEW_OST_KEY_NO            NUMBER(1) := NULL;
 NEW_OST_COMP_CODE         VARCHAR2(1) := NULL;
 NEW_OST_TRAN_CODE         VARCHAR2(1) := NULL;
 NEW_OST_DOC_NO            NUMBER(1) := NULL;
 NEW_OST_SEQ_NO            NUMBER(1) := NULL;
 NEW_OST_ACNT_YEAR         NUMBER(1) := NULL;
 NEW_OST_DOC_DT            DATE        := NULL;
 NEW_OST_DOC_CAL_YEAR      NUMBER(1) := NULL;
 NEW_OST_DOC_CAL_MONTH     NUMBER(1) := NULL;
 NEW_OST_DUE_DT            DATE        := NULL;
 NEW_OST_MAIN_ACNT_CODE    VARCHAR2(1) := NULL;
 NEW_OST_SUB_ACNT_CODE     VARCHAR2(1) := NULL;
 NEW_OST_DIVN_CODE         VARCHAR2(1) := NULL;
 NEW_OST_DEPT_CODE         VARCHAR2(1) := NULL;
 NEW_OST_HEAD_NO_1         NUMBER(1) := NULL;
 NEW_OST_ANLY_CODE_1       VARCHAR2(1) := NULL;
 NEW_OST_HEAD_NO_2         NUMBER(1) := NULL;
 NEW_OST_ANLY_CODE_2       VARCHAR2(1) := NULL;
 NEW_OST_ACTY_CODE_1       VARCHAR2(1) := NULL;
 NEW_OST_ACTY_CODE_2       VARCHAR2(1) := NULL;
 NEW_OST_CURR_CODE         VARCHAR2(1) := NULL;
 NEW_OST_LC_AMT            NUMBER(1) := NULL;
 NEW_OST_FC_AMT            NUMBER(1) := NULL;
 NEW_OST_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_OST_DOC_REF           VARCHAR2(1) := NULL;
 NEW_OST_DOC_REF_DT        DATE        := NULL;
 NEW_OST_OTH_REF           VARCHAR2(1) := NULL;
 NEW_OST_LC_ADJ_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_ADJ_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_PDC_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_PDC_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_UNP_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_UNP_AMT        NUMBER(1) := NULL;
 NEW_OST_LC_UNDEP_AMT      NUMBER(1) := NULL;
 NEW_OST_FC_UNDEP_AMT      NUMBER(1) := NULL;
 NEW_OST_LC_ORG_AMT        NUMBER(1) := NULL;
 NEW_OST_FC_ORG_AMT        NUMBER(1) := NULL;
 NEW_OST_REF_KEY_NO        NUMBER(1) := NULL;
 NEW_OST_REF_COMP_CODE     VARCHAR2(1) := NULL;
 NEW_OST_REF_ACNT_YEAR     NUMBER(1) := NULL;
 NEW_OST_REF_TRAN_CODE     VARCHAR2(1) := NULL;
 NEW_OST_REF_SEQ_NO        NUMBER(1) := NULL;
 NEW_OST_REF_DOC_NO        NUMBER(1) := NULL;
 NEW_OST_REF_DOC_DT        DATE        := NULL;
 NEW_OST_REF_DOC_CAL_YEAR  NUMBER(1) := NULL;
 NEW_OST_REF_DOC_CAL_MONTH NUMBER(1) := NULL;
 NEW_OST_REF_DUE_DT        DATE        := NULL;
 NEW_OST_LAST_MATCH_DT     DATE        := NULL;
 NEW_OST_TYPE              VARCHAR2(1) := NULL;
 NEW_OST_CR_UID            VARCHAR2(1) := NULL;
 NEW_OST_CR_DT             DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_UNPOSTED_OS (
         :OLD.OST_KEY_NO,
         :OLD.OST_COMP_CODE,
         :OLD.OST_TRAN_CODE,
         :OLD.OST_DOC_NO,
         :OLD.OST_SEQ_NO,
         :OLD.OST_ACNT_YEAR,
         :OLD.OST_DOC_DT,
         :OLD.OST_DOC_CAL_YEAR,
         :OLD.OST_DOC_CAL_MONTH,
         :OLD.OST_DUE_DT,
         :OLD.OST_MAIN_ACNT_CODE,
         :OLD.OST_SUB_ACNT_CODE,
         :OLD.OST_DIVN_CODE,
         :OLD.OST_DEPT_CODE,
         :OLD.OST_HEAD_NO_1,
         :OLD.OST_ANLY_CODE_1,
         :OLD.OST_HEAD_NO_2,
         :OLD.OST_ANLY_CODE_2,
         :OLD.OST_ACTY_CODE_1,
         :OLD.OST_ACTY_CODE_2,
         :OLD.OST_CURR_CODE,
         :OLD.OST_LC_AMT,
         :OLD.OST_FC_AMT,
         :OLD.OST_DRCR_FLAG,
         :OLD.OST_DOC_REF,
         :OLD.OST_DOC_REF_DT,
         :OLD.OST_OTH_REF,
         :OLD.OST_LC_ADJ_AMT,
         :OLD.OST_FC_ADJ_AMT,
         :OLD.OST_LC_PDC_AMT,
         :OLD.OST_FC_PDC_AMT,
         :OLD.OST_LC_UNP_AMT,
         :OLD.OST_FC_UNP_AMT,
         :OLD.OST_LC_UNDEP_AMT,
         :OLD.OST_FC_UNDEP_AMT,
         :OLD.OST_LC_ORG_AMT,
         :OLD.OST_FC_ORG_AMT,
         :OLD.OST_REF_KEY_NO,
         :OLD.OST_REF_COMP_CODE,
         :OLD.OST_REF_ACNT_YEAR,
         :OLD.OST_REF_TRAN_CODE,
         :OLD.OST_REF_SEQ_NO,
         :OLD.OST_REF_DOC_NO,
         :OLD.OST_REF_DOC_DT,
         :OLD.OST_REF_DOC_CAL_YEAR,
         :OLD.OST_REF_DOC_CAL_MONTH,
         :OLD.OST_REF_DUE_DT,
         :OLD.OST_LAST_MATCH_DT,
         :OLD.OST_TYPE,
         :OLD.OST_CR_UID,
         :OLD.OST_CR_DT,
         :NEW.OST_KEY_NO,
         :NEW.OST_COMP_CODE,
         :NEW.OST_TRAN_CODE,
         :NEW.OST_DOC_NO,
         :NEW.OST_SEQ_NO,
         :NEW.OST_ACNT_YEAR,
         :NEW.OST_DOC_DT,
         :NEW.OST_DOC_CAL_YEAR,
         :NEW.OST_DOC_CAL_MONTH,
         :NEW.OST_DUE_DT,
         :NEW.OST_MAIN_ACNT_CODE,
         :NEW.OST_SUB_ACNT_CODE,
         :NEW.OST_DIVN_CODE,
         :NEW.OST_DEPT_CODE,
         :NEW.OST_HEAD_NO_1,
         :NEW.OST_ANLY_CODE_1,
         :NEW.OST_HEAD_NO_2,
         :NEW.OST_ANLY_CODE_2,
         :NEW.OST_ACTY_CODE_1,
         :NEW.OST_ACTY_CODE_2,
         :NEW.OST_CURR_CODE,
         :NEW.OST_LC_AMT,
         :NEW.OST_FC_AMT,
         :NEW.OST_DRCR_FLAG,
         :NEW.OST_DOC_REF,
         :NEW.OST_DOC_REF_DT,
         :NEW.OST_OTH_REF,
         :NEW.OST_LC_ADJ_AMT,
         :NEW.OST_FC_ADJ_AMT,
         :NEW.OST_LC_PDC_AMT,
         :NEW.OST_FC_PDC_AMT,
         :NEW.OST_LC_UNP_AMT,
         :NEW.OST_FC_UNP_AMT,
         :NEW.OST_LC_UNDEP_AMT,
         :NEW.OST_FC_UNDEP_AMT,
         :NEW.OST_LC_ORG_AMT,
         :NEW.OST_FC_ORG_AMT,
         :NEW.OST_REF_KEY_NO,
         :NEW.OST_REF_COMP_CODE,
         :NEW.OST_REF_ACNT_YEAR,
         :NEW.OST_REF_TRAN_CODE,
         :NEW.OST_REF_SEQ_NO,
         :NEW.OST_REF_DOC_NO,
         :NEW.OST_REF_DOC_DT,
         :NEW.OST_REF_DOC_CAL_YEAR,
         :NEW.OST_REF_DOC_CAL_MONTH,
         :NEW.OST_REF_DUE_DT,
         :NEW.OST_LAST_MATCH_DT,
         :NEW.OST_TYPE,
         :NEW.OST_CR_UID,
         :NEW.OST_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_UNPOSTED_OS (
         :OLD.OST_KEY_NO,
         :OLD.OST_COMP_CODE,
         :OLD.OST_TRAN_CODE,
         :OLD.OST_DOC_NO,
         :OLD.OST_SEQ_NO,
         :OLD.OST_ACNT_YEAR,
         :OLD.OST_DOC_DT,
         :OLD.OST_DOC_CAL_YEAR,
         :OLD.OST_DOC_CAL_MONTH,
         :OLD.OST_DUE_DT,
         :OLD.OST_MAIN_ACNT_CODE,
         :OLD.OST_SUB_ACNT_CODE,
         :OLD.OST_DIVN_CODE,
         :OLD.OST_DEPT_CODE,
         :OLD.OST_HEAD_NO_1,
         :OLD.OST_ANLY_CODE_1,
         :OLD.OST_HEAD_NO_2,
         :OLD.OST_ANLY_CODE_2,
         :OLD.OST_ACTY_CODE_1,
         :OLD.OST_ACTY_CODE_2,
         :OLD.OST_CURR_CODE,
         :OLD.OST_LC_AMT,
         :OLD.OST_FC_AMT,
         :OLD.OST_DRCR_FLAG,
         :OLD.OST_DOC_REF,
         :OLD.OST_DOC_REF_DT,
         :OLD.OST_OTH_REF,
         :OLD.OST_LC_ADJ_AMT,
         :OLD.OST_FC_ADJ_AMT,
         :OLD.OST_LC_PDC_AMT,
         :OLD.OST_FC_PDC_AMT,
         :OLD.OST_LC_UNP_AMT,
         :OLD.OST_FC_UNP_AMT,
         :OLD.OST_LC_UNDEP_AMT,
         :OLD.OST_FC_UNDEP_AMT,
         :OLD.OST_LC_ORG_AMT,
         :OLD.OST_FC_ORG_AMT,
         :OLD.OST_REF_KEY_NO,
         :OLD.OST_REF_COMP_CODE,
         :OLD.OST_REF_ACNT_YEAR,
         :OLD.OST_REF_TRAN_CODE,
         :OLD.OST_REF_SEQ_NO,
         :OLD.OST_REF_DOC_NO,
         :OLD.OST_REF_DOC_DT,
         :OLD.OST_REF_DOC_CAL_YEAR,
         :OLD.OST_REF_DOC_CAL_MONTH,
         :OLD.OST_REF_DUE_DT,
         :OLD.OST_LAST_MATCH_DT,
         :OLD.OST_TYPE,
         :OLD.OST_CR_UID,
         :OLD.OST_CR_DT,
         NEW_OST_KEY_NO,
         NEW_OST_COMP_CODE,
         NEW_OST_TRAN_CODE,
         NEW_OST_DOC_NO,
         NEW_OST_SEQ_NO,
         NEW_OST_ACNT_YEAR,
         NEW_OST_DOC_DT,
         NEW_OST_DOC_CAL_YEAR,
         NEW_OST_DOC_CAL_MONTH,
         NEW_OST_DUE_DT,
         NEW_OST_MAIN_ACNT_CODE,
         NEW_OST_SUB_ACNT_CODE,
         NEW_OST_DIVN_CODE,
         NEW_OST_DEPT_CODE,
         NEW_OST_HEAD_NO_1,
         NEW_OST_ANLY_CODE_1,
         NEW_OST_HEAD_NO_2,
         NEW_OST_ANLY_CODE_2,
         NEW_OST_ACTY_CODE_1,
         NEW_OST_ACTY_CODE_2,
         NEW_OST_CURR_CODE,
         NEW_OST_LC_AMT,
         NEW_OST_FC_AMT,
         NEW_OST_DRCR_FLAG,
         NEW_OST_DOC_REF,
         NEW_OST_DOC_REF_DT,
         NEW_OST_OTH_REF,
         NEW_OST_LC_ADJ_AMT,
         NEW_OST_FC_ADJ_AMT,
         NEW_OST_LC_PDC_AMT,
         NEW_OST_FC_PDC_AMT,
         NEW_OST_LC_UNP_AMT,
         NEW_OST_FC_UNP_AMT,
         NEW_OST_LC_UNDEP_AMT,
         NEW_OST_FC_UNDEP_AMT,
         NEW_OST_LC_ORG_AMT,
         NEW_OST_FC_ORG_AMT,
         NEW_OST_REF_KEY_NO,
         NEW_OST_REF_COMP_CODE,
         NEW_OST_REF_ACNT_YEAR,
         NEW_OST_REF_TRAN_CODE,
         NEW_OST_REF_SEQ_NO,
         NEW_OST_REF_DOC_NO,
         NEW_OST_REF_DOC_DT,
         NEW_OST_REF_DOC_CAL_YEAR,
         NEW_OST_REF_DOC_CAL_MONTH,
         NEW_OST_REF_DUE_DT,
         NEW_OST_LAST_MATCH_DT,
         NEW_OST_TYPE,
         NEW_OST_CR_UID,
         NEW_OST_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

/
CREATE TABLE FT_UNPOSTED_TRANS_DETAIL ( 
  TD_COMP_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_ACNT_YEAR              NUMBER (2)    NOT NULL, 
  TD_TRAN_CODE              VARCHAR2 (3)  NOT NULL, 
  TD_DOC_NO                 NUMBER (6)    NOT NULL, 
  TD_SEQ_NO                 NUMBER (3)    NOT NULL, 
  TD_MAIN_ACNT_CODE         VARCHAR2 (6), 
  TD_SUB_ACNT_CODE          VARCHAR2 (6), 
  TD_DIVN_CODE              VARCHAR2 (6), 
  TD_DEPT_CODE              VARCHAR2 (6), 
  TD_HEAD_NO_1              NUMBER (1), 
  TD_ANLY_CODE_1            VARCHAR2 (6), 
  TD_HEAD_NO_2              NUMBER (1), 
  TD_ANLY_CODE_2            VARCHAR2 (6), 
  TD_CURR_CODE              VARCHAR2 (3), 
  TD_DOC_AMT                NUMBER (14,3) DEFAULT 0, 
  TD_DOC_DRCR_FLAG          VARCHAR2 (1)  DEFAULT 'D', 
  TD_FC_AMT                 NUMBER (14,3) DEFAULT 0, 
  TD_DOC_REF                VARCHAR2 (15), 
  TD_DOC_DUE_DT             DATE, 
  TD_OTH_REF                VARCHAR2 (15), 
  TD_ACTY_VALUE_CODE_1      VARCHAR2 (6), 
  TD_ACTY_VALUE_CODE_2      VARCHAR2 (6), 
  TD_DESC                   VARCHAR2 (2000), 
  TD_DBK_PRINT_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_LED_PRINT_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_MONTH_PRC_FLAG         VARCHAR2 (1)  DEFAULT 'N', 
  TD_BILL_FC_AMT            NUMBER (14,3), 
  TD_BILL_LC_AMT            NUMBER (14,3), 
  TD_BILL_STATUS            VARCHAR2 (1), 
  TD_PYMT_APPR_FLAG         VARCHAR2 (1)  DEFAULT '0', 
  TD_CR_UID                 VARCHAR2 (10)  DEFAULT 'TEST1', 
  TD_CR_DT                  DATE          DEFAULT SYSDATE, 
  TD_PYMT_LAST_APPR_FC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_LC_AMT  NUMBER (14,3), 
  TD_PYMT_LAST_APPR_BANK    VARCHAR2 (6), 
  CONSTRAINT PK_TD_UNP_01
  PRIMARY KEY ( TD_COMP_CODE, TD_ACNT_YEAR, TD_TRAN_CODE, TD_DOC_NO, TD_SEQ_NO ) ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018667 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018674 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_03 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_04 CHECK  ( TD_DBK_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_05 CHECK  ( TD_LED_PRINT_FLAG IN ('Y','N')  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_06 CHECK  ( TD_MONTH_PRC_FLAG IN ('Y','N', 'O')  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_07 CHECK  ( TD_PYMT_APPR_FLAG IN ('0','1','2')  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_08 CHECK  (  TD_ACTY_VALUE_CODE_1  IS  NOT  NULL  OR TD_ACTY_VALUE_CODE_2 IS NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_01 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_02 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_04 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018670 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018671 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018672 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007039 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007040 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007041 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007042 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018673 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018675 CHECK  ( TD_DBK_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018676 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018677 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018678 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_05 CHECK  ( TD_LED_PRINT_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_06 CHECK  ( TD_MONTH_PRC_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_07 CHECK  ( TD_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007052 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_01 CHECK  ( NVL(TD_DOC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_02 CHECK  ( NVL(TD_FC_AMT,0) >= 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_CHK_03 CHECK  ( TD_DOC_DRCR_FLAG IN ('D','C')  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
TD_UNP_NN_08 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007024 CHECK  ( TD_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007025 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007026 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007027 CHECK  ( TD_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007028 CHECK  ( TD_SEQ_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007029 CHECK  ( TD_DOC_AMT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007030 CHECK  ( TD_DOC_DRCR_FLAG IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
SYS_C007031 CHECK  ( TD_DOC_DUE_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018679 CHECK  ( TD_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018668 CHECK  ( TD_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD CONSTRAINT 
FIN_C0018669 CHECK  ( TD_TRAN_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_UNPOSTED_TRANS_DETAIL
BEFORE INSERT OR UPDATE OR DELETE ON FT_UNPOSTED_TRANS_DETAIL
FOR EACH ROW
DECLARE
 NEW_TD_COMP_CODE             VARCHAR2(1) := NULL;
 NEW_TD_ACNT_YEAR             NUMBER(1) := NULL;
 NEW_TD_TRAN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_NO                NUMBER(1) := NULL;
 NEW_TD_SEQ_NO                NUMBER(1) := NULL;
 NEW_TD_MAIN_ACNT_CODE        VARCHAR2(1) := NULL;
 NEW_TD_SUB_ACNT_CODE         VARCHAR2(1) := NULL;
 NEW_TD_DIVN_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DEPT_CODE             VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_1             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_1           VARCHAR2(1) := NULL;
 NEW_TD_HEAD_NO_2             NUMBER(1) := NULL;
 NEW_TD_ANLY_CODE_2           VARCHAR2(1) := NULL;
 NEW_TD_CURR_CODE             VARCHAR2(1) := NULL;
 NEW_TD_DOC_AMT               NUMBER(1) := NULL;
 NEW_TD_DOC_DRCR_FLAG         VARCHAR2(1) := NULL;
 NEW_TD_FC_AMT                NUMBER(1) := NULL;
 NEW_TD_DOC_REF               VARCHAR2(1) := NULL;
 NEW_TD_DOC_DUE_DT            DATE        := NULL;
 NEW_TD_OTH_REF               VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_1     VARCHAR2(1) := NULL;
 NEW_TD_ACTY_VALUE_CODE_2     VARCHAR2(1) := NULL;
 NEW_TD_DESC                  VARCHAR2(1) := NULL;
 NEW_TD_DBK_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_LED_PRINT_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_MONTH_PRC_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_BILL_FC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_LC_AMT           NUMBER(1) := NULL;
 NEW_TD_BILL_STATUS           VARCHAR2(1) := NULL;
 NEW_TD_PYMT_APPR_FLAG        VARCHAR2(1) := NULL;
 NEW_TD_CR_UID                VARCHAR2(1) := NULL;
 NEW_TD_CR_DT                 DATE        := NULL;
 NEW_TD_PYMT_LAST_APPR_FC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_LC_AMT NUMBER(1) := NULL;
 NEW_TD_PYMT_LAST_APPR_BANK   VARCHAR2(1) := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
	TRG_MODE := 'I';
    ELSIF UPDATING THEN
	TRG_MODE := 'U';
    ELSIF DELETING THEN
	TRG_MODE := 'D';
    ELSE
	TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
	STP_FT_UNPOSTED_TRANS_DETAIL (
	 :OLD.TD_COMP_CODE,
	 :OLD.TD_ACNT_YEAR,
	 :OLD.TD_TRAN_CODE,
	 :OLD.TD_DOC_NO,
	 :OLD.TD_SEQ_NO,
	 :OLD.TD_MAIN_ACNT_CODE,
	 :OLD.TD_SUB_ACNT_CODE,
	 :OLD.TD_DIVN_CODE,
	 :OLD.TD_DEPT_CODE,
	 :OLD.TD_HEAD_NO_1,
	 :OLD.TD_ANLY_CODE_1,
	 :OLD.TD_HEAD_NO_2,
	 :OLD.TD_ANLY_CODE_2,
	 :OLD.TD_CURR_CODE,
	 :OLD.TD_DOC_AMT,
	 :OLD.TD_DOC_DRCR_FLAG,
	 :OLD.TD_FC_AMT,
	 :OLD.TD_DOC_REF,
	 :OLD.TD_DOC_DUE_DT,
	 :OLD.TD_OTH_REF,
	 :OLD.TD_ACTY_VALUE_CODE_1,
	 :OLD.TD_ACTY_VALUE_CODE_2,
	 :OLD.TD_DESC,
	 :OLD.TD_DBK_PRINT_FLAG,
	 :OLD.TD_LED_PRINT_FLAG,
	 :OLD.TD_MONTH_PRC_FLAG,
	 :OLD.TD_BILL_FC_AMT,
	 :OLD.TD_BILL_LC_AMT,
	 :OLD.TD_BILL_STATUS,
	 :OLD.TD_PYMT_APPR_FLAG,
	 :OLD.TD_CR_UID,
	 :OLD.TD_CR_DT,
	 :OLD.TD_PYMT_LAST_APPR_FC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_LC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_BANK,
	 :NEW.TD_COMP_CODE,
	 :NEW.TD_ACNT_YEAR,
	 :NEW.TD_TRAN_CODE,
	 :NEW.TD_DOC_NO,
	 :NEW.TD_SEQ_NO,
	 :NEW.TD_MAIN_ACNT_CODE,
	 :NEW.TD_SUB_ACNT_CODE,
	 :NEW.TD_DIVN_CODE,
	 :NEW.TD_DEPT_CODE,
	 :NEW.TD_HEAD_NO_1,
	 :NEW.TD_ANLY_CODE_1,
	 :NEW.TD_HEAD_NO_2,
	 :NEW.TD_ANLY_CODE_2,
	 :NEW.TD_CURR_CODE,
	 :NEW.TD_DOC_AMT,
	 :NEW.TD_DOC_DRCR_FLAG,
	 :NEW.TD_FC_AMT,
	 :NEW.TD_DOC_REF,
	 :NEW.TD_DOC_DUE_DT,
	 :NEW.TD_OTH_REF,
	 :NEW.TD_ACTY_VALUE_CODE_1,
	 :NEW.TD_ACTY_VALUE_CODE_2,
	 :NEW.TD_DESC,
	 :NEW.TD_DBK_PRINT_FLAG,
	 :NEW.TD_LED_PRINT_FLAG,
	 :NEW.TD_MONTH_PRC_FLAG,
	 :NEW.TD_BILL_FC_AMT,
	 :NEW.TD_BILL_LC_AMT,
	 :NEW.TD_BILL_STATUS,
	 :NEW.TD_PYMT_APPR_FLAG,
	 :NEW.TD_CR_UID,
	 :NEW.TD_CR_DT,
	 :NEW.TD_PYMT_LAST_APPR_FC_AMT,
	 :NEW.TD_PYMT_LAST_APPR_LC_AMT,
	 :NEW.TD_PYMT_LAST_APPR_BANK,
	 TRG_MODE,
	 TRG_ERR_NO,
	 TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
	STP_FT_UNPOSTED_TRANS_DETAIL (
	 :OLD.TD_COMP_CODE,
	 :OLD.TD_ACNT_YEAR,
	 :OLD.TD_TRAN_CODE,
	 :OLD.TD_DOC_NO,
	 :OLD.TD_SEQ_NO,
	 :OLD.TD_MAIN_ACNT_CODE,
	 :OLD.TD_SUB_ACNT_CODE,
	 :OLD.TD_DIVN_CODE,
	 :OLD.TD_DEPT_CODE,
	 :OLD.TD_HEAD_NO_1,
	 :OLD.TD_ANLY_CODE_1,
	 :OLD.TD_HEAD_NO_2,
	 :OLD.TD_ANLY_CODE_2,
	 :OLD.TD_CURR_CODE,
	 :OLD.TD_DOC_AMT,
	 :OLD.TD_DOC_DRCR_FLAG,
	 :OLD.TD_FC_AMT,
	 :OLD.TD_DOC_REF,
	 :OLD.TD_DOC_DUE_DT,
	 :OLD.TD_OTH_REF,
	 :OLD.TD_ACTY_VALUE_CODE_1,
	 :OLD.TD_ACTY_VALUE_CODE_2,
	 :OLD.TD_DESC,
	 :OLD.TD_DBK_PRINT_FLAG,
	 :OLD.TD_LED_PRINT_FLAG,
	 :OLD.TD_MONTH_PRC_FLAG,
	 :OLD.TD_BILL_FC_AMT,
	 :OLD.TD_BILL_LC_AMT,
	 :OLD.TD_BILL_STATUS,
	 :OLD.TD_PYMT_APPR_FLAG,
	 :OLD.TD_CR_UID,
	 :OLD.TD_CR_DT,
	 :OLD.TD_PYMT_LAST_APPR_FC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_LC_AMT,
	 :OLD.TD_PYMT_LAST_APPR_BANK,
	 NEW_TD_COMP_CODE,
	 NEW_TD_ACNT_YEAR,
	 NEW_TD_TRAN_CODE,
	 NEW_TD_DOC_NO,
	 NEW_TD_SEQ_NO,
	 NEW_TD_MAIN_ACNT_CODE,
	 NEW_TD_SUB_ACNT_CODE,
	 NEW_TD_DIVN_CODE,
	 NEW_TD_DEPT_CODE,
	 NEW_TD_HEAD_NO_1,
	 NEW_TD_ANLY_CODE_1,
	 NEW_TD_HEAD_NO_2,
	 NEW_TD_ANLY_CODE_2,
	 NEW_TD_CURR_CODE,
	 NEW_TD_DOC_AMT,
	 NEW_TD_DOC_DRCR_FLAG,
	 NEW_TD_FC_AMT,
	 NEW_TD_DOC_REF,
	 NEW_TD_DOC_DUE_DT,
	 NEW_TD_OTH_REF,
	 NEW_TD_ACTY_VALUE_CODE_1,
	 NEW_TD_ACTY_VALUE_CODE_2,
	 NEW_TD_DESC,
	 NEW_TD_DBK_PRINT_FLAG,
	 NEW_TD_LED_PRINT_FLAG,
	 NEW_TD_MONTH_PRC_FLAG,
	 NEW_TD_BILL_FC_AMT,
	 NEW_TD_BILL_LC_AMT,
	 NEW_TD_BILL_STATUS,
	 NEW_TD_PYMT_APPR_FLAG,
	 NEW_TD_CR_UID,
	 NEW_TD_CR_DT,
	 NEW_TD_PYMT_LAST_APPR_FC_AMT,
	 NEW_TD_PYMT_LAST_APPR_LC_AMT,
	 NEW_TD_PYMT_LAST_APPR_BANK,
	 TRG_MODE,
	 TRG_ERR_NO,
	 TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
	RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_UNP_TRANS_DETAIL_AFTER
AFTER INSERT ON FT_UNPOSTED_TRANS_DETAIL
BEGIN
INSERT INTO  FT_CUR_TRANS_DETAIL
SELECT FT_UNPOSTED_TRANS_DETAIL.*
FROM   FT_UNPOSTED_TRANS_DETAIL, FM_TRANSACTION
WHERE  TRAN_CODE = TD_TRAN_CODE
AND    TRAN_MODE_POSTING = 'O'
AND    TD_ACNT_YEAR = (SELECT CAY_ACNT_YEAR FROM FM_COMP_ACNT_YEAR
                       WHERE  CAY_COMP_CODE = TD_COMP_CODE
                       AND    CAY_PREV_CURR_NEXT = 'C');
INSERT INTO  FT_PRV_TRANS_DETAIL
SELECT FT_UNPOSTED_TRANS_DETAIL.*
FROM   FT_UNPOSTED_TRANS_DETAIL, FM_TRANSACTION
WHERE  TRAN_CODE = TD_TRAN_CODE
AND    TRAN_MODE_POSTING = 'O'
AND    TD_ACNT_YEAR = (SELECT CAY_ACNT_YEAR FROM FM_COMP_ACNT_YEAR
                       WHERE  CAY_COMP_CODE = TD_COMP_CODE
                       AND    CAY_PREV_CURR_NEXT = 'C');
DELETE FROM FT_UNPOSTED_TRANS_DETAIL
WHERE  TD_TRAN_CODE IN
       (SELECT TRAN_CODE
        FROM   FM_TRANSACTION
        WHERE  TRAN_MODE_POSTING = 'O');
END;

/

/
CREATE TABLE FT_UNPOSTED_TRANS_HEADER ( 
  TH_COMP_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_ACNT_YEAR      NUMBER (2)    NOT NULL, 
  TH_TRAN_CODE      VARCHAR2 (3)  NOT NULL, 
  TH_DOC_NO         NUMBER (6)    NOT NULL, 
  TH_DOC_DT         DATE, 
  TH_DOC_CAL_YEAR   NUMBER (4), 
  TH_DOC_CAL_MONTH  NUMBER (2), 
  TH_DOC_REF        VARCHAR2 (15), 
  TH_DOC_REF_DT     DATE, 
  TH_DOC_DUE_DT     DATE, 
  TH_DIVN_CODE      VARCHAR2 (6), 
  TH_DEPT_CODE      VARCHAR2 (6), 
  TH_CTL_TOTAL      NUMBER (14,3) DEFAULT 0, 
  TH_DESC           VARCHAR2 (2000), 
  TH_ANNOTATION     VARCHAR2 (2000), 
  TH_CR_UID         VARCHAR2 (10)  DEFAULT 'TEST1', 
  TH_CR_DT          DATE          DEFAULT SYSDATE, 
  CONSTRAINT PK_TH_UNP_01
  PRIMARY KEY ( TH_COMP_CODE, TH_ACNT_YEAR, TH_TRAN_CODE, TH_DOC_NO ) ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_06 CHECK  ( TH_ACNT_YEAR > 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007076 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007077 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007078 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007079 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007080 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_01 CHECK  ( NVL(TH_CTL_TOTAL,0) >= 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_02 CHECK  ( TH_DOC_NO > 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_03 CHECK  ( TH_DOC_DUE_DT >= TH_DOC_DT  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_04 CHECK  ( TH_DOC_CAL_YEAR > 0  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_CHK_05 CHECK  ( TH_DOC_CAL_MONTH BETWEEN 1 AND 12  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_NN_01 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018680 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018681 CHECK  ( TH_ACNT_YEAR IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018682 CHECK  ( TH_TRAN_CODE IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018683 CHECK  ( TH_DOC_NO IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018684 CHECK  ( TH_CR_UID IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
FIN_C0018685 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
TH_UNP_NN_02 CHECK  ( TH_CR_DT IS NOT NULL  ) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD CONSTRAINT 
SYS_C007075 CHECK  ( TH_COMP_CODE IS NOT NULL  ) 
/



CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_UNPOSTED_TRANS_HEADER
BEFORE INSERT OR UPDATE OR DELETE ON FT_UNPOSTED_TRANS_HEADER
FOR EACH ROW
DECLARE
 NEW_TH_COMP_CODE          VARCHAR2(1) := NULL;
 NEW_TH_ACNT_YEAR          NUMBER(1) := NULL;
 NEW_TH_TRAN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DOC_NO             NUMBER(1) := NULL;
 NEW_TH_DOC_DT             DATE        := NULL;
 NEW_TH_DOC_CAL_YEAR       NUMBER(1) := NULL;
 NEW_TH_DOC_CAL_MONTH      NUMBER(1) := NULL;
 NEW_TH_DOC_REF            VARCHAR2(1) := NULL;
 NEW_TH_DOC_REF_DT         DATE        := NULL;
 NEW_TH_DOC_DUE_DT         DATE        := NULL;
 NEW_TH_DIVN_CODE          VARCHAR2(1) := NULL;
 NEW_TH_DEPT_CODE          VARCHAR2(1) := NULL;
 NEW_TH_CTL_TOTAL          NUMBER(1) := NULL;
 NEW_TH_DESC               VARCHAR2(1) := NULL;
 NEW_TH_ANNOTATION         VARCHAR2(1) := NULL;
 NEW_TH_CR_UID             VARCHAR2(1) := NULL;
 NEW_TH_CR_DT              DATE        := NULL;
 TRG_MODE                  VARCHAR2(1);
 TRG_ERR_NO                NUMBER(6);
 TRG_ERR_MSG               VARCHAR2(80);
BEGIN
    IF INSERTING THEN
        TRG_MODE := 'I';
    ELSIF UPDATING THEN
        TRG_MODE := 'U';
    ELSIF DELETING THEN
        TRG_MODE := 'D';
    ELSE
        TRG_MODE := 'X';
    END IF;
    TRG_ERR_NO := 0;
    IF TRG_MODE IN ('I','U') THEN
        STP_FT_UNPOSTED_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         :NEW.TH_COMP_CODE,
         :NEW.TH_ACNT_YEAR,
         :NEW.TH_TRAN_CODE,
         :NEW.TH_DOC_NO,
         :NEW.TH_DOC_DT,
         :NEW.TH_DOC_CAL_YEAR,
         :NEW.TH_DOC_CAL_MONTH,
         :NEW.TH_DOC_REF,
         :NEW.TH_DOC_REF_DT,
         :NEW.TH_DOC_DUE_DT,
         :NEW.TH_DIVN_CODE,
         :NEW.TH_DEPT_CODE,
         :NEW.TH_CTL_TOTAL,
         :NEW.TH_DESC,
         :NEW.TH_ANNOTATION,
         :NEW.TH_CR_UID,
         :NEW.TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF TRG_MODE = 'D' THEN
        STP_FT_UNPOSTED_TRANS_HEADER (
         :OLD.TH_COMP_CODE,
         :OLD.TH_ACNT_YEAR,
         :OLD.TH_TRAN_CODE,
         :OLD.TH_DOC_NO,
         :OLD.TH_DOC_DT,
         :OLD.TH_DOC_CAL_YEAR,
         :OLD.TH_DOC_CAL_MONTH,
         :OLD.TH_DOC_REF,
         :OLD.TH_DOC_REF_DT,
         :OLD.TH_DOC_DUE_DT,
         :OLD.TH_DIVN_CODE,
         :OLD.TH_DEPT_CODE,
         :OLD.TH_CTL_TOTAL,
         :OLD.TH_DESC,
         :OLD.TH_ANNOTATION,
         :OLD.TH_CR_UID,
         :OLD.TH_CR_DT,
         NEW_TH_COMP_CODE,
         NEW_TH_ACNT_YEAR,
         NEW_TH_TRAN_CODE,
         NEW_TH_DOC_NO,
         NEW_TH_DOC_DT,
         NEW_TH_DOC_CAL_YEAR,
         NEW_TH_DOC_CAL_MONTH,
         NEW_TH_DOC_REF,
         NEW_TH_DOC_REF_DT,
         NEW_TH_DOC_DUE_DT,
         NEW_TH_DIVN_CODE,
         NEW_TH_DEPT_CODE,
         NEW_TH_CTL_TOTAL,
         NEW_TH_DESC,
         NEW_TH_ANNOTATION,
         NEW_TH_CR_UID,
         NEW_TH_CR_DT,
         TRG_MODE,
         TRG_ERR_NO,
         TRG_ERR_MSG);
    END IF;
    IF NVL(TRG_ERR_NO,0) != 0 THEN
        RAISE_APPLICATION_ERROR(TRG_ERR_NO, TRG_ERR_MSG);
    END IF;
END;

/

CREATE OR REPLACE TRIGGER "FINAL7".TRG_FT_UNP_TRANS_HEADER_AFTER
AFTER INSERT ON FT_UNPOSTED_TRANS_HEADER
BEGIN
INSERT INTO  FT_CUR_TRANS_HEADER
SELECT FT_UNPOSTED_TRANS_HEADER.*
FROM   FT_UNPOSTED_TRANS_HEADER, FM_TRANSACTION
WHERE  TRAN_CODE = TH_TRAN_CODE
AND    TRAN_MODE_POSTING = 'O'
AND    TH_ACNT_YEAR = (SELECT CAY_ACNT_YEAR FROM FM_COMP_ACNT_YEAR
                       WHERE  CAY_COMP_CODE = TH_COMP_CODE
                       AND    CAY_PREV_CURR_NEXT = 'C');
INSERT INTO  FT_PRV_TRANS_HEADER
SELECT FT_UNPOSTED_TRANS_HEADER.*
FROM   FT_UNPOSTED_TRANS_HEADER, FM_TRANSACTION
WHERE  TRAN_CODE = TH_TRAN_CODE
AND    TRAN_MODE_POSTING = 'O'
AND    TH_ACNT_YEAR = (SELECT CAY_ACNT_YEAR FROM FM_COMP_ACNT_YEAR
                       WHERE  CAY_COMP_CODE = TH_COMP_CODE
                       AND    CAY_PREV_CURR_NEXT = 'P');
DELETE FROM FT_UNPOSTED_TRANS_HEADER
WHERE  TH_TRAN_CODE IN
       (SELECT TRAN_CODE
        FROM   FM_TRANSACTION
        WHERE  TRAN_MODE_POSTING = 'O');
END;

/

/
CREATE TABLE FW_BALANCE ( 
  ABAL_COMP_CODE       VARCHAR2 (3), 
  ABAL_DIVN_CODE       VARCHAR2 (6), 
  ABAL_DEPT_CODE       VARCHAR2 (6), 
  ABAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ABAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  ABAL_ANLY_CODE_1     VARCHAR2 (6), 
  ABAL_ANLY_CODE_2     VARCHAR2 (6), 
  ABAL_CAL_MONTH       NUMBER (2), 
  ABAL_CAL_YEAR        NUMBER (4), 
  ABAL_LVL_CODE        NUMBER (6), 
  ABAL_CURR_CODE       VARCHAR2 (3), 
  ABAL_FC_BAL          NUMBER (14,3), 
  ABAL_LC_BAL          NUMBER (14,3) ) 
/

/
CREATE TABLE FW_BUDGET ( 
  MBUD_COMP_CODE       VARCHAR2 (3), 
  MBUD_DIVN_CODE       VARCHAR2 (6), 
  MBUD_DEPT_CODE       VARCHAR2 (6), 
  MBUD_MAIN_ACNT_CODE  VARCHAR2 (6), 
  MBUD_SUB_ACNT_CODE   VARCHAR2 (6), 
  MBUD_ANLY_CODE_1     VARCHAR2 (6), 
  MBUD_ANLY_CODE_2     VARCHAR2 (6), 
  MBUD_CAL_MONTH       NUMBER (2), 
  MBUD_CAL_YEAR        NUMBER (4), 
  MBUD_LVL_CODE        NUMBER (6), 
  MBUD_CURR_CODE       VARCHAR2 (3), 
  MBUD_LC_MTD_BUD      NUMBER (14,3), 
  MBUD_LC_YTD_BUD      NUMBER (14,3), 
  MBUD_LC_ANN_BUD      NUMBER (14,3) ) 
/

/
CREATE TABLE FW_COA_LEVEL_DET ( 
  LVLD_FORMAT_ID        NUMBER (2), 
  LVLD_CODE             NUMBER (6), 
  LVLD_SEQ_NO           NUMBER (6), 
  LVLD_LEVEL            NUMBER (2), 
  LVLD_LAST_LEVEL_FLAG  VARCHAR2 (1) ) 
/

/
CREATE TABLE FW_LEVEL ( 
  LS_FORMAT_ID  NUMBER (2), 
  LS_LVL_CODE   VARCHAR2 (6), 
  LS_LVL_SEQ    VARCHAR2 (27), 
  LS_LVL_TYPE   VARCHAR2 (1) ) 
/


CREATE INDEX FWX_LEVEL_1 ON 
  FW_LEVEL(LS_FORMAT_ID, LS_LVL_CODE) 

CREATE INDEX FWX_LEVEL_2 ON 
  FW_LEVEL(LS_FORMAT_ID, LS_LVL_SEQ) 

/

/
CREATE TABLE FW_LEVEL_BAL ( 
  LB_FORMAT_ID        NUMBER (2), 
  LB_LVL_CODE         NUMBER (6), 
  LB_LVL_NAME         VARCHAR2 (40), 
  LB_LVL_TYPE         VARCHAR2 (1), 
  LB_LVL_SEQ          NUMBER (6), 
  LB_PARENT_LVL_CODE  NUMBER (6), 
  LB_PREV_MTD_BAL     NUMBER (14,3), 
  LB_PREV_YTD_BAL     NUMBER (14,3), 
  LB_MTD_BAL          NUMBER (14,3), 
  LB_YTD_BAL          NUMBER (14,3), 
  LB_BUD_MTD_BAL      NUMBER (14,3), 
  LB_BUD_YTD_BAL      NUMBER (14,3), 
  LB_BUD_TOT_BAL      NUMBER (14,3) ) 
/

/
CREATE TABLE FW_LEVEL_BAL_1 ( 
  LB_FORMAT_ID        NUMBER (2), 
  LB_LVL_CODE         NUMBER (6), 
  LB_LVL_NAME         VARCHAR2 (40), 
  LB_LVL_TYPE         VARCHAR2 (1), 
  LB_LVL_SEQ          NUMBER (6), 
  LB_PARENT_LVL_CODE  NUMBER (6), 
  LB_COMP_CODE        VARCHAR2 (6), 
  LB_DIVN_CODE        VARCHAR2 (6), 
  LB_DEPT_CODE        VARCHAR2 (6), 
  LB_PREV_MTD_BAL     NUMBER (14,3), 
  LB_PREV_YTD_BAL     NUMBER (14,3), 
  LB_MTD_BAL          NUMBER (14,3), 
  LB_YTD_BAL          NUMBER (14,3), 
  LB_MTD_BUD          NUMBER (14,3), 
  LB_YTD_BUD          NUMBER (14,3), 
  LB_ANN_BUD          NUMBER (14,3) ) 
/


CREATE INDEX FNX_LEVEL_BAL_1 ON 
  FW_LEVEL_BAL_1(LB_FORMAT_ID, LB_LVL_CODE, LB_COMP_CODE, LB_DIVN_CODE, LB_DEPT_CODE) 

CREATE UNIQUE INDEX FUX_LEVEL_BAL_1 ON 
  FW_LEVEL_BAL_1(LB_COMP_CODE, LB_FORMAT_ID, LB_LVL_CODE, LB_DIVN_CODE, LB_DEPT_CODE) 

/

/
CREATE TABLE FW_LEVEL_BAL_CG ( 
  LB_CON_FORMAT_ID    NUMBER (2), 
  LB_FORMAT_ID        NUMBER (2), 
  LB_REPORT_ID        NUMBER (8), 
  LB_LVL_CODE         NUMBER (6), 
  LB_LVL_NAME         VARCHAR2 (40), 
  LB_LVL_TYPE         VARCHAR2 (1), 
  LB_LVL_SEQ          NUMBER (6), 
  LB_PARENT_LVL_CODE  NUMBER (6), 
  LB_PREV_MTD_BAL     NUMBER (14,3), 
  LB_PREV_YTD_BAL     NUMBER (14,3), 
  LB_MTD_BAL          NUMBER (14,3), 
  LB_YTD_BAL          NUMBER (14,3), 
  LB_MTD_BUD          NUMBER (14,3), 
  LB_YTD_BUD          NUMBER (14,3), 
  LB_ANN_BUD          NUMBER (14,3) ) 
/

/
CREATE TABLE FW_LEVEL_BAL_REP ( 
  LBR_FORMAT_ID     NUMBER (2), 
  LBR_LVL_CODE      NUMBER (6), 
  LBR_LVL_NAME      VARCHAR2 (50), 
  LBR_LVL_TYPE      VARCHAR2 (1), 
  LBR_LVL_SEQ       NUMBER (6), 
  LBR_DIVN_CODE     VARCHAR2 (6), 
  LBR_DEPT_CODE     VARCHAR2 (6), 
  LBR_PARENT_CODE   NUMBER (6), 
  LBR_BUD_MTD_BAL   NUMBER (14,3), 
  LBR_BUD_YTD_BAL   NUMBER (14,3), 
  LBR_BUD_TOT_BAL   NUMBER (14,3), 
  LBR_PREV_MTD_BAL  NUMBER (14,3), 
  LBR_PREV_YTD_BAL  NUMBER (14,3), 
  LBR_MTD_BAL       NUMBER (14,3), 
  LBR_YTD_BAL       NUMBER (14,3) ) 
/


CREATE INDEX FUX_LEVEL_BAL_REP ON 
  FW_LEVEL_BAL_REP(LBR_FORMAT_ID, LBR_LVL_CODE) 

/

/
CREATE TABLE FW_LEVEL_BAL_REP_CG ( 
  LBR_CON_FORMAT_ID  NUMBER (2), 
  LBR_FORMAT_ID      NUMBER (2), 
  LBR_REPORT_ID      NUMBER (8), 
  LBR_LVL_CODE       NUMBER (6), 
  LBR_LVL_NAME       VARCHAR2 (50), 
  LBR_LVL_TYPE       VARCHAR2 (1), 
  LBR_LVL_SEQ        NUMBER (6), 
  LBR_PARENT_CODE    NUMBER (6), 
  LBR_BUD_MTD_BAL    NUMBER (14,3), 
  LBR_BUD_YTD_BAL    NUMBER (14,3), 
  LBR_BUD_TOT_BAL    NUMBER (14,3), 
  LBR_PREV_MTD_BAL   NUMBER (14,3), 
  LBR_PREV_YTD_BAL   NUMBER (14,3), 
  LBR_MTD_BAL        NUMBER (14,3), 
  LBR_YTD_BAL        NUMBER (14,3) ) 
/

/
CREATE TABLE FW_LEVEL_BAL_TEMP ( 
  LB_FORMAT_ID        NUMBER (2), 
  LB_LVL_CODE         NUMBER (6), 
  LB_LVL_NAME         VARCHAR2 (40), 
  LB_LVL_TYPE         VARCHAR2 (1), 
  LB_LVL_SEQ          NUMBER (6), 
  LB_PARENT_LVL_CODE  NUMBER (6), 
  LB_COMP_CODE        VARCHAR2 (6), 
  LB_DIVN_CODE        VARCHAR2 (6), 
  LB_DEPT_CODE        VARCHAR2 (6), 
  LB_PREV_MTD_BAL     NUMBER (14,3), 
  LB_PREV_YTD_BAL     NUMBER (14,3), 
  LB_MTD_BAL          NUMBER (14,3), 
  LB_YTD_BAL          NUMBER (14,3), 
  LB_MTD_BUD          NUMBER (14,3), 
  LB_YTD_BUD          NUMBER (14,3), 
  LB_ANN_BUD          NUMBER (14,3) ) 
/

/
CREATE TABLE FW_LEVEL_SEQUENCE ( 
  LS_FORMAT_ID  NUMBER (2), 
  LS_LVL_CODE   VARCHAR2 (6), 
  LS_LVL_SEQ    VARCHAR2 (27) ) 
/


CREATE INDEX FW_LEVEL_SEQUENCE_01 ON 
  FW_LEVEL_SEQUENCE(LS_FORMAT_ID, LS_LVL_CODE) 

/

/
CREATE TABLE FW_MAIN_DEPT_SUM_REP ( 
  MYS_KEY_NO           NUMBER (6), 
  MYS_FORMAT_ID        NUMBER (2), 
  MYS_LVL_CODE         VARCHAR2 (6), 
  MYS_LVL_NAME         VARCHAR2 (50), 
  MYS_LVL_TYPE         VARCHAR2 (1), 
  MYS_LVL_SEQ          NUMBER (6), 
  MYS_PARENT_LVL_CODE  VARCHAR2 (6), 
  MYS_ACNT_YEAR        NUMBER (2), 
  MYS_DEPT_CODE        VARCHAR2 (6), 
  MYS_MAIN_ACNT_CODE   VARCHAR2 (6), 
  MYS_YTD_BAL_1        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_1    NUMBER (14,3), 
  MYS_YTD_BAL_2        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_2    NUMBER (14,3), 
  MYS_YTD_BAL_3        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_3    NUMBER (14,3), 
  MYS_YTD_BAL_4        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_4    NUMBER (14,3), 
  MYS_YTD_BAL_5        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_5    NUMBER (14,3), 
  MYS_YTD_BAL_6        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_6    NUMBER (14,3), 
  MYS_YTD_BAL_7        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_7    NUMBER (14,3), 
  MYS_YTD_BAL_O        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_O    NUMBER (14,3) ) 
/

/
CREATE TABLE FW_MAIN_LEVEL_BAL ( 
  MLB_FORMAT_ID        NUMBER (2), 
  MLB_LVL_CODE         NUMBER (6), 
  MLB_LVL_NAME         VARCHAR2 (40), 
  MLB_LVL_TYPE         VARCHAR2 (1), 
  MLB_LVL_SEQ          NUMBER (6), 
  MLB_PARENT_LVL_CODE  NUMBER (6), 
  MLB_COMP_CODE        VARCHAR2 (6), 
  MLB_DIVN_CODE        VARCHAR2 (6), 
  MLB_DEPT_CODE        VARCHAR2 (6), 
  MLB_MAIN_ACNT_CODE   VARCHAR2 (6), 
  MLB_PREV_MTD_BAL     NUMBER (14,3), 
  MLB_PREV_YTD_BAL     NUMBER (14,3), 
  MLB_MTD_BAL          NUMBER (14,3), 
  MLB_YTD_BAL          NUMBER (14,3), 
  MLB_MTD_BUD          NUMBER (14,3), 
  MLB_YTD_BUD          NUMBER (14,3), 
  MLB_ANN_BUD          NUMBER (14,3) ) 
/


CREATE UNIQUE INDEX FUX_MAIN_LEVEL_BAL ON 
  FW_MAIN_LEVEL_BAL(MLB_COMP_CODE, MLB_MAIN_ACNT_CODE, MLB_FORMAT_ID, MLB_LVL_CODE, MLB_DIVN_CODE, MLB_DEPT_CODE) 

/

/
CREATE TABLE FW_MAIN_LEVEL_SUM ( 
  MLS_KEY_NO            NUMBER (6), 
  MLS_FORMAT_ID         NUMBER (2), 
  MLS_LVL_CODE          VARCHAR2 (6), 
  MLS_LVL_NAME          VARCHAR2 (40), 
  MLS_LVL_TYPE          VARCHAR2 (1), 
  MLS_LVL_SEQ           NUMBER (6), 
  MLS_PARENT_LVL_CODE   VARCHAR2 (6), 
  MLS_ACNT_YEAR         NUMBER (2), 
  MLS_COMP_CODE         VARCHAR2 (6), 
  MLS_DIVN_CODE         VARCHAR2 (6), 
  MLS_DEPT_CODE         VARCHAR2 (6), 
  MLS_HEAD_NO_1         NUMBER (1), 
  MLS_ANLY_CODE_1       VARCHAR2 (6), 
  MLS_HEAD_NO_2         NUMBER (1), 
  MLS_ANLY_CODE_2       VARCHAR2 (6), 
  MLS_MAIN_ACNT_CODE    VARCHAR2 (6), 
  MLS_MTD_OPBAL         NUMBER (14,3), 
  MLS_MTD_BAL           NUMBER (14,3), 
  MLS_YTD_BAL           NUMBER (14,3), 
  MLS_YR_OPEN_BAL       NUMBER (14,3), 
  MLS_ANN_BAL           NUMBER (14,3), 
  MLS_PREV_MTD_OPBAL    NUMBER (14,3), 
  MLS_PREV_MTD_BAL      NUMBER (14,3), 
  MLS_PREV_YTD_BAL      NUMBER (14,3), 
  MLS_PREV_YR_OPEN_BAL  NUMBER (14,3), 
  MLS_PREV_ANN_BAL      NUMBER (14,3), 
  MLS_MTD_BUD           NUMBER (14,3), 
  MLS_YTD_BUD           NUMBER (14,3), 
  MLS_ANN_BUD           NUMBER (14,3), 
  MLS_NEXT_MTD_BUD      NUMBER (14,3), 
  MLS_NEXT_YTD_BUD      NUMBER (14,3), 
  MLS_NEXT_ANN_BUD      NUMBER (14,3), 
  MLS_M01_BUD           NUMBER (14,3), 
  MLS_M02_BUD           NUMBER (14,3), 
  MLS_M03_BUD           NUMBER (14,3), 
  MLS_M04_BUD           NUMBER (14,3), 
  MLS_M05_BUD           NUMBER (14,3), 
  MLS_M06_BUD           NUMBER (14,3), 
  MLS_M07_BUD           NUMBER (14,3), 
  MLS_M08_BUD           NUMBER (14,3), 
  MLS_M09_BUD           NUMBER (14,3), 
  MLS_M10_BUD           NUMBER (14,3), 
  MLS_M11_BUD           NUMBER (14,3), 
  MLS_M12_BUD           NUMBER (14,3) ) 
/


CREATE INDEX FWX_MAIN_LEVEL_SUM_1 ON 
  FW_MAIN_LEVEL_SUM(MLS_KEY_NO, MLS_FORMAT_ID, MLS_LVL_CODE) 

/

/
CREATE TABLE FW_MAIN_LEVEL_SUM_REP ( 
  MLS_KEY_NO            NUMBER (6), 
  MLS_FORMAT_ID         NUMBER (2), 
  MLS_LVL_CODE          VARCHAR2 (6), 
  MLS_LVL_NAME          VARCHAR2 (50), 
  MLS_LVL_TYPE          VARCHAR2 (1), 
  MLS_LVL_SEQ           NUMBER (6), 
  MLS_PARENT_LVL_CODE   VARCHAR2 (6), 
  MLS_ACNT_YEAR         NUMBER (2), 
  MLS_DIVN_CODE         VARCHAR2 (6), 
  MLS_DEPT_CODE         VARCHAR2 (6), 
  MLS_MAIN_ACNT_CODE    VARCHAR2 (6), 
  MLS_MTD_BAL           NUMBER (14,3), 
  MLS_YTD_BAL           NUMBER (14,3), 
  MLS_YR_OPEN_BAL       NUMBER (14,3), 
  MLS_ANN_BAL           NUMBER (14,3), 
  MLS_PREV_MTD_BAL      NUMBER (14,3), 
  MLS_PREV_YTD_BAL      NUMBER (14,3), 
  MLS_PREV_YR_OPEN_BAL  NUMBER (14,3), 
  MLS_PREV_ANN_BAL      NUMBER (14,3), 
  MLS_MTD_BUD           NUMBER (14,3), 
  MLS_YTD_BUD           NUMBER (14,3), 
  MLS_ANN_BUD           NUMBER (14,3), 
  MLS_NEXT_MTD_BUD      NUMBER (14,3), 
  MLS_NEXT_YTD_BUD      NUMBER (14,3), 
  MLS_NEXT_ANN_BUD      NUMBER (14,3), 
  MLS_M01_BUD           NUMBER (14,3), 
  MLS_M02_BUD           NUMBER (14,3), 
  MLS_M03_BUD           NUMBER (14,3), 
  MLS_M04_BUD           NUMBER (14,3), 
  MLS_M05_BUD           NUMBER (14,3), 
  MLS_M06_BUD           NUMBER (14,3), 
  MLS_M07_BUD           NUMBER (14,3), 
  MLS_M08_BUD           NUMBER (14,3), 
  MLS_M09_BUD           NUMBER (14,3), 
  MLS_M10_BUD           NUMBER (14,3), 
  MLS_M11_BUD           NUMBER (14,3), 
  MLS_M12_BUD           NUMBER (14,3) ) 
/

/
CREATE TABLE FW_MAIN_LEVEL_SUM_TEMP ( 
  MLS_KEY_NO            NUMBER (6), 
  MLS_FORMAT_ID         NUMBER (2), 
  MLS_LVL_CODE          VARCHAR2 (6), 
  MLS_ACNT_YEAR         NUMBER (2), 
  MLS_COMP_CODE         VARCHAR2 (6), 
  MLS_DIVN_CODE         VARCHAR2 (6), 
  MLS_DEPT_CODE         VARCHAR2 (6), 
  MLS_HEAD_NO_1         NUMBER (1), 
  MLS_ANLY_CODE_1       VARCHAR2 (6), 
  MLS_HEAD_NO_2         NUMBER (1), 
  MLS_ANLY_CODE_2       VARCHAR2 (6), 
  MLS_MAIN_ACNT_CODE    VARCHAR2 (6), 
  MLS_MTD_OPBAL         NUMBER (14,3) DEFAULT 0, 
  MLS_MTD_BAL           NUMBER (14,3) DEFAULT 0, 
  MLS_YTD_BAL           NUMBER (14,3) DEFAULT 0, 
  MLS_YR_OPEN_BAL       NUMBER (14,3) DEFAULT 0, 
  MLS_ANN_BAL           NUMBER (14,3) DEFAULT 0, 
  MLS_PREV_MTD_OPBAL    NUMBER (14,3) DEFAULT 0, 
  MLS_PREV_MTD_BAL      NUMBER (14,3) DEFAULT 0, 
  MLS_PREV_YTD_BAL      NUMBER (14,3) DEFAULT 0, 
  MLS_PREV_YR_OPEN_BAL  NUMBER (14,3) DEFAULT 0, 
  MLS_PREV_ANN_BAL      NUMBER (14,3) DEFAULT 0, 
  MLS_MTD_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_YTD_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_ANN_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_NEXT_MTD_BUD      NUMBER (14,3) DEFAULT 0, 
  MLS_NEXT_YTD_BUD      NUMBER (14,3) DEFAULT 0, 
  MLS_NEXT_ANN_BUD      NUMBER (14,3) DEFAULT 0, 
  MLS_M01_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M02_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M03_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M04_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M05_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M06_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M07_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M08_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M09_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M10_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M11_BUD           NUMBER (14,3) DEFAULT 0, 
  MLS_M12_BUD           NUMBER (14,3) DEFAULT 0 ) 
/


CREATE INDEX FWX_MAIN_LEVEL_SUM_TEMP_1 ON 
  FW_MAIN_LEVEL_SUM_TEMP(MLS_KEY_NO, MLS_FORMAT_ID, MLS_LVL_CODE) 

/

/
CREATE TABLE FW_MAIN_YEAR_SUM ( 
  MYS_KEY_NO           NUMBER (6), 
  MYS_FORMAT_ID        NUMBER (2), 
  MYS_LVL_CODE         VARCHAR2 (6), 
  MYS_LVL_NAME         VARCHAR2 (40), 
  MYS_LVL_TYPE         VARCHAR2 (1), 
  MYS_LVL_SEQ          NUMBER (6), 
  MYS_PARENT_LVL_CODE  VARCHAR2 (6), 
  MYS_ACNT_YEAR        NUMBER (2), 
  MYS_COMP_CODE        VARCHAR2 (6), 
  MYS_DIVN_CODE        VARCHAR2 (6), 
  MYS_DEPT_CODE        VARCHAR2 (6), 
  MYS_HEAD_NO_1        NUMBER (1), 
  MYS_ANLY_CODE_1      VARCHAR2 (6), 
  MYS_HEAD_NO_2        NUMBER (1), 
  MYS_ANLY_CODE_2      VARCHAR2 (6), 
  MYS_MAIN_ACNT_CODE   VARCHAR2 (6), 
  MYS_YTD_BAL_1        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_1    NUMBER (14,3), 
  MYS_ANN_BUD_1        NUMBER (14,3), 
  MYS_YTD_BAL_2        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_2    NUMBER (14,3), 
  MYS_ANN_BUD_2        NUMBER (14,3), 
  MYS_YTD_BAL_3        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_3    NUMBER (14,3), 
  MYS_ANN_BUD_3        NUMBER (14,3), 
  MYS_YTD_BAL_4        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_4    NUMBER (14,3), 
  MYS_ANN_BUD_4        NUMBER (14,3), 
  MYS_YTD_BAL_5        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_5    NUMBER (14,3), 
  MYS_ANN_BUD_5        NUMBER (14,3) ) 
/


CREATE INDEX FWX_MAIN_YEAR_SUM_1 ON 
  FW_MAIN_YEAR_SUM(MYS_KEY_NO, MYS_FORMAT_ID, MYS_LVL_CODE) 

/

/
CREATE TABLE FW_MAIN_YEAR_SUM_REP ( 
  MYS_KEY_NO           NUMBER (6), 
  MYS_FORMAT_ID        NUMBER (2), 
  MYS_LVL_CODE         VARCHAR2 (6), 
  MYS_LVL_NAME         VARCHAR2 (50), 
  MYS_LVL_TYPE         VARCHAR2 (1), 
  MYS_LVL_SEQ          NUMBER (6), 
  MYS_PARENT_LVL_CODE  VARCHAR2 (6), 
  MYS_ACNT_YEAR        NUMBER (2), 
  MYS_DEPT_CODE        VARCHAR2 (6), 
  MYS_MAIN_ACNT_CODE   VARCHAR2 (6), 
  MYS_YTD_BAL_1        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_1    NUMBER (14,3), 
  MYS_ANN_BUD_1        NUMBER (14,3), 
  MYS_YTD_BAL_2        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_2    NUMBER (14,3), 
  MYS_ANN_BUD_2        NUMBER (14,3), 
  MYS_YTD_BAL_3        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_3    NUMBER (14,3), 
  MYS_ANN_BUD_3        NUMBER (14,3), 
  MYS_YTD_BAL_4        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_4    NUMBER (14,3), 
  MYS_ANN_BUD_4        NUMBER (14,3), 
  MYS_YTD_BAL_5        NUMBER (14,3), 
  MYS_YR_OPEN_BAL_5    NUMBER (14,3), 
  MYS_ANN_BUD_5        NUMBER (14,3) ) 
/

/
CREATE TABLE FW_MAIN_YEAR_SUM_TEMP ( 
  MYS_KEY_NO          NUMBER (6), 
  MYS_FORMAT_ID       NUMBER (2), 
  MYS_LVL_CODE        VARCHAR2 (6), 
  MYS_ACNT_YEAR       NUMBER (2), 
  MYS_COMP_CODE       VARCHAR2 (6), 
  MYS_DIVN_CODE       VARCHAR2 (6), 
  MYS_DEPT_CODE       VARCHAR2 (6), 
  MYS_HEAD_NO_1       NUMBER (1), 
  MYS_ANLY_CODE_1     VARCHAR2 (6), 
  MYS_HEAD_NO_2       NUMBER (1), 
  MYS_ANLY_CODE_2     VARCHAR2 (6), 
  MYS_MAIN_ACNT_CODE  VARCHAR2 (6), 
  MYS_YTD_BAL         NUMBER (14,3) DEFAULT 0, 
  MYS_YR_OPEN_BAL     NUMBER (14,3) DEFAULT 0, 
  MYS_ANN_BUD         NUMBER (14,3) DEFAULT 0 ) 
/


CREATE INDEX FWX_MAIN_YEAR_SUM_TEMP_1 ON 
  FW_MAIN_YEAR_SUM_TEMP(MYS_KEY_NO, MYS_FORMAT_ID, MYS_LVL_CODE) 

/

/
CREATE TABLE FW_TEMP_OS ( 
  OST_KEY_NO             NUMBER (8), 
  OST_COMP_CODE          VARCHAR2 (3), 
  OST_TRAN_CODE          VARCHAR2 (3), 
  OST_DOC_NO             NUMBER (6), 
  OST_SEQ_NO             NUMBER (3), 
  OST_ACNT_YEAR          NUMBER (2), 
  OST_DOC_DT             DATE, 
  OST_DOC_CAL_YEAR       NUMBER (4), 
  OST_DOC_CAL_MONTH      NUMBER (2), 
  OST_DUE_DT             DATE, 
  OST_MAIN_ACNT_CODE     VARCHAR2 (6), 
  OST_SUB_ACNT_CODE      VARCHAR2 (6), 
  OST_DIVN_CODE          VARCHAR2 (6), 
  OST_DEPT_CODE          VARCHAR2 (6), 
  OST_HEAD_NO_1          NUMBER (1), 
  OST_ANLY_CODE_1        VARCHAR2 (6), 
  OST_HEAD_NO_2          NUMBER (1), 
  OST_ANLY_CODE_2        VARCHAR2 (6), 
  OST_ACTY_CODE_1        VARCHAR2 (6), 
  OST_ACTY_CODE_2        VARCHAR2 (6), 
  OST_CURR_CODE          VARCHAR2 (3), 
  OST_LC_AMT             NUMBER (14,3), 
  OST_FC_AMT             NUMBER (14,3), 
  OST_DRCR_FLAG          VARCHAR2 (1), 
  OST_DOC_REF            VARCHAR2 (15), 
  OST_DOC_REF_DT         DATE, 
  OST_OTH_REF            VARCHAR2 (15), 
  OST_LC_ADJ_AMT         NUMBER (14,3), 
  OST_FC_ADJ_AMT         NUMBER (14,3), 
  OST_LC_PDC_AMT         NUMBER (14,3), 
  OST_FC_PDC_AMT         NUMBER (14,3), 
  OST_LC_UNP_AMT         NUMBER (14,3), 
  OST_FC_UNP_AMT         NUMBER (14,3), 
  OST_LC_UNDEP_AMT       NUMBER (14,3), 
  OST_FC_UNDEP_AMT       NUMBER (14,3), 
  OST_LC_ORG_AMT         NUMBER (14,3), 
  OST_FC_ORG_AMT         NUMBER (14,3), 
  OST_REF_KEY_NO         NUMBER (8), 
  OST_REF_COMP_CODE      VARCHAR2 (3), 
  OST_REF_ACNT_YEAR      NUMBER (2), 
  OST_REF_TRAN_CODE      VARCHAR2 (3), 
  OST_REF_SEQ_NO         NUMBER (3), 
  OST_REF_DOC_NO         NUMBER (6), 
  OST_REF_DOC_DT         DATE, 
  OST_REF_DOC_CAL_YEAR   NUMBER (4), 
  OST_REF_DOC_CAL_MONTH  NUMBER (2), 
  OST_REF_DUE_DT         DATE, 
  OST_LAST_MATCH_DT      DATE, 
  OST_TYPE               VARCHAR2 (1), 
  OST_CR_UID             VARCHAR2 (10), 
  OST_CR_DT              DATE ) 
/

/
CREATE TABLE KM_SA_BR_CUST2CHAR ( 
  SA_DIVN_CODE          VARCHAR2 (6)  NOT NULL, 
  SA_CUST_FIRST_2_CHAR  VARCHAR2 (2)  NOT NULL, 
  CONSTRAINT KMSABRCUST2CHAR_PK
  PRIMARY KEY ( SA_CUST_FIRST_2_CHAR ) ) 
/

/
CREATE TABLE KT_LAST_PAYMENT ( 
  KT_TD_DIVN_CODE      VARCHAR2 (6)  NOT NULL, 
  KT_TD_SUB_ACNT_CODE  VARCHAR2 (6)  NOT NULL, 
  KT_TD_CURR_CODE      VARCHAR2 (3)  NOT NULL, 
  KT_DOC_DT            DATE          NOT NULL, 
  KT_DOC_LC_AMT        NUMBER (14,3), 
  KT_DOC_FC_AMT        NUMBER (14,3) ) 
/

/
CREATE TABLE KT_LAST_PAYMENT_05 ( 
  KT_TD_DIVN_CODE      VARCHAR2 (6)  NOT NULL, 
  KT_TD_SUB_ACNT_CODE  VARCHAR2 (6)  NOT NULL, 
  KT_TD_CURR_CODE      VARCHAR2 (3)  NOT NULL, 
  KT_DOC_DT            DATE          NOT NULL, 
  KT_DOC_LC_AMT        NUMBER (14,3), 
  KT_DOC_FC_AMT        NUMBER (14,3) ) 
/


CREATE INDEX KT_DIVN_SUB_CURR ON 
  KT_LAST_PAYMENT_05(KT_TD_DIVN_CODE, KT_TD_SUB_ACNT_CODE, KT_TD_CURR_CODE) 

/

/
CREATE TABLE MENU_LINE_HELP ( 
  LH_FLD_NAME     VARCHAR2 (30), 
  LH_HELP_LINE    VARCHAR2 (70), 
  LH_CR_DATE      DATE, 
  LH_CR_USER_ID   VARCHAR2 (10), 
  LH_UPD_DATE     DATE, 
  LH_UPD_USER_ID  VARCHAR2 (10) ) 
/

/
CREATE TABLE MENU_MAIL_CREATE ( 
  MAIL_KEY_NO    NUMBER (8), 
  MAIL_SENDER    VARCHAR2 (5), 
  MAIL_RECEIVER  VARCHAR2 (5), 
  MAIL_SUBJECT   VARCHAR2 (65), 
  MAIL_MSG_1     VARCHAR2 (65), 
  MAIL_MSG_2     VARCHAR2 (65), 
  MAIL_MSG_3     VARCHAR2 (65), 
  MAIL_MSG_4     VARCHAR2 (65), 
  MAIL_MSG_5     VARCHAR2 (65), 
  MAIL_MSG_6     VARCHAR2 (65), 
  MAIL_MSG_7     VARCHAR2 (65), 
  MAIL_MSG_8     VARCHAR2 (65), 
  MAIL_MSG_9     VARCHAR2 (65), 
  MAIL_MSG_10    VARCHAR2 (65), 
  MAIL_STATUS    VARCHAR2 (1), 
  MAIL_UPD_UID   VARCHAR2 (5), 
  MAIL_UPD_DT    DATE, 
  MAIL_CR_UID    VARCHAR2 (5), 
  MAIL_CR_DT     DATE ) 
/

/
CREATE TABLE MENU_MAIL_USER ( 
  MU_MAIL_KEY_NO    NUMBER (8), 
  MU_USER_RECEIVER  VARCHAR2 (5), 
  MU_SEQ_NO         NUMBER (2), 
  MU_CR_UID         VARCHAR2 (5), 
  MU_CR_DT          DATE ) 
/

/
CREATE TABLE MENU_MENUS ( 
  MENU_ID              VARCHAR2 (10), 
  MENU_SCR_NAME        VARCHAR2 (30), 
  MENU_OPTION          VARCHAR2 (2), 
  MENU_OPTION_DESC     VARCHAR2 (50), 
  MENU_HELP_TEXT1      VARCHAR2 (60), 
  MENU_HELP_TEXT2      VARCHAR2 (60), 
  MENU_PARENT_ID       VARCHAR2 (10), 
  MENU_ACTION_TYPE     VARCHAR2 (1), 
  MENU_ACTION          VARCHAR2 (60), 
  MENU_MODE            VARCHAR2 (10), 
  MENU_PASS_FLAG       VARCHAR2 (1), 
  MENU_DISP_SEQ_NO     NUMBER (3), 
  MENU_PARAMETER_1     VARCHAR2 (250), 
  MENU_PARAMETER_2     VARCHAR2 (250), 
  MENU_PARAMETER_3     VARCHAR2 (250), 
  MENU_PARAMETER_4     VARCHAR2 (250), 
  MENU_PARAMETER_5     VARCHAR2 (250), 
  MENU_PARAMETER_6     VARCHAR2 (250), 
  MENU_PARAMETER_7     VARCHAR2 (250), 
  MENU_PARAMETER_8     VARCHAR2 (250), 
  MENU_PARAMETER_9     VARCHAR2 (250), 
  MENU_PARAMETER_10    VARCHAR2 (250), 
  MENU_CR_DATE         DATE, 
  MENU_CR_USER_ID      VARCHAR2 (10), 
  MENU_UPD_DATE        DATE, 
  MENU_UPD_USER_ID     VARCHAR2 (10), 
  MENU_SEQ_NO          VARCHAR2 (30), 
  MENU_SCR_NAME_BL     VARCHAR2 (30), 
  MENU_OPTION_DESC_BL  VARCHAR2 (50), 
  MENU_HELP_TEXT1_BL   VARCHAR2 (60), 
  MENU_HELP_TEXT2_BL   VARCHAR2 (60) ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007117 CHECK  ( MENU_ACTION_TYPE IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007118 CHECK  ( MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007119 CHECK  ( MENU_SCR_NAME IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007120 CHECK  ( MENU_OPTION IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007121 CHECK  ( MENU_OPTION_DESC IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007122 CHECK  ( MENU_PARENT_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007099 CHECK  ( MENU_ACTION_TYPE IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007100 CHECK  ( MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007101 CHECK  ( MENU_SCR_NAME IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007102 CHECK  ( MENU_OPTION IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007103 CHECK  ( MENU_OPTION_DESC IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018686 CHECK  ( MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018687 CHECK  ( MENU_SCR_NAME IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018688 CHECK  ( MENU_OPTION IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018689 CHECK  ( MENU_OPTION_DESC IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018690 CHECK  ( MENU_PARENT_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C0018691 CHECK  ( MENU_ACTION_TYPE IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00477 CHECK  ( MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00478 CHECK  ( MENU_SCR_NAME IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00479 CHECK  ( MENU_OPTION IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00480 CHECK  ( MENU_OPTION_DESC IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00481 CHECK  ( MENU_PARENT_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
FIN_C00482 CHECK  ( MENU_ACTION_TYPE IS NOT NULL  ) 
/

ALTER TABLE MENU_MENUS ADD CONSTRAINT 
SYS_C007116 CHECK  ( MENU_PARENT_ID IS NOT NULL  ) 
/




CREATE INDEX MENU_MENUS_1 ON 
  MENU_MENUS(MENU_ID) 

CREATE INDEX NUX_MENU_MENUS_01 ON 
  MENU_MENUS(MENU_PARENT_ID) 

/

/
CREATE TABLE MENU_PAGE_HELP ( 
  PH_FLD_NAME     VARCHAR2 (30), 
  PH_SEQ_NO       NUMBER (4), 
  PH_HELP_LINE    VARCHAR2 (70), 
  PH_CR_DATE      DATE, 
  PH_CR_USER_ID   VARCHAR2 (10), 
  PH_UPD_DATE     DATE, 
  PH_UPD_USER_ID  VARCHAR2 (10) ) 
/

/
CREATE TABLE MENU_PARAMETER ( 
  P_ID           VARCHAR2 (10), 
  P_NO           NUMBER (3), 
  P_DESC         VARCHAR2 (30), 
  P_VALUE        VARCHAR2 (50), 
  P_CR_DATE      DATE, 
  P_CR_USER_ID   VARCHAR2 (10), 
  P_UPD_DATE     DATE, 
  P_UPD_USER_ID  VARCHAR2 (10) ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
FIN_C0018692 CHECK  ( P_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
FIN_C0018693 CHECK  ( P_NO IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
FIN_C00483 CHECK  ( P_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
FIN_C00484 CHECK  ( P_NO IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
SYS_C007127 CHECK  ( P_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
SYS_C007128 CHECK  ( P_NO IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
SYS_C007129 CHECK  ( P_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_PARAMETER ADD CONSTRAINT 
SYS_C007130 CHECK  ( P_NO IS NOT NULL  ) 
/



/
CREATE TABLE MENU_PRINTER ( 
  PRINTER_CODE            VARCHAR2 (2), 
  PRINTER_DESC            VARCHAR2 (30), 
  PRINTER_COMMAND1        VARCHAR2 (30), 
  PRINTER_COMMAND2        VARCHAR2 (30), 
  PRINTER_BL_DESC         VARCHAR2 (30), 
  PRINTER_HOST_PQ         VARCHAR2 (1), 
  PRINTER_PQ_NAME         VARCHAR2 (30), 
  PRINTER_COMMAND_SUFFIX  VARCHAR2 (30) ) 
/

/
CREATE TABLE MENU_PRINTER_FORMAT ( 
  PF_PRN_CODE            VARCHAR2 (10), 
  PF_CODE                VARCHAR2 (10), 
  PF_DESC                VARCHAR2 (30), 
  PF_BL_DESC             VARCHAR2 (30), 
  PF_WIDTH_HEIGHT        VARCHAR2 (10), 
  PF_LANDSCAPE_PORTRAIT  VARCHAR2 (10) ) 
/

/
CREATE TABLE MENU_REP ( 
  REP_NAME          VARCHAR2 (8), 
  REP_NO            VARCHAR2 (6), 
  REP_DESC          VARCHAR2 (30), 
  REP_PRINTER_CODE  VARCHAR2 (2), 
  REP_OVERRIDE_YN   VARCHAR2 (1), 
  REP_COPIES        NUMBER (1) ) 
/

/
CREATE TABLE MENU_REPORT_PRINTER ( 
  RP_REPORT_ID    VARCHAR2 (10), 
  RP_DESC         VARCHAR2 (30), 
  RP_WIDTH        NUMBER (3), 
  RP_VPS          VARCHAR2 (1), 
  RP_COPIES       NUMBER (3), 
  RP_PRN_CODE     VARCHAR2 (10), 
  RP_PF_CODE      VARCHAR2 (10), 
  RP_OVERRIDE_YN  VARCHAR2 (1) ) 
/

/
CREATE TABLE MENU_REPORT_USER_PRINTER ( 
  RUP_REPORT_ID    VARCHAR2 (10), 
  RUP_USER_ID      VARCHAR2 (10), 
  RUP_VPS          VARCHAR2 (1), 
  RUP_COPIES       NUMBER (3), 
  RUP_PRN_CODE     VARCHAR2 (10), 
  RUP_PF_CODE      VARCHAR2 (10), 
  RUP_OVERRIDE_YN  VARCHAR2 (1) ) 
/

/
CREATE TABLE MENU_REP_DETL ( 
  REPD_NAME          VARCHAR2 (8), 
  REPD_USERID        VARCHAR2 (10), 
  REPD_PRINTER_CODE  VARCHAR2 (2), 
  REPD_OVERRIDE_YN   VARCHAR2 (1), 
  REPD_COPIES        NUMBER (1) ) 
/

/
CREATE TABLE MENU_REP_INFO ( 
  REP_CODE      VARCHAR2 (15), 
  REP_TERM_ID   VARCHAR2 (15), 
  REP_VALUE_1   VARCHAR2 (15), 
  REP_VALUE_2   VARCHAR2 (15), 
  REP_VALUE_3   VARCHAR2 (15), 
  REP_VALUE_4   VARCHAR2 (15), 
  REP_VALUE_5   VARCHAR2 (15), 
  REP_VALUE_6   VARCHAR2 (15), 
  REP_VALUE_7   VARCHAR2 (15), 
  REP_VALUE_8   VARCHAR2 (15), 
  REP_VALUE_9   VARCHAR2 (15), 
  REP_VALUE_10  VARCHAR2 (15), 
  REP_VALUE_11  VARCHAR2 (15), 
  REP_VALUE_12  VARCHAR2 (15), 
  REP_VALUE_13  VARCHAR2 (15), 
  REP_VALUE_14  VARCHAR2 (15), 
  REP_VALUE_15  VARCHAR2 (15) ) 
/

/
CREATE TABLE MENU_SCR_PASS ( 
  MSP_MENU_ID      VARCHAR2 (10), 
  MSP_PASSWORD     VARCHAR2 (10), 
  MSP_PI           VARCHAR2 (1), 
  MSP_PU           VARCHAR2 (1), 
  MSP_PD           VARCHAR2 (1), 
  MSP_PQ           VARCHAR2 (1), 
  MSP_CR_DATE      DATE, 
  MSP_CR_USER_ID   VARCHAR2 (10), 
  MSP_UPD_DATE     DATE, 
  MSP_UPD_USER_ID  VARCHAR2 (10) ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
FIN_C00485 CHECK  ( MSP_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
FIN_C00486 CHECK  ( MSP_PASSWORD IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
SYS_C007132 CHECK  ( MSP_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
SYS_C007133 CHECK  ( MSP_PASSWORD IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
SYS_C007134 CHECK  ( MSP_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
SYS_C007135 CHECK  ( MSP_PASSWORD IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
FIN_C0018694 CHECK  ( MSP_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_SCR_PASS ADD CONSTRAINT 
FIN_C0018695 CHECK  ( MSP_PASSWORD IS NOT NULL  ) 
/



/
CREATE TABLE MENU_USER ( 
  USER_ID                  VARCHAR2 (10), 
  USER_PASSWD              VARCHAR2 (20), 
  USER_GROUP_ID            VARCHAR2 (5), 
  USER_DESC                VARCHAR2 (30), 
  USER_BL_DESC             VARCHAR2 (30), 
  USER_START_MENU_ID       VARCHAR2 (10), 
  USER_ASK_PASSWD_FLAG     VARCHAR2 (1), 
  USER_CHANGE_PASSWD_FLAG  VARCHAR2 (1), 
  USER_DISABLE_FLAG        VARCHAR2 (1), 
  USER_DEFAULT_PRINTER     VARCHAR2 (15), 
  USER_REP_USERID_PASSWD   VARCHAR2 (30), 
  USER_TEL_NO              VARCHAR2 (15), 
  USER_TEL_EXTN            VARCHAR2 (5), 
  USER_FAX_NO              VARCHAR2 (15), 
  USER_LOGIN_COUNT         NUMBER (3), 
  USER_EXT_YN              VARCHAR2 (1), 
  USER_VPS_FLAG            VARCHAR2 (1), 
  USER_COPIES              NUMBER (3), 
  USER_PRN_CODE            VARCHAR2 (10), 
  USER_PF_CODE             VARCHAR2 (10), 
  USER_OVERRIDE_YN         VARCHAR2 (1), 
  USER_CR_DATE             DATE, 
  USER_CR_USER_ID          VARCHAR2 (10), 
  USER_UPD_DATE            DATE, 
  USER_UPD_USER_ID         VARCHAR2 (10), 
  USER_COMP_CODE           VARCHAR2 (3), 
  USER_VPS                 VARCHAR2 (1) ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C0018697 CHECK  ( USER_PASSWD IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C0018696 CHECK  ( USER_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C0018698 CHECK  ( USER_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C00487 CHECK  ( USER_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C00488 CHECK  ( USER_PASSWD IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
FIN_C00489 CHECK  ( USER_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007145 CHECK  ( USER_PASSWD IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007146 CHECK  ( USER_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007147 CHECK  ( USER_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007148 CHECK  ( USER_PASSWD IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007149 CHECK  ( USER_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER ADD CONSTRAINT 
SYS_C007150 CHECK  ( USER_ID IS NOT NULL  ) 
/



/
CREATE TABLE MENU_USER_1 ( 
  USER_ID                  VARCHAR2 (10), 
  USER_PASSWD              VARCHAR2 (20), 
  USER_GROUP_ID            VARCHAR2 (5), 
  USER_DESC                VARCHAR2 (30), 
  USER_BL_DESC             VARCHAR2 (30), 
  USER_START_MENU_ID       VARCHAR2 (10), 
  USER_ASK_PASSWD_FLAG     VARCHAR2 (1), 
  USER_CHANGE_PASSWD_FLAG  VARCHAR2 (1), 
  USER_DISABLE_FLAG        VARCHAR2 (1), 
  USER_DEFAULT_PRINTER     VARCHAR2 (15), 
  USER_REP_USERID_PASSWD   VARCHAR2 (30), 
  USER_TEL_NO              VARCHAR2 (15), 
  USER_TEL_EXTN            VARCHAR2 (5), 
  USER_FAX_NO              VARCHAR2 (15), 
  USER_LOGIN_COUNT         NUMBER (3), 
  USER_EXT_YN              VARCHAR2 (1), 
  USER_VPS                 VARCHAR2 (1), 
  USER_COPIES              NUMBER (3), 
  USER_PRN_CODE            VARCHAR2 (10), 
  USER_PF_CODE             VARCHAR2 (10), 
  USER_OVERRIDE_YN         VARCHAR2 (1), 
  USER_CR_DATE             DATE, 
  USER_CR_USER_ID          VARCHAR2 (10), 
  USER_UPD_DATE            DATE, 
  USER_UPD_USER_ID         VARCHAR2 (10), 
  USER_COMP_CODE           VARCHAR2 (3) ) 
/

/
CREATE TABLE MENU_USER_COMP ( 
  MUC_USER_ID    VARCHAR2 (10), 
  MUC_COMP_CODE  VARCHAR2 (3), 
  MUC_CR_UID     VARCHAR2 (10), 
  MUC_CR_DT      DATE ) 
/

/
CREATE TABLE MENU_USER_COMP_DIVN ( 
  MUCD_USER_ID    VARCHAR2 (10), 
  MUCD_COMP_CODE  VARCHAR2 (3), 
  MUCD_DIVN_CODE  VARCHAR2 (6), 
  MUCD_DEPT_CODE  VARCHAR2 (6), 
  MUCD_CR_UID     VARCHAR2 (10), 
  MUCD_CR_DT      DATE ) 
/

/
CREATE TABLE MENU_USER_GROUP ( 
  UG_ID           VARCHAR2 (5), 
  UG_DESC         VARCHAR2 (30), 
  UG_CR_DATE      DATE, 
  UG_CR_USER_ID   VARCHAR2 (10), 
  UG_UPD_DATE     DATE, 
  UG_UPD_USER_ID  VARCHAR2 (10) ) 
/

ALTER TABLE MENU_USER_GROUP ADD CONSTRAINT 
FIN_C0018699 CHECK  ( UG_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_GROUP ADD CONSTRAINT 
FIN_C00490 CHECK  ( UG_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_GROUP ADD CONSTRAINT 
SYS_C007153 CHECK  ( UG_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_GROUP ADD CONSTRAINT 
SYS_C007154 CHECK  ( UG_ID IS NOT NULL  ) 
/



/
CREATE TABLE MENU_USER_MENUS ( 
  UM_MENU_ID      VARCHAR2 (10), 
  UM_GROUP_ID     VARCHAR2 (10), 
  UM_PI           VARCHAR2 (1), 
  UM_PU           VARCHAR2 (1), 
  UM_PD           VARCHAR2 (1), 
  UM_PQ           VARCHAR2 (1), 
  UM_MODE         VARCHAR2 (10), 
  UM_CR_DATE      DATE, 
  UM_CR_USER_ID   VARCHAR2 (10), 
  UM_UPD_DATE     DATE, 
  UM_UPD_USER_ID  VARCHAR2 (10) ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
FIN_C0018700 CHECK  ( UM_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
FIN_C0018701 CHECK  ( UM_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
FIN_C00491 CHECK  ( UM_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
FIN_C00492 CHECK  ( UM_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
SYS_C007155 CHECK  ( UM_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
SYS_C007156 CHECK  ( UM_GROUP_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
SYS_C007157 CHECK  ( UM_MENU_ID IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_MENUS ADD CONSTRAINT 
SYS_C007158 CHECK  ( UM_GROUP_ID IS NOT NULL  ) 
/




CREATE UNIQUE INDEX MENU_USER_MENUS_1 ON 
  MENU_USER_MENUS(UM_GROUP_ID, UM_MENU_ID) 

/

/
CREATE TABLE MENU_USER_SUPERVISOR ( 
  MUS_USER        VARCHAR2 (5), 
  MUS_SUPERVISOR  VARCHAR2 (5), 
  MUS_CR_UID      VARCHAR2 (5), 
  MUS_CR_DT       DATE, 
  MUS_UPD_UID     VARCHAR2 (5), 
  MUS_UPD_DT      DATE ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
SYS_C007163 CHECK  ( MUS_USER IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
SYS_C007164 CHECK  ( MUS_SUPERVISOR IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
SYS_C007165 CHECK  ( MUS_USER IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
SYS_C007166 CHECK  ( MUS_SUPERVISOR IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
FIN_C0018702 CHECK  ( MUS_USER IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
FIN_C0018703 CHECK  ( MUS_SUPERVISOR IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
FIN_C00493 CHECK  ( MUS_USER IS NOT NULL  ) 
/

ALTER TABLE MENU_USER_SUPERVISOR ADD CONSTRAINT 
FIN_C00494 CHECK  ( MUS_SUPERVISOR IS NOT NULL  ) 
/



/
CREATE TABLE MONTH0_RECORDS ( 
  ABAL_COMP_CODE       VARCHAR2 (3), 
  ABAL_ACNT_YEAR       NUMBER (2), 
  ABAL_MAIN_ACNT_CODE  VARCHAR2 (6), 
  ABAL_SUB_ACNT_CODE   VARCHAR2 (6), 
  ABAL_DIVN_CODE       VARCHAR2 (6), 
  ABAL_DEPT_CODE       VARCHAR2 (6), 
  ABAL_HEAD_NO_1       NUMBER (1), 
  ABAL_ANLY_CODE_1     VARCHAR2 (6), 
  ABAL_HEAD_NO_2       NUMBER (1), 
  ABAL_ANLY_CODE_2     VARCHAR2 (6), 
  ABAL_CAL_YEAR        NUMBER (4), 
  ABAL_CAL_MONTH       NUMBER (2), 
  ABAL_CURR_CODE       VARCHAR2 (3), 
  ABAL_LC_MTD_DR       NUMBER (14,3), 
  ABAL_LC_MTD_CR       NUMBER (14,3), 
  ABAL_FC_MTD_DR       NUMBER (14,3), 
  ABAL_FC_MTD_CR       NUMBER (14,3), 
  ABAL_LC_UNP_DR       NUMBER (14,3), 
  ABAL_LC_UNP_CR       NUMBER (14,3), 
  ABAL_FC_UNP_DR       NUMBER (14,3), 
  ABAL_FC_UNP_CR       NUMBER (14,3), 
  ABAL_CR_UID          VARCHAR2 (10), 
  ABAL_CR_DT           DATE ) 
/

/
CREATE TABLE MUNA1 ( 
  NUM  NUMBER ) 
/

/
CREATE TABLE OM_COMP_PARAMETER ( 
  PARA_COMP_CODE        VARCHAR2 (3)  NOT NULL, 
  PARA_TYPE             VARCHAR2 (10)  NOT NULL, 
  PARA_CODE             VARCHAR2 (10)  NOT NULL, 
  PARA_NAME             VARCHAR2 (30)  NOT NULL, 
  PARA_VALUE            VARCHAR2 (30)  NOT NULL, 
  PARA_VALUE_NUM        VARCHAR2 (1), 
  PARA_USER_MOD_YN      VARCHAR2 (1)  NOT NULL, 
  PARA_USER_MOD_YN_NUM  NUMBER (1)    NOT NULL, 
  PARA_BL_NAME          VARCHAR2 (30), 
  PARA_CR_DT            DATE, 
  PARA_CR_UID           VARCHAR2 (10) ) 
/

/
CREATE TABLE OM_GUI_PARAMETER ( 
  GPARA_TYPE            VARCHAR2 (10), 
  GPARA_CODE            VARCHAR2 (10), 
  GPARA_NAME            VARCHAR2 (30), 
  GPARA_VALUE           VARCHAR2 (30), 
  GPARA_VALUE_NUM       VARCHAR2 (1), 
  GARA_USER_MOD_YN      VARCHAR2 (1), 
  GARA_USER_MOD_YN_NUM  NUMBER (1), 
  GPARA_CR_DT           DATE, 
  GPARA_CR_UID          VARCHAR2 (10), 
  GPARA_BL_VALUE        VARCHAR2 (30) ) 
/

/
CREATE TABLE OM_PARAMETER ( 
  PARA_TYPE             VARCHAR2 (10), 
  PARA_CODE             VARCHAR2 (10), 
  PARA_NAME             VARCHAR2 (30), 
  PARA_VALUE            VARCHAR2 (30), 
  PARA_VALUE_NUM        VARCHAR2 (1), 
  PARA_USER_MOD_YN      VARCHAR2 (1), 
  PARA_USER_MOD_YN_NUM  NUMBER (1), 
  PARA_CR_DT            DATE, 
  PARA_CR_UID           VARCHAR2 (10), 
  PARA_BL_NAME          VARCHAR2 (30) ) 
/

/
CREATE TABLE OP_ERROR_MESSAGE ( 
  EM_ERR_NO          NUMBER (6), 
  EM_LANG_CODE       VARCHAR2 (3), 
  EM_ERR_MSG_ENG     VARCHAR2 (80), 
  EM_ERR_MSG_FOR     VARCHAR2 (80), 
  EM_ERR_ACTN        VARCHAR2 (2000), 
  EM_ERR_REASON      VARCHAR2 (2000), 
  EM_ERR_ACTN_FOR    VARCHAR2 (2000), 
  EM_ERR_REASON_FOR  VARCHAR2 (2000), 
  EM_CR_UID          VARCHAR2 (10), 
  EM_CR_DT           DATE ) 
/

/
CREATE TABLE OP_REP_INFO ( 
  REP_KEY_NO    NUMBER (8), 
  REP_VALUE_1   VARCHAR2 (60), 
  REP_VALUE_2   VARCHAR2 (60), 
  REP_VALUE_3   VARCHAR2 (60), 
  REP_VALUE_4   VARCHAR2 (60), 
  REP_VALUE_5   VARCHAR2 (60), 
  REP_VALUE_6   VARCHAR2 (60), 
  REP_VALUE_7   VARCHAR2 (60), 
  REP_VALUE_8   VARCHAR2 (60), 
  REP_VALUE_9   VARCHAR2 (60), 
  REP_VALUE_10  VARCHAR2 (60), 
  REP_VALUE_11  VARCHAR2 (60), 
  REP_VALUE_12  VARCHAR2 (60), 
  REP_VALUE_13  VARCHAR2 (60), 
  REP_VALUE_14  VARCHAR2 (60), 
  REP_VALUE_15  VARCHAR2 (60), 
  REP_VALUE_16  VARCHAR2 (60), 
  REP_VALUE_17  VARCHAR2 (60), 
  REP_VALUE_18  VARCHAR2 (60), 
  REP_VALUE_19  VARCHAR2 (60), 
  REP_VALUE_20  VARCHAR2 (60), 
  REP_VALUE_21  VARCHAR2 (60), 
  REP_VALUE_22  VARCHAR2 (60), 
  REP_VALUE_23  VARCHAR2 (60), 
  REP_VALUE_24  VARCHAR2 (60), 
  REP_VALUE_25  VARCHAR2 (60), 
  REP_VALUE_26  VARCHAR2 (60), 
  REP_VALUE_27  VARCHAR2 (60), 
  REP_VALUE_28  VARCHAR2 (60), 
  REP_VALUE_29  VARCHAR2 (60), 
  REP_VALUE_30  VARCHAR2 (60), 
  REP_VALUE_31  VARCHAR2 (60), 
  REP_CR_UID    VARCHAR2 (10), 
  REP_CR_DT     DATE ) 
/

/
CREATE TABLE OT_JOB_EXPENSE ( 
  JEX_SYS_ID             NUMBER (10), 
  JEX_COMP_CODE          VARCHAR2 (3), 
  JEX_NO                 NUMBER (6), 
  JEX_DT                 DATE, 
  JEX_ACNT_YEAR_MTH      DATE, 
  JEX_JH_NO              VARCHAR2 (10), 
  JEX_JH_SYS_ID          NUMBER (10), 
  JEX_JEXP_CODE          VARCHAR2 (5), 
  JEX_VAL                NUMBER (12,3), 
  JEX_MAIN_ACNT_CODE     VARCHAR2 (6), 
  JEX_SUB_ACNT_CODE      VARCHAR2 (6), 
  JEX_DIVN_CODE          VARCHAR2 (6), 
  JEX_DEPT_CODE          VARCHAR2 (6), 
  JEX_ANLY_HEAD_NO_1     NUMBER (1), 
  JEX_ANLY_CODE_1        VARCHAR2 (6), 
  JEX_ANLY_HEAD_NO_2     NUMBER (1), 
  JEX_ANLY_CODE_2        VARCHAR2 (6), 
  JEX_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  JEX_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  JEX_TH_TRAN_CODE       VARCHAR2 (3), 
  JEX_TH_DOC_NO          NUMBER (6), 
  JEX_TH_DOC_DT          DATE, 
  JEX_STATUS             NUMBER (1), 
  JEX_CR_DT              DATE, 
  JEX_CR_UID             VARCHAR2 (10) ) 
/

/
CREATE TABLE OT_JOB_HEAD ( 
  JH_SYS_ID                  NUMBER (10), 
  JH_COMP_CODE               VARCHAR2 (3), 
  JH_NO                      VARCHAR2 (10), 
  JH_DT                      DATE, 
  JH_JEH_NO                  VARCHAR2 (12), 
  JH_DRAW_NO                 VARCHAR2 (12), 
  JH_APPL_FM_NO_1            NUMBER (8), 
  JH_APPL_TO_NO_1            NUMBER (8), 
  JH_APPL_FM_NO_2            NUMBER (8), 
  JH_APPL_TO_NO_2            NUMBER (8), 
  JH_JCTG_CODE               VARCHAR2 (5), 
  JH_TYPE                    VARCHAR2 (1), 
  JH_TYPE_NUM                NUMBER (1), 
  JH_HANDLE_TYPE             VARCHAR2 (1), 
  JH_HANDLE_TYPE_NUM         NUMBER (1), 
  JH_JG_CODE                 VARCHAR2 (5), 
  JH_START_DT                DATE, 
  JH_END_DT                  DATE, 
  JH_CONS_NAME               VARCHAR2 (30), 
  JH_ADDRESS                 VARCHAR2 (60), 
  JH_CITY                    VARCHAR2 (15), 
  JH_PO_BOX                  VARCHAR2 (15), 
  JH_TEL_NO                  VARCHAR2 (15), 
  JH_DESC_1                  VARCHAR2 (60), 
  JH_DESC_2                  VARCHAR2 (60), 
  JH_WIPD_MAIN_ACNT_CODE     VARCHAR2 (6), 
  JH_WIPD_SUB_ACNT_CODE      VARCHAR2 (6), 
  JH_WIPD_DIVN_CODE          VARCHAR2 (6), 
  JH_WIPD_DEPT_CODE          VARCHAR2 (6), 
  JH_WIPD_ANLY_HEAD_NO_1     NUMBER (1), 
  JH_WIPD_ANLY_CODE_1        VARCHAR2 (6), 
  JH_WIPD_ANLY_HEAD_NO_2     NUMBER (1), 
  JH_WIPD_ANLY_CODE_2        VARCHAR2 (6), 
  JH_WIPD_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  JH_WIPD_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  JH_WIPI_MAIN_ACNT_CODE     VARCHAR2 (6), 
  JH_WIPI_SUB_ACNT_CODE      VARCHAR2 (6), 
  JH_WIPI_DIVN_CODE          VARCHAR2 (6), 
  JH_WIPI_DEPT_CODE          VARCHAR2 (6), 
  JH_WIPI_ANLY_HEAD_NO_1     NUMBER (1), 
  JH_WIPI_ANLY_CODE_1        VARCHAR2 (6), 
  JH_WIPI_ANLY_HEAD_NO_2     NUMBER (1), 
  JH_WIPI_ANLY_CODE_2        VARCHAR2 (6), 
  JH_WIPI_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  JH_WIPI_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  JH_EQMT_MAIN_ACNT_CODE     VARCHAR2 (6), 
  JH_EQMT_SUB_ACNT_CODE      VARCHAR2 (6), 
  JH_EQMT_DIVN_CODE          VARCHAR2 (6), 
  JH_EQMT_DEPT_CODE          VARCHAR2 (6), 
  JH_EQMT_ANLY_HEAD_NO_1     NUMBER (1), 
  JH_EQMT_ANLY_CODE_1        VARCHAR2 (6), 
  JH_EQMT_ANLY_HEAD_NO_2     NUMBER (1), 
  JH_EQMT_ANLY_CODE_2        VARCHAR2 (6), 
  JH_EQMT_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  JH_EQMT_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  JH_RECV_MAIN_ACNT_CODE     VARCHAR2 (6), 
  JH_RECV_SUB_ACNT_CODE      VARCHAR2 (6), 
  JH_RECV_DIVN_CODE          VARCHAR2 (6), 
  JH_RECV_DEPT_CODE          VARCHAR2 (6), 
  JH_RECV_ANLY_HEAD_NO_1     NUMBER (1), 
  JH_RECV_ANLY_CODE_1        VARCHAR2 (6), 
  JH_RECV_ANLY_HEAD_NO_2     NUMBER (1), 
  JH_RECV_ANLY_CODE_2        VARCHAR2 (6), 
  JH_RECV_ACTY_VALUE_CODE_1  VARCHAR2 (6), 
  JH_RECV_ACTY_VALUE_CODE_2  VARCHAR2 (6), 
  JH_STATUS                  NUMBER (1), 
  JH_CLO_DT                  DATE, 
  JH_CLO_ACNT_YEAR_MTH       DATE, 
  JH_TH_TRAN_CODE            VARCHAR2 (3), 
  JH_TH_DOC_NO               NUMBER (6), 
  JH_TH_DOC_DT               DATE, 
  JH_ANNOTATION              VARCHAR2 (2000), 
  JH_CR_DT                   DATE, 
  JH_CR_UID                  VARCHAR2 (10) ) 
/

/
CREATE TABLE PLAN_TABLE ( 
  STATEMENT_ID     VARCHAR2 (30), 
  TIMESTAMP        DATE, 
  REMARKS          VARCHAR2 (80), 
  OPERATION        VARCHAR2 (30), 
  OPTIONS          VARCHAR2 (30), 
  OBJECT_NODE      VARCHAR2 (128), 
  OBJECT_OWNER     VARCHAR2 (30), 
  OBJECT_NAME      VARCHAR2 (30), 
  OBJECT_INSTANCE  NUMBER ( 38 ), 
  OBJECT_TYPE      VARCHAR2 (30), 
  OPTIMIZER        VARCHAR2 (255), 
  SEARCH_COLUMNS   NUMBER ( 38 ), 
  ID               NUMBER ( 38 ), 
  PARENT_ID        NUMBER ( 38 ), 
  POSITION         NUMBER ( 38 ), 
  COST             NUMBER ( 38 ), 
  CARDINALITY      NUMBER ( 38 ), 
  BYTES            NUMBER ( 38 ), 
  OTHER_TAG        VARCHAR2 (255), 
  OTHER            LONG ) 
/

/
CREATE TABLE PP_BOILERPLATE_TEXT ( 
  BT_MODULE_NAME  VARCHAR2 (30), 
  BT_BLOCK_NAME   VARCHAR2 (30), 
  BT_ITEM_NAME    VARCHAR2 (30), 
  BT_ENG_TEXT     VARCHAR2 (80), 
  BT_FOR_TEXT     VARCHAR2 (80), 
  BT_ENG_X_POS    NUMBER (4), 
  BT_ENG_Y_POS    NUMBER (4), 
  BT_ARB_X_POS    NUMBER (4), 
  BT_ARB_Y_POS    NUMBER (4), 
  BT_CR_DT        DATE, 
  BT_CR_UID       VARCHAR2 (10), 
  BT_UPD_DT       DATE, 
  BT_UPD_UID      VARCHAR2 (10) ) 
/

/
CREATE TABLE PP_ITEM_HINT ( 
  IH_TYPE            VARCHAR2 (1), 
  IH_MODULE_NAME     VARCHAR2 (30), 
  IH_BLOCK_NAME      VARCHAR2 (30), 
  IH_ITEM_NAME       VARCHAR2 (30), 
  IH_ENG_HINT        VARCHAR2 (80), 
  IH_FOR_HINT        VARCHAR2 (80), 
  IH_ENG_DFLT_VALUE  VARCHAR2 (80), 
  IH_FOR_DFLT_VALUE  VARCHAR2 (80), 
  IH_ENG_X_POS       NUMBER (4), 
  IH_ENG_Y_POS       NUMBER (4), 
  IH_ARB_X_POS       NUMBER (4), 
  IH_ARB_Y_POS       NUMBER (4), 
  IH_CR_DT           DATE, 
  IH_CR_UID          VARCHAR2 (10), 
  IH_UPD_DT          DATE, 
  IH_UPD_UID         VARCHAR2 (10) ) 
/

/
CREATE TABLE PP_REPORT_BP_COLUMNS ( 
  RBC_ID           NUMBER (12)   NOT NULL, 
  RBC_RBH_ID       NUMBER (12)   NOT NULL, 
  RBC_HEAD_LEN_1   NUMBER (3), 
  RBC_HEAD_ENG_1   VARCHAR2 (80), 
  RBC_HEAD_FOR_1   VARCHAR2 (80), 
  RBC_HEAD_LEN_2   NUMBER (3), 
  RBC_HEAD_ENG_2   VARCHAR2 (80), 
  RBC_HEAD_FOR_2   VARCHAR2 (80), 
  RBC_HEAD_LEN_3   NUMBER (3), 
  RBC_HEAD_ENG_3   VARCHAR2 (80), 
  RBC_HEAD_FOR_3   VARCHAR2 (80), 
  RBC_HEAD_LEN_4   NUMBER (3), 
  RBC_HEAD_ENG_4   VARCHAR2 (80), 
  RBC_HEAD_FOR_4   VARCHAR2 (80), 
  RBC_HEAD_LEN_5   NUMBER (3), 
  RBC_HEAD_ENG_5   VARCHAR2 (80), 
  RBC_HEAD_FOR_5   VARCHAR2 (80), 
  RBC_HEAD_LEN_6   NUMBER (3), 
  RBC_HEAD_ENG_6   VARCHAR2 (80), 
  RBC_HEAD_FOR_6   VARCHAR2 (80), 
  RBC_HEAD_LEN_7   NUMBER (3), 
  RBC_HEAD_ENG_7   VARCHAR2 (80), 
  RBC_HEAD_FOR_7   VARCHAR2 (80), 
  RBC_HEAD_LEN_8   NUMBER (3), 
  RBC_HEAD_ENG_8   VARCHAR2 (80), 
  RBC_HEAD_FOR_8   VARCHAR2 (80), 
  RBC_HEAD_LEN_9   NUMBER (3), 
  RBC_HEAD_ENG_9   VARCHAR2 (80), 
  RBC_HEAD_FOR_9   VARCHAR2 (80), 
  RBC_HEAD_LEN_10  NUMBER (3), 
  RBC_HEAD_ENG_10  VARCHAR2 (80), 
  RBC_HEAD_FOR_10  VARCHAR2 (80), 
  RBC_HEAD_LEN_11  NUMBER (3), 
  RBC_HEAD_ENG_11  VARCHAR2 (80), 
  RBC_HEAD_FOR_11  VARCHAR2 (80), 
  RBC_HEAD_LEN_12  NUMBER (3), 
  RBC_HEAD_ENG_12  VARCHAR2 (80), 
  RBC_HEAD_FOR_12  VARCHAR2 (80), 
  RBC_HEAD_LEN_13  NUMBER (3), 
  RBC_HEAD_ENG_13  VARCHAR2 (80), 
  RBC_HEAD_FOR_13  VARCHAR2 (80), 
  RBC_HEAD_LEN_14  NUMBER (3), 
  RBC_HEAD_ENG_14  VARCHAR2 (80), 
  RBC_HEAD_FOR_14  VARCHAR2 (80), 
  RBC_HEAD_LEN_15  NUMBER (3), 
  RBC_HEAD_ENG_15  VARCHAR2 (80), 
  RBC_HEAD_FOR_15  VARCHAR2 (80), 
  RBC_HEAD_LEN_16  NUMBER (3), 
  RBC_HEAD_ENG_16  VARCHAR2 (80), 
  RBC_HEAD_FOR_16  VARCHAR2 (80), 
  RBC_HEAD_LEN_17  NUMBER (3), 
  RBC_HEAD_ENG_17  VARCHAR2 (80), 
  RBC_HEAD_FOR_17  VARCHAR2 (80), 
  RBC_HEAD_LEN_18  NUMBER (3), 
  RBC_HEAD_ENG_18  VARCHAR2 (80), 
  RBC_HEAD_FOR_18  VARCHAR2 (80), 
  RBC_HEAD_LEN_19  NUMBER (3), 
  RBC_HEAD_ENG_19  VARCHAR2 (80), 
  RBC_HEAD_FOR_19  VARCHAR2 (80), 
  RBC_HEAD_LEN_20  NUMBER (3), 
  RBC_HEAD_ENG_20  VARCHAR2 (80), 
  RBC_HEAD_FOR_20  VARCHAR2 (80), 
  RBC_HEAD_LEN_21  NUMBER (3), 
  RBC_HEAD_ENG_21  VARCHAR2 (80), 
  RBC_HEAD_FOR_21  VARCHAR2 (80), 
  RBC_HEAD_LEN_22  NUMBER (3), 
  RBC_HEAD_ENG_22  VARCHAR2 (80), 
  RBC_HEAD_FOR_22  VARCHAR2 (80), 
  RBC_HEAD_LEN_23  NUMBER (3), 
  RBC_HEAD_ENG_23  VARCHAR2 (80), 
  RBC_HEAD_FOR_23  VARCHAR2 (80), 
  RBC_HEAD_LEN_24  NUMBER (3), 
  RBC_HEAD_ENG_24  VARCHAR2 (80), 
  RBC_HEAD_FOR_24  VARCHAR2 (80), 
  RBC_HEAD_LEN_25  NUMBER (3), 
  RBC_HEAD_ENG_25  VARCHAR2 (80), 
  RBC_HEAD_FOR_25  VARCHAR2 (80), 
  RBC_HEAD_LEN_26  NUMBER (3), 
  RBC_HEAD_ENG_26  VARCHAR2 (80), 
  RBC_HEAD_FOR_26  VARCHAR2 (80), 
  RBC_HEAD_LEN_27  NUMBER (3), 
  RBC_HEAD_ENG_27  VARCHAR2 (80), 
  RBC_HEAD_FOR_27  VARCHAR2 (80), 
  RBC_HEAD_LEN_28  NUMBER (3), 
  RBC_HEAD_ENG_28  VARCHAR2 (80), 
  RBC_HEAD_FOR_28  VARCHAR2 (80), 
  RBC_HEAD_LEN_29  NUMBER (3), 
  RBC_HEAD_ENG_29  VARCHAR2 (80), 
  RBC_HEAD_FOR_29  VARCHAR2 (80), 
  RBC_HEAD_LEN_30  NUMBER (3), 
  RBC_HEAD_ENG_30  VARCHAR2 (80), 
  RBC_HEAD_FOR_30  VARCHAR2 (80), 
  RBC_HEAD_LEN_31  NUMBER (3), 
  RBC_HEAD_ENG_31  VARCHAR2 (80), 
  RBC_HEAD_FOR_31  VARCHAR2 (80), 
  RBC_HEAD_LEN_32  NUMBER (3), 
  RBC_HEAD_ENG_32  VARCHAR2 (80), 
  RBC_HEAD_FOR_32  VARCHAR2 (80), 
  RBC_HEAD_LEN_33  NUMBER (3), 
  RBC_HEAD_ENG_33  VARCHAR2 (80), 
  RBC_HEAD_FOR_33  VARCHAR2 (80), 
  RBC_HEAD_LEN_34  NUMBER (3), 
  RBC_HEAD_ENG_34  VARCHAR2 (80), 
  RBC_HEAD_FOR_34  VARCHAR2 (80), 
  RBC_HEAD_LEN_35  NUMBER (3), 
  RBC_HEAD_ENG_35  VARCHAR2 (80), 
  RBC_HEAD_FOR_35  VARCHAR2 (80), 
  RBC_HEAD_LEN_36  NUMBER (3), 
  RBC_HEAD_ENG_36  VARCHAR2 (80), 
  RBC_HEAD_FOR_36  VARCHAR2 (80), 
  RBC_HEAD_LEN_37  NUMBER (3), 
  RBC_HEAD_ENG_37  VARCHAR2 (80), 
  RBC_HEAD_FOR_37  VARCHAR2 (80), 
  RBC_HEAD_LEN_38  NUMBER (3), 
  RBC_HEAD_ENG_38  VARCHAR2 (80), 
  RBC_HEAD_FOR_38  VARCHAR2 (80), 
  RBC_HEAD_LEN_39  NUMBER (3), 
  RBC_HEAD_ENG_39  VARCHAR2 (80), 
  RBC_HEAD_FOR_39  VARCHAR2 (80), 
  RBC_HEAD_LEN_40  NUMBER (3), 
  RBC_HEAD_ENG_40  VARCHAR2 (80), 
  RBC_HEAD_FOR_40  VARCHAR2 (80), 
  RBC_HEAD_LEN_41  NUMBER (3), 
  RBC_HEAD_ENG_41  VARCHAR2 (80), 
  RBC_HEAD_FOR_41  VARCHAR2 (80), 
  RBC_HEAD_LEN_42  NUMBER (3), 
  RBC_HEAD_ENG_42  VARCHAR2 (80), 
  RBC_HEAD_FOR_42  VARCHAR2 (80), 
  RBC_HEAD_LEN_43  NUMBER (3), 
  RBC_HEAD_ENG_43  VARCHAR2 (80), 
  RBC_HEAD_FOR_43  VARCHAR2 (80), 
  RBC_HEAD_LEN_44  NUMBER (3), 
  RBC_HEAD_ENG_44  VARCHAR2 (80), 
  RBC_HEAD_FOR_44  VARCHAR2 (80), 
  RBC_HEAD_LEN_45  NUMBER (3), 
  RBC_HEAD_ENG_45  VARCHAR2 (80), 
  RBC_HEAD_FOR_45  VARCHAR2 (80), 
  RBC_HEAD_LEN_46  NUMBER (3), 
  RBC_HEAD_ENG_46  VARCHAR2 (80), 
  RBC_HEAD_FOR_46  VARCHAR2 (80), 
  RBC_HEAD_LEN_47  NUMBER (3), 
  RBC_HEAD_ENG_47  VARCHAR2 (80), 
  RBC_HEAD_FOR_47  VARCHAR2 (80), 
  RBC_HEAD_LEN_48  NUMBER (3), 
  RBC_HEAD_ENG_48  VARCHAR2 (80), 
  RBC_HEAD_FOR_48  VARCHAR2 (80), 
  RBC_HEAD_LEN_49  NUMBER (3), 
  RBC_HEAD_ENG_49  VARCHAR2 (80), 
  RBC_HEAD_FOR_49  VARCHAR2 (80), 
  RBC_HEAD_LEN_50  NUMBER (3), 
  RBC_HEAD_ENG_50  VARCHAR2 (80), 
  RBC_HEAD_FOR_50  VARCHAR2 (80), 
  RBC_HEAD_LEN_51  NUMBER (3), 
  RBC_HEAD_ENG_51  VARCHAR2 (80), 
  RBC_HEAD_FOR_51  VARCHAR2 (80), 
  RBC_HEAD_LEN_52  NUMBER (3), 
  RBC_HEAD_ENG_52  VARCHAR2 (80), 
  RBC_HEAD_FOR_52  VARCHAR2 (80), 
  RBC_HEAD_LEN_53  NUMBER (3), 
  RBC_HEAD_ENG_53  VARCHAR2 (80), 
  RBC_HEAD_FOR_53  VARCHAR2 (80), 
  RBC_HEAD_LEN_54  NUMBER (3), 
  RBC_HEAD_ENG_54  VARCHAR2 (80), 
  RBC_HEAD_FOR_54  VARCHAR2 (80), 
  RBC_HEAD_LEN_55  NUMBER (3), 
  RBC_HEAD_ENG_55  VARCHAR2 (80), 
  RBC_HEAD_FOR_55  VARCHAR2 (80), 
  RBC_HEAD_LEN_56  NUMBER (3), 
  RBC_HEAD_ENG_56  VARCHAR2 (80), 
  RBC_HEAD_FOR_56  VARCHAR2 (80), 
  RBC_HEAD_LEN_57  NUMBER (3), 
  RBC_HEAD_ENG_57  VARCHAR2 (80), 
  RBC_HEAD_FOR_57  VARCHAR2 (80), 
  RBC_HEAD_LEN_58  NUMBER (3), 
  RBC_HEAD_ENG_58  VARCHAR2 (80), 
  RBC_HEAD_FOR_58  VARCHAR2 (80), 
  RBC_HEAD_LEN_59  NUMBER (3), 
  RBC_HEAD_ENG_59  VARCHAR2 (80), 
  RBC_HEAD_FOR_59  VARCHAR2 (80), 
  RBC_HEAD_LEN_60  NUMBER (3), 
  RBC_HEAD_ENG_60  VARCHAR2 (80), 
  RBC_HEAD_FOR_60  VARCHAR2 (80), 
  RBC_HEAD_LEN_61  NUMBER (3), 
  RBC_HEAD_ENG_61  VARCHAR2 (80), 
  RBC_HEAD_FOR_61  VARCHAR2 (80), 
  RBC_HEAD_LEN_62  NUMBER (3), 
  RBC_HEAD_ENG_62  VARCHAR2 (80), 
  RBC_HEAD_FOR_62  VARCHAR2 (80) ) 
/

/
CREATE TABLE PP_REPORT_BP_HEAD ( 
  RBH_ID          NUMBER (12)   NOT NULL, 
  RBH_WIDTH       NUMBER (3), 
  RBH_TITLE1_ENG  VARCHAR2 (80), 
  RBH_TITLE2_ENG  VARCHAR2 (80), 
  RBH_TITLE1_FOR  VARCHAR2 (80), 
  RBH_TITLE2_FOR  VARCHAR2 (80), 
  RBH_DATE_ENG    VARCHAR2 (80), 
  RBH_DATE_FOR    VARCHAR2 (80), 
  RBH_USER_ENG    VARCHAR2 (80), 
  RBH_USER_FOR    VARCHAR2 (80), 
  RBH_PAGE_ENG    VARCHAR2 (80), 
  RBH_PAGE_FOR    VARCHAR2 (80), 
  RBH_REPID_ENG   VARCHAR2 (80), 
  RBH_REPID_FOR   VARCHAR2 (80), 
  RBH_REP_CODE    VARCHAR2 (10) ) 
/

/
CREATE TABLE PP_REPORT_BP_OTHER_VALUES ( 
  RBOV_ID        VARCHAR2 (25), 
  RBOV_ENG_DESC  VARCHAR2 (80), 
  RBOV_FOR_DESC  VARCHAR2 (80) ) 
/

/
CREATE TABLE PP_REPORT_BP_PARAMETERS ( 
  RBP_ID        NUMBER (12)   NOT NULL, 
  RBP_RBH_ID    NUMBER (12)   NOT NULL, 
  RBP_FROM_ENG  VARCHAR2 (80), 
  RBP_TO_ENG    VARCHAR2 (80), 
  RBP_FROM_FOR  VARCHAR2 (80), 
  RBP_TO_FOR    VARCHAR2 (80) ) 
/

/
CREATE TABLE PP_SYSTEM ( 
  PS_TYPE              VARCHAR2 (10), 
  PS_CODE              VARCHAR2 (10), 
  PS_VALUE             VARCHAR2 (30), 
  PS_TYPE_DESC         VARCHAR2 (30), 
  PS_CODE_DESC         VARCHAR2 (30), 
  PS_USER_MOD_YN       VARCHAR2 (1), 
  PS_PREM_ALLOC_BASIS  VARCHAR2 (1), 
  PS_BL_DESC           VARCHAR2 (30), 
  PS_CR_DT             DATE, 
  PS_CR_UID            VARCHAR2 (10), 
  PS_UPD_DT            DATE, 
  PS_UPD_UID           VARCHAR2 (10) ) 
/

/
CREATE TABLE PP_SYSTEM_1 ( 
  PS_TYPE              VARCHAR2 (10), 
  PS_CODE              VARCHAR2 (10), 
  PS_VALUE             VARCHAR2 (30), 
  PS_TYPE_DESC         VARCHAR2 (30), 
  PS_CODE_DESC         VARCHAR2 (30), 
  PS_USER_MOD_YN       VARCHAR2 (1), 
  PS_PREM_ALLOC_BASIS  VARCHAR2 (1), 
  PS_BL_DESC           VARCHAR2 (30), 
  PS_CR_DT             DATE, 
  PS_CR_UID            VARCHAR2 (10), 
  PS_UPD_DT            DATE, 
  PS_UPD_UID           VARCHAR2 (10) ) 
/

/
CREATE TABLE PP_WINDOW_TITLE ( 
  WT_MODULE_NAME  VARCHAR2 (30), 
  WT_WINDOW_NAME  VARCHAR2 (30), 
  WT_ENG_TITLE    VARCHAR2 (80), 
  WT_FOR_TITLE    VARCHAR2 (80), 
  WT_CR_DT        DATE, 
  WT_CR_UID       VARCHAR2 (10), 
  WT_UPD_DT       DATE, 
  WT_UPD_UID      VARCHAR2 (10) ) 
/

/
CREATE TABLE RPMS_INDEX ( 
  TABLE_NAME       VARCHAR2 (40), 
  INDEX_NAME       VARCHAR2 (40), 
  INDEX_COLUMNS    VARCHAR2 (1000), 
  INITIAL_EXTENT   NUMBER (7), 
  NEXT_EXTENT      NUMBER (7), 
  TABLESPACE_NAME  VARCHAR2 (40) ) 
/

/
CREATE TABLE RPMS_INDEX_1 ( 
  TABLE_NAME       VARCHAR2 (30), 
  INDEX_NAME       VARCHAR2 (30), 
  INDEX_COLUMNS    VARCHAR2 (1000), 
  INITIAL_EXTENT   NUMBER, 
  NEXT_EXTENT      NUMBER, 
  TABLESPACE_NAME  VARCHAR2 (30) ) 
/

/
CREATE TABLE TEMP ( 
  NO  NUMBER (1)    NOT NULL, 
  PRIMARY KEY ( NO ) ) 
/

ALTER TABLE FM_ACNT_ANLY ADD  CONSTRAINT FK_AANLY_01
 FOREIGN KEY (AANLY_ANLY_HEAD_NO, AANLY_ANLY_CODE) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_ACNT_ANLY ADD  CONSTRAINT FK_AANLY_02
 FOREIGN KEY (AANLY_MAIN_ACNT_CODE, AANLY_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD  CONSTRAINT FK_AAL_01
 FOREIGN KEY (AAL_FORMAT_ID, AAL_LVL_CODE) 
  REFERENCES FINAL7.FM_ANLY_LEVEL (ALM_FORMAT_ID, ALM_LVL_CODE) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD  CONSTRAINT FK_AAL_02
 FOREIGN KEY (AAL_HEAD_NO, AAL_ANLY_CODE, AAL_MAIN_ACNT_CODE, AAL_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_ANLY (AANLY_ANLY_HEAD_NO, AANLY_ANLY_CODE, AANLY_MAIN_ACNT_CODE, AANLY_SUB_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_ANLY_LEVEL ADD  CONSTRAINT FK_AAL_03
 FOREIGN KEY (AAL_HEAD_NO, AAL_ANLY_CODE) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_ACNT_COMP ADD  CONSTRAINT FK_ACOMP_01
 FOREIGN KEY (ACOMP_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_ACNT_COMP ADD  CONSTRAINT FK_ACOMP_02
 FOREIGN KEY (ACOMP_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_CURR ADD  CONSTRAINT FK_ACURR_01
 FOREIGN KEY (ACURR_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FM_ACNT_CURR ADD  CONSTRAINT FK_ACURR_02
 FOREIGN KEY (ACURR_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_LINK ADD  CONSTRAINT FK_ALS_01
 FOREIGN KEY (ALS_BASE_MAIN_ACNT_CODE, ALS_BASE_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_LINK ADD  CONSTRAINT FK_ALS_02
 FOREIGN KEY (ALS_LINK_MAIN_ACNT_CODE, ALS_LINK_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_ACNT_LINK ADD  CONSTRAINT FK_ALS_03
 FOREIGN KEY (ALS_LINK_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_ACTY_VALUE ADD  CONSTRAINT FK_AVAL_01
 FOREIGN KEY (AVAL_ACTY_CODE) 
  REFERENCES FINAL7.FM_ACTIVITY (ACTY_CODE) 
/

ALTER TABLE FM_ANLY_LEVEL ADD  CONSTRAINT FK_ALM_01
 FOREIGN KEY (ALM_FORMAT_ID) 
  REFERENCES FINAL7.FM_ANLY_FORMAT (AFM_FORMAT_ID) 
/

ALTER TABLE FM_ANLY_LEVEL ADD  CONSTRAINT FK_ALM_02
 FOREIGN KEY (ALM_FORMAT_ID, ALM_PARENT_CODE) 
  REFERENCES FINAL7.FM_ANLY_LEVEL (ALM_FORMAT_ID, ALM_LVL_CODE) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD  CONSTRAINT FK_CAF_01
 FOREIGN KEY (CAF_FORMAT_ID, CAF_LVL_CODE) 
  REFERENCES FINAL7.FM_COA_LEVEL (LVL_FORMAT_ID, LVL_CODE) 
/

ALTER TABLE FM_COA_ACNT_FORMAT ADD  CONSTRAINT FK_CAF_02
 FOREIGN KEY (CAF_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_COA_LEVEL ADD  CONSTRAINT FK_LVL_01
 FOREIGN KEY (LVL_FORMAT_ID) 
  REFERENCES FINAL7.FM_COA_FORMAT (COA_FORMAT_ID) 
/

ALTER TABLE FM_COA_LEVEL ADD  CONSTRAINT FK_LVL_02
 FOREIGN KEY (LVL_FORMAT_ID, LVL_PARENT_CODE) 
  REFERENCES FINAL7.FM_COA_LEVEL (LVL_FORMAT_ID, LVL_CODE) 
/

ALTER TABLE FM_COMPANY ADD  CONSTRAINT FK_COMP_01
 FOREIGN KEY (COMP_CTL_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD  CONSTRAINT FK_CAY_01
 FOREIGN KEY (CAY_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_COMP_ACNT_YEAR ADD  CONSTRAINT FK_CAY_02
 FOREIGN KEY (CAY_COMP_CODE, CAY_MAIN_ACNT_CODE, CAY_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_COMP (ACOMP_COMP_CODE, ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 
/

ALTER TABLE FM_CUSTOMER ADD  CONSTRAINT FK_CUST_01
 FOREIGN KEY (CUST_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_DEPARTMENT ADD  CONSTRAINT FK_DEPT_01
 FOREIGN KEY (DEPT_COMP_CODE, DEPT_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FM_DIVISION ADD  CONSTRAINT FK_DIVN_01
 FOREIGN KEY (DIVN_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_EXCHANGE_RATE ADD  CONSTRAINT FK_CER_01
 FOREIGN KEY (CER_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_01
 FOREIGN KEY (FL_MAIN_ACNT_CODE, FL_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_02
 FOREIGN KEY (FL_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_03
 FOREIGN KEY (FL_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_04
 FOREIGN KEY (FL_MAIN_ACNT_CODE_1, FL_SUB_ACNT_CODE_1) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_05
 FOREIGN KEY (FL_MAIN_ACNT_CODE_1) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_06
 FOREIGN KEY (FL_MAIN_ACNT_CODE_2, FL_SUB_ACNT_CODE_2) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_FOREX_LINK ADD  CONSTRAINT FK_FL_07
 FOREIGN KEY (FL_MAIN_ACNT_CODE_2) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD  CONSTRAINT FK_MAIN_01
 FOREIGN KEY (MAIN_ACTY_CODE_1) 
  REFERENCES FINAL7.FM_ACTIVITY (ACTY_CODE) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD  CONSTRAINT FK_MAIN_02
 FOREIGN KEY (MAIN_ACTY_CODE_2) 
  REFERENCES FINAL7.FM_ACTIVITY (ACTY_CODE) 
/

ALTER TABLE FM_MAIN_ACCOUNT ADD  CONSTRAINT FK_MAIN_03
 FOREIGN KEY (MAIN_ACNT_CATG) 
  REFERENCES FINAL7.FM_ACNT_CATG (CATG_CODE) 
/

ALTER TABLE FM_MAIN_SUB ADD  CONSTRAINT FK_MS_01
 FOREIGN KEY (MS_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_01
 FOREIGN KEY (MBUD_COMP_CODE, MBUD_DIVN_CODE, MBUD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_02
 FOREIGN KEY (MBUD_MAIN_ACNT_CODE, MBUD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_03
 FOREIGN KEY (MBUD_HEAD_NO_1, MBUD_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_04
 FOREIGN KEY (MBUD_HEAD_NO_2, MBUD_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_NARRATION_DEFN ADD  CONSTRAINT FK_NARR_01
 FOREIGN KEY (NARR_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_PRV_01
 FOREIGN KEY (MBUD_COMP_CODE, MBUD_DIVN_CODE, MBUD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_PRV_02
 FOREIGN KEY (MBUD_MAIN_ACNT_CODE, MBUD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_PRV_03
 FOREIGN KEY (MBUD_HEAD_NO_1, MBUD_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_PRV_MONTHLY_BUDGET ADD  CONSTRAINT FK_MBUD_PRV_04
 FOREIGN KEY (MBUD_HEAD_NO_2, MBUD_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_RATIO_VALUE ADD  CONSTRAINT FK_RV_01
 FOREIGN KEY (RV_RATIO_ID) 
  REFERENCES FINAL7.FP_RATIO_SETUP (RATIO_ID) 
/

ALTER TABLE FM_RATIO_VALUE ADD  CONSTRAINT FK_RV_02
 FOREIGN KEY (RV_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_SUB_COMP ADD  CONSTRAINT FK_SCOMP_01
 FOREIGN KEY (SCOMP_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_SUB_ACCOUNT (SUB_ACNT_CODE) 
/

ALTER TABLE FM_SUB_COMP ADD  CONSTRAINT FK_SCOMP_02
 FOREIGN KEY (SCOMP_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_SUB_CURR ADD  CONSTRAINT FK_SCURR_01
 FOREIGN KEY (SCURR_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_SUB_ACCOUNT (SUB_ACNT_CODE) 
/

ALTER TABLE FM_SUB_CURR ADD  CONSTRAINT FK_SCURR_02
 FOREIGN KEY (SCURR_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FM_SUPPLIER ADD  CONSTRAINT FK_SUPP_01
 FOREIGN KEY (SUPP_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_TRANSACTION ADD  CONSTRAINT FK_TRAN_01
 FOREIGN KEY (TRAN_DFLT_MAIN_ACNT_CODE, TRAN_DFLT_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_TRANSACTION ADD  CONSTRAINT FK_TRAN_02
 FOREIGN KEY (TRAN_DFLT_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FM_TRANSACTION ADD  CONSTRAINT FK_TRAN_03
 FOREIGN KEY (TRAN_ACNT_CATG) 
  REFERENCES FINAL7.FM_ACNT_CATG (CATG_CODE) 
/

ALTER TABLE FM_TRAN_APPR_GROUP ADD  CONSTRAINT FK_TAG_01
 FOREIGN KEY (TAG_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FM_TRAN_APPR_LEVEL ADD  CONSTRAINT FK_ALVL_01
 FOREIGN KEY (ALVL_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD  CONSTRAINT FK_TDOC_01
 FOREIGN KEY (TDOC_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FM_TRAN_DOC_NO ADD  CONSTRAINT FK_TDOC_02
 FOREIGN KEY (TDOC_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD  CONSTRAINT FK_YBUD_01
 FOREIGN KEY (YBUD_COMP_CODE, YBUD_DIVN_CODE, YBUD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD  CONSTRAINT FK_YBUD_02
 FOREIGN KEY (YBUD_MAIN_ACNT_CODE, YBUD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD  CONSTRAINT FK_YBUD_03
 FOREIGN KEY (YBUD_HEAD_NO_1, YBUD_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FM_YEARLY_BUDGET ADD  CONSTRAINT FK_YBUD_04
 FOREIGN KEY (YBUD_HEAD_NO_2, YBUD_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD  CONSTRAINT FK_ABAL_CUR_01
 FOREIGN KEY (ABAL_MAIN_ACNT_CODE, ABAL_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD  CONSTRAINT FK_ABAL_CUR_02
 FOREIGN KEY (ABAL_COMP_CODE, ABAL_DIVN_CODE, ABAL_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FS_CUR_ACNT_BAL ADD  CONSTRAINT FK_ABAL_CUR_03
 FOREIGN KEY (ABAL_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FS_PROC_DETAIL ADD  CONSTRAINT FK_PDS_01
 FOREIGN KEY (PDS_COMP_CODE, PDS_DIVN_CODE, PDS_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FS_PROC_DETAIL ADD  CONSTRAINT FK_PDS_02
 FOREIGN KEY (PDS_MAIN_ACNT_CODE, PDS_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FS_PROC_DETAIL ADD  CONSTRAINT FK_PDS_03
 FOREIGN KEY (PDS_HEAD_NO_1, PDS_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FS_PROC_DETAIL ADD  CONSTRAINT FK_PDS_04
 FOREIGN KEY (PDS_HEAD_NO_2, PDS_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FS_PROC_HEADER ADD  CONSTRAINT FK_PHS_01
 FOREIGN KEY (PHS_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FS_PROC_HEADER ADD  CONSTRAINT FK_PHS_02
 FOREIGN KEY (PHS_TRAN_FRM) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FS_PROC_HEADER ADD  CONSTRAINT FK_PHS_03
 FOREIGN KEY (PHS_TRAN_TO) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD  CONSTRAINT FK_ABAL_PRV_01
 FOREIGN KEY (ABAL_MAIN_ACNT_CODE, ABAL_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD  CONSTRAINT FK_ABAL_PRV_02
 FOREIGN KEY (ABAL_COMP_CODE, ABAL_DIVN_CODE, ABAL_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FS_PRV_ACNT_BAL ADD  CONSTRAINT FK_ABAL_PRV_03
 FOREIGN KEY (ABAL_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_02
 FOREIGN KEY (AJV_REF_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_03
 FOREIGN KEY (AJV_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_04
 FOREIGN KEY (AJV_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_05
 FOREIGN KEY (AJV_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_06
 FOREIGN KEY (AJV_MAIN_ACNT_CODE, AJV_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_07
 FOREIGN KEY (AJV_HEAD_NO_1, AJV_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_ALLOCATION_JV ADD  CONSTRAINT FK_AJV_08
 FOREIGN KEY (AJV_HEAD_NO_2, AJV_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_BOUNCED_CHEQUE ADD  CONSTRAINT FK_BCT_01
 FOREIGN KEY (BCT_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_BOUNCED_CHEQUE ADD  CONSTRAINT FK_BCT_02
 FOREIGN KEY (BCT_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_BOUNCED_CHEQUE ADD  CONSTRAINT FK_BCT_03
 FOREIGN KEY (BCT_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_01
 FOREIGN KEY (DISB_CASH_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_02
 FOREIGN KEY (DISB_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_03
 FOREIGN KEY (DISB_MAIN_ACNT_CODE, DISB_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_04
 FOREIGN KEY (DISB_HEAD_NO_1, DISB_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_05
 FOREIGN KEY (DISB_HEAD_NO_2, DISB_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_CASH_DISB ADD  CONSTRAINT FK_DISB_08
 FOREIGN KEY (DISB_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_CASH_RIMB ADD  CONSTRAINT FK_RIMB_01
 FOREIGN KEY (RIMB_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CASH_RIMB ADD  CONSTRAINT FK_RIMB_02
 FOREIGN KEY (RIMB_CASH_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_CASH_RIMB ADD  CONSTRAINT FK_RIMB_03
 FOREIGN KEY (RIMB_BANK_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_01
 FOREIGN KEY (CS_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_02
 FOREIGN KEY (CS_CASH_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_03
 FOREIGN KEY (CS_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_04
 FOREIGN KEY (CS_REF_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_05
 FOREIGN KEY (CS_COMP_CODE, CS_REF_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_06
 FOREIGN KEY (CS_COMP_CODE, CS_REF_DIVN_CODE, CS_REF_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_07
 FOREIGN KEY (CS_REF_ANLY_HEAD_1, CS_REF_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_CASH_SUMMARY ADD  CONSTRAINT FK_CS_08
 FOREIGN KEY (CS_REF_ANLY_HEAD_2, CS_REF_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_CORRECTION_JV ADD  CONSTRAINT FK_CJV_02
 FOREIGN KEY (CJV_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CORRECTION_JV ADD  CONSTRAINT FK_CJV_03
 FOREIGN KEY (CJV_ORGL_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CORRECTION_JV ADD  CONSTRAINT FK_CJV_04
 FOREIGN KEY (CJV_CORR_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_01
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE, TD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_02
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_03
 FOREIGN KEY (TD_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_04
 FOREIGN KEY (TD_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_05
 FOREIGN KEY (TD_COMP_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_COMP (ACOMP_COMP_CODE, ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_07
 FOREIGN KEY (TD_CURR_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_CURR (ACURR_CURR_CODE, ACURR_MAIN_ACNT_CODE, ACURR_SUB_ACNT_CODE) 
/

ALTER TABLE FT_CUR_TRANS_DETAIL ADD  CONSTRAINT FK_TD_CUR_09
 FOREIGN KEY (TD_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD  CONSTRAINT FK_TH_CUR_01
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE, TH_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD  CONSTRAINT FK_TH_CUR_02
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD  CONSTRAINT FK_TH_CUR_03
 FOREIGN KEY (TH_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD  CONSTRAINT FK_TH_CUR_04
 FOREIGN KEY (TH_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_CUR_TRANS_HEADER ADD  CONSTRAINT FK_TH_CUR_05
 FOREIGN KEY (TH_COMP_CODE, TH_ACNT_YEAR, TH_DOC_CAL_YEAR, TH_DOC_CAL_MONTH) 
  REFERENCES FINAL7.FM_ACNT_PERIOD (APER_COMP_CODE, APER_ACNT_YEAR, APER_CAL_YEAR, APER_CAL_MONTH) DISABLE 
/

ALTER TABLE FT_FIXED_JV ADD  CONSTRAINT FK_FJV_01
 FOREIGN KEY (FJV_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_FIXED_JV ADD  CONSTRAINT FK_FJV_02
 FOREIGN KEY (FJV_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_01
 FOREIGN KEY (OST_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_02
 FOREIGN KEY (OST_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_03
 FOREIGN KEY (OST_COMP_CODE, OST_DIVN_CODE, OST_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_04
 FOREIGN KEY (OST_REF_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_05
 FOREIGN KEY (OST_MAIN_ACNT_CODE, OST_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_06
 FOREIGN KEY (OST_HEAD_NO_1, OST_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_OS ADD  CONSTRAINT FK_OST_07
 FOREIGN KEY (OST_HEAD_NO_2, OST_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_01
 FOREIGN KEY (PDC_COMP_CODE, PDC_DIVN_CODE, PDC_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_02
 FOREIGN KEY (PDC_MAIN_ACNT_CODE, PDC_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_03
 FOREIGN KEY (PDC_MAIN_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_04
 FOREIGN KEY (PDC_HEAD_NO_1, PDC_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_05
 FOREIGN KEY (PDC_HEAD_NO_2, PDC_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_06
 FOREIGN KEY (PDC_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_PDC ADD  CONSTRAINT FK_PDC_07
 FOREIGN KEY (PDC_BANK_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_ACCOUNT (MAIN_ACNT_CODE) 
/

ALTER TABLE FT_PDC_OS ADD  CONSTRAINT FK_POS_01
 FOREIGN KEY (POS_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_PDC_OS ADD  CONSTRAINT FK_POS_02
 FOREIGN KEY (POS_MAIN_ACNT_CODE, POS_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_PDC_OS ADD  CONSTRAINT FK_POS_03
 FOREIGN KEY (POS_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_01
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE, TD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_02
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_03
 FOREIGN KEY (TD_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_04
 FOREIGN KEY (TD_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_05
 FOREIGN KEY (TD_COMP_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_COMP (ACOMP_COMP_CODE, ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 
/

ALTER TABLE FT_PRV_TRANS_DETAIL ADD  CONSTRAINT FK_TD_PRV_06
 FOREIGN KEY (TD_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD  CONSTRAINT FK_TH_PRV_01
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE, TH_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD  CONSTRAINT FK_TH_PRV_02
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD  CONSTRAINT FK_TH_PRV_03
 FOREIGN KEY (TH_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD  CONSTRAINT FK_TH_PRV_04
 FOREIGN KEY (TH_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_PRV_TRANS_HEADER ADD  CONSTRAINT FK_TH_PRV_05
 FOREIGN KEY (TH_COMP_CODE, TH_ACNT_YEAR, TH_DOC_CAL_YEAR, TH_DOC_CAL_MONTH) 
  REFERENCES FINAL7.FM_ACNT_PERIOD (APER_COMP_CODE, APER_ACNT_YEAR, APER_CAL_YEAR, APER_CAL_MONTH) DISABLE 
/

ALTER TABLE FT_REVERSAL_JV ADD  CONSTRAINT FK_RJV_01
 FOREIGN KEY (RJV_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_REVERSAL_JV ADD  CONSTRAINT FK_RJV_02
 FOREIGN KEY (RJV_ORGL_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_REVERSAL_JV ADD  CONSTRAINT FK_RJV_03
 FOREIGN KEY (RJV_REV_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD  CONSTRAINT FK_BILL_01
 FOREIGN KEY (BILL_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_SUPP_BILL_HEADER ADD  CONSTRAINT FK_BILL_02
 FOREIGN KEY (BILL_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_SUPP_DETAIL ADD  CONSTRAINT FK_SDET_01
 FOREIGN KEY (SDET_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD  CONSTRAINT FK_TAS_01
 FOREIGN KEY (TAS_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_TRAN_APPR_STATUS ADD  CONSTRAINT FK_TAS_02
 FOREIGN KEY (TAS_TRAN_CODE, TAS_USR_LVL) 
  REFERENCES FINAL7.FM_TRAN_APPR_LEVEL (ALVL_TRAN_CODE, ALVL_USR_LVL) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_01
 FOREIGN KEY (OST_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_02
 FOREIGN KEY (OST_REF_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_03
 FOREIGN KEY (OST_COMP_CODE, OST_DIVN_CODE, OST_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_04
 FOREIGN KEY (OST_REF_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_05
 FOREIGN KEY (OST_MAIN_ACNT_CODE, OST_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_MAIN_SUB (MS_MAIN_ACNT_CODE, MS_SUB_ACNT_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_06
 FOREIGN KEY (OST_HEAD_NO_1, OST_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_UNPOSTED_OS ADD  CONSTRAINT FK_OST_UNP_07
 FOREIGN KEY (OST_HEAD_NO_2, OST_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_01
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE, TD_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_02
 FOREIGN KEY (TD_COMP_CODE, TD_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_03
 FOREIGN KEY (TD_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_04
 FOREIGN KEY (TD_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_05
 FOREIGN KEY (TD_COMP_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_COMP (ACOMP_COMP_CODE, ACOMP_MAIN_ACNT_CODE, ACOMP_SUB_ACNT_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_07
 FOREIGN KEY (TD_CURR_CODE, TD_MAIN_ACNT_CODE, TD_SUB_ACNT_CODE) 
  REFERENCES FINAL7.FM_ACNT_CURR (ACURR_CURR_CODE, ACURR_MAIN_ACNT_CODE, ACURR_SUB_ACNT_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_09
 FOREIGN KEY (TD_CURR_CODE) 
  REFERENCES FINAL7.FM_CURRENCY (CURR_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_10
 FOREIGN KEY (TD_HEAD_NO_1, TD_ANLY_CODE_1) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_DETAIL ADD  CONSTRAINT FK_TD_UNP_11
 FOREIGN KEY (TD_HEAD_NO_2, TD_ANLY_CODE_2) 
  REFERENCES FINAL7.FM_ANALYSIS (ANLY_HEAD_NO, ANLY_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD  CONSTRAINT FK_TH_UNP_01
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE, TH_DEPT_CODE) 
  REFERENCES FINAL7.FM_DEPARTMENT (DEPT_COMP_CODE, DEPT_DIVN_CODE, DEPT_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD  CONSTRAINT FK_TH_UNP_02
 FOREIGN KEY (TH_COMP_CODE, TH_DIVN_CODE) 
  REFERENCES FINAL7.FM_DIVISION (DIVN_COMP_CODE, DIVN_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD  CONSTRAINT FK_TH_UNP_03
 FOREIGN KEY (TH_COMP_CODE) 
  REFERENCES FINAL7.FM_COMPANY (COMP_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD  CONSTRAINT FK_TH_UNP_04
 FOREIGN KEY (TH_TRAN_CODE) 
  REFERENCES FINAL7.FM_TRANSACTION (TRAN_CODE) 
/

ALTER TABLE FT_UNPOSTED_TRANS_HEADER ADD  CONSTRAINT FK_TH_UNP_05
 FOREIGN KEY (TH_COMP_CODE, TH_ACNT_YEAR, TH_DOC_CAL_YEAR, TH_DOC_CAL_MONTH) 
  REFERENCES FINAL7.FM_ACNT_PERIOD (APER_COMP_CODE, APER_ACNT_YEAR, APER_CAL_YEAR, APER_CAL_MONTH) DISABLE 
/








































ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_02
/

ALTER TABLE FINAL7.FM_MAIN_ACCOUNT ENABLE CONSTRAINT FK_MAIN_03
/
ALTER TABLE FINAL7.FM_TRANSACTION ENABLE CONSTRAINT FK_TRAN_03
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR ENABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR ENABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR ENABLE CONSTRAINT FK_CAY_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_05
/

ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_07
/

ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_05
/
ALTER TABLE FINAL7.FM_ACTY_VALUE ENABLE CONSTRAINT FK_AVAL_01
/
ALTER TABLE FINAL7.FM_MAIN_ACCOUNT ENABLE CONSTRAINT FK_MAIN_02
/
ALTER TABLE FINAL7.FM_MAIN_ACCOUNT ENABLE CONSTRAINT FK_MAIN_01
/

ALTER TABLE FINAL7.FM_ACNT_ANLY ENABLE CONSTRAINT FK_AANLY_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY ENABLE CONSTRAINT FK_AANLY_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_03
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_04
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_03
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_04
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_03
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_04
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_03
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_03
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_04
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_04
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_03
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_04
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_07
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_08
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_07
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_08
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_04
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_05
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_04
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_05
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_07
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_08
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_07
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_08
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_06
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_07
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_06
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_07
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_04
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_05
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_04
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_06
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_07
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_06
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_11
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_10
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_11
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_10
/






ALTER TABLE FINAL7.FM_ANLY_LEVEL ENABLE CONSTRAINT FK_ALM_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_01
/
ALTER TABLE FINAL7.FM_ACNT_ANLY_LEVEL ENABLE CONSTRAINT FK_AAL_01
/
ALTER TABLE FINAL7.FM_ANLY_LEVEL ENABLE CONSTRAINT FK_ALM_02
/
ALTER TABLE FINAL7.FM_ANLY_LEVEL ENABLE CONSTRAINT FK_ALM_02
/

ALTER TABLE FINAL7.FM_COA_LEVEL ENABLE CONSTRAINT FK_LVL_01
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT ENABLE CONSTRAINT FK_CAF_01
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT ENABLE CONSTRAINT FK_CAF_01
/
ALTER TABLE FINAL7.FM_COA_LEVEL ENABLE CONSTRAINT FK_LVL_02
/
ALTER TABLE FINAL7.FM_COA_LEVEL ENABLE CONSTRAINT FK_LVL_02
/

ALTER TABLE FINAL7.FM_ACNT_COMP ENABLE CONSTRAINT FK_ACOMP_01
/
ALTER TABLE FINAL7.FM_COMP_ACNT_YEAR ENABLE CONSTRAINT FK_CAY_01
/
ALTER TABLE FINAL7.FM_DIVISION ENABLE CONSTRAINT FK_DIVN_01
/
ALTER TABLE FINAL7.FM_RATIO_VALUE ENABLE CONSTRAINT FK_RV_02
/
ALTER TABLE FINAL7.FM_SUB_COMP ENABLE CONSTRAINT FK_SCOMP_02
/
ALTER TABLE FINAL7.FM_TRAN_DOC_NO ENABLE CONSTRAINT FK_TDOC_02
/
ALTER TABLE FINAL7.FS_PROC_HEADER ENABLE CONSTRAINT FK_PHS_01
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_04
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_02
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE ENABLE CONSTRAINT FK_BCT_01
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_02
/
ALTER TABLE FINAL7.FT_CASH_RIMB ENABLE CONSTRAINT FK_RIMB_01
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_01
/
ALTER TABLE FINAL7.FT_CORRECTION_JV ENABLE CONSTRAINT FK_CJV_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_03
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_03
/
ALTER TABLE FINAL7.FT_FIXED_JV ENABLE CONSTRAINT FK_FJV_01
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_04
/
ALTER TABLE FINAL7.FT_PDC_OS ENABLE CONSTRAINT FK_POS_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_03
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_03
/
ALTER TABLE FINAL7.FT_REVERSAL_JV ENABLE CONSTRAINT FK_RJV_01
/
ALTER TABLE FINAL7.FT_SUPP_BILL_HEADER ENABLE CONSTRAINT FK_BILL_01
/
ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS ENABLE CONSTRAINT FK_TAS_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_04
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_03
/




ALTER TABLE FINAL7.FM_ACNT_CURR ENABLE CONSTRAINT FK_ACURR_01
/
ALTER TABLE FINAL7.FM_EXCHANGE_RATE ENABLE CONSTRAINT FK_CER_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_03
/
ALTER TABLE FINAL7.FM_SUB_CURR ENABLE CONSTRAINT FK_SCURR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_03
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_03
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_08
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_09
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_06
/
ALTER TABLE FINAL7.FT_PDC_OS ENABLE CONSTRAINT FK_POS_03
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_06
/
ALTER TABLE FINAL7.FT_SUPP_BILL_HEADER ENABLE CONSTRAINT FK_BILL_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_09
/


ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_01
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_02
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_01
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_06
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_01
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_03
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_03
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_01
/
ALTER TABLE FINAL7.FM_DEPARTMENT ENABLE CONSTRAINT FK_DEPT_01
/
ALTER TABLE FINAL7.FM_DEPARTMENT ENABLE CONSTRAINT FK_DEPT_01
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_05
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_05
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_02
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_02
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_02
/


ALTER TABLE FINAL7.FM_ACNT_COMP ENABLE CONSTRAINT FK_ACOMP_02
/
ALTER TABLE FINAL7.FM_ACNT_CURR ENABLE CONSTRAINT FK_ACURR_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK ENABLE CONSTRAINT FK_ALS_03
/
ALTER TABLE FINAL7.FM_COA_ACNT_FORMAT ENABLE CONSTRAINT FK_CAF_02
/
ALTER TABLE FINAL7.FM_COMPANY ENABLE CONSTRAINT FK_COMP_01
/
ALTER TABLE FINAL7.FM_CUSTOMER ENABLE CONSTRAINT FK_CUST_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_05
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_02
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_07
/
ALTER TABLE FINAL7.FM_MAIN_SUB ENABLE CONSTRAINT FK_MS_01
/
ALTER TABLE FINAL7.FM_SUPPLIER ENABLE CONSTRAINT FK_SUPP_01
/
ALTER TABLE FINAL7.FM_TRANSACTION ENABLE CONSTRAINT FK_TRAN_02
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_01
/
ALTER TABLE FINAL7.FT_CASH_RIMB ENABLE CONSTRAINT FK_RIMB_03
/
ALTER TABLE FINAL7.FT_CASH_RIMB ENABLE CONSTRAINT FK_RIMB_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_02
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_04
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_03
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_07
/
ALTER TABLE FINAL7.FM_ACNT_ANLY ENABLE CONSTRAINT FK_AANLY_02
/
ALTER TABLE FINAL7.FM_ACNT_ANLY ENABLE CONSTRAINT FK_AANLY_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK ENABLE CONSTRAINT FK_ALS_01
/
ALTER TABLE FINAL7.FM_ACNT_LINK ENABLE CONSTRAINT FK_ALS_02
/
ALTER TABLE FINAL7.FM_ACNT_LINK ENABLE CONSTRAINT FK_ALS_01
/
ALTER TABLE FINAL7.FM_ACNT_LINK ENABLE CONSTRAINT FK_ALS_02
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_04
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_06
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_04
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_01
/
ALTER TABLE FINAL7.FM_FOREX_LINK ENABLE CONSTRAINT FK_FL_06
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_02
/
ALTER TABLE FINAL7.FM_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_02
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_02
/
ALTER TABLE FINAL7.FM_PRV_MONTHLY_BUDGET ENABLE CONSTRAINT FK_MBUD_PRV_02
/
ALTER TABLE FINAL7.FM_TRANSACTION ENABLE CONSTRAINT FK_TRAN_01
/
ALTER TABLE FINAL7.FM_TRANSACTION ENABLE CONSTRAINT FK_TRAN_01
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_02
/
ALTER TABLE FINAL7.FM_YEARLY_BUDGET ENABLE CONSTRAINT FK_YBUD_02
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_01
/
ALTER TABLE FINAL7.FS_CUR_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_CUR_01
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_02
/
ALTER TABLE FINAL7.FS_PROC_DETAIL ENABLE CONSTRAINT FK_PDS_02
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_01
/
ALTER TABLE FINAL7.FS_PRV_ACNT_BAL ENABLE CONSTRAINT FK_ABAL_PRV_01
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_06
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_06
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_03
/
ALTER TABLE FINAL7.FT_CASH_DISB ENABLE CONSTRAINT FK_DISB_03
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_05
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_05
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_02
/
ALTER TABLE FINAL7.FT_PDC ENABLE CONSTRAINT FK_PDC_02
/
ALTER TABLE FINAL7.FT_PDC_OS ENABLE CONSTRAINT FK_POS_02
/
ALTER TABLE FINAL7.FT_PDC_OS ENABLE CONSTRAINT FK_POS_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_05
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_05
/





ALTER TABLE FINAL7.FM_SUB_COMP ENABLE CONSTRAINT FK_SCOMP_01
/
ALTER TABLE FINAL7.FM_SUB_CURR ENABLE CONSTRAINT FK_SCURR_01
/




ALTER TABLE FINAL7.FM_NARRATION_DEFN ENABLE CONSTRAINT FK_NARR_01
/
ALTER TABLE FINAL7.FM_TRAN_APPR_GROUP ENABLE CONSTRAINT FK_TAG_01
/
ALTER TABLE FINAL7.FM_TRAN_APPR_LEVEL ENABLE CONSTRAINT FK_ALVL_01
/
ALTER TABLE FINAL7.FM_TRAN_DOC_NO ENABLE CONSTRAINT FK_TDOC_01
/
ALTER TABLE FINAL7.FS_PROC_HEADER ENABLE CONSTRAINT FK_PHS_02
/
ALTER TABLE FINAL7.FS_PROC_HEADER ENABLE CONSTRAINT FK_PHS_03
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_05
/
ALTER TABLE FINAL7.FT_ALLOCATION_JV ENABLE CONSTRAINT FK_AJV_03
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE ENABLE CONSTRAINT FK_BCT_02
/
ALTER TABLE FINAL7.FT_BOUNCED_CHEQUE ENABLE CONSTRAINT FK_BCT_03
/
ALTER TABLE FINAL7.FT_CASH_SUMMARY ENABLE CONSTRAINT FK_CS_03
/
ALTER TABLE FINAL7.FT_CORRECTION_JV ENABLE CONSTRAINT FK_CJV_03
/
ALTER TABLE FINAL7.FT_CORRECTION_JV ENABLE CONSTRAINT FK_CJV_04
/
ALTER TABLE FINAL7.FT_CUR_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_CUR_04
/
ALTER TABLE FINAL7.FT_CUR_TRANS_HEADER ENABLE CONSTRAINT FK_TH_CUR_04
/
ALTER TABLE FINAL7.FT_FIXED_JV ENABLE CONSTRAINT FK_FJV_02
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_02
/
ALTER TABLE FINAL7.FT_OS ENABLE CONSTRAINT FK_OST_01
/
ALTER TABLE FINAL7.FT_PRV_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_PRV_04
/
ALTER TABLE FINAL7.FT_PRV_TRANS_HEADER ENABLE CONSTRAINT FK_TH_PRV_04
/
ALTER TABLE FINAL7.FT_REVERSAL_JV ENABLE CONSTRAINT FK_RJV_02
/
ALTER TABLE FINAL7.FT_REVERSAL_JV ENABLE CONSTRAINT FK_RJV_03
/
ALTER TABLE FINAL7.FT_SUPP_DETAIL ENABLE CONSTRAINT FK_SDET_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_02
/
ALTER TABLE FINAL7.FT_UNPOSTED_OS ENABLE CONSTRAINT FK_OST_UNP_01
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_DETAIL ENABLE CONSTRAINT FK_TD_UNP_04
/
ALTER TABLE FINAL7.FT_UNPOSTED_TRANS_HEADER ENABLE CONSTRAINT FK_TH_UNP_04
/

ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS ENABLE CONSTRAINT FK_TAS_02
/
ALTER TABLE FINAL7.FT_TRAN_APPR_STATUS ENABLE CONSTRAINT FK_TAS_02
/
ALTER TABLE FINAL7.FM_RATIO_VALUE ENABLE CONSTRAINT FK_RV_01
/
CREATE PUBLIC SYNONYM BUGS FOR BUGS;
/
CREATE PUBLIC SYNONYM BUGS_PARAMETER FOR BUGS_PARAMETER;
/
CREATE PUBLIC SYNONYM DUM_SUB_COMP FOR DUM_SUB_COMP;
/
CREATE PUBLIC SYNONYM FH_ACNT_ANLY_HIST FOR FH_ACNT_ANLY_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_ANLY_LEVEL_HIST FOR FH_ACNT_ANLY_LEVEL_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_CATG_HIST FOR FH_ACNT_CATG_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_COMP_HIST FOR FH_ACNT_COMP_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_CURR_HIST FOR FH_ACNT_CURR_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_LINK_HIST FOR FH_ACNT_LINK_HIST;
/
CREATE PUBLIC SYNONYM FH_ACNT_PERIOD_HIST FOR FH_ACNT_PERIOD_HIST;
/
CREATE PUBLIC SYNONYM FH_ACTIVITY_HIST FOR FH_ACTIVITY_HIST;
/
CREATE PUBLIC SYNONYM FH_ACTY_VALUE_HIST FOR FH_ACTY_VALUE_HIST;
/
CREATE PUBLIC SYNONYM FH_ANALYSIS_HIST FOR FH_ANALYSIS_HIST;
/
CREATE PUBLIC SYNONYM FH_ANLY_ACNT_FORMAT_HIST FOR FH_ANLY_ACNT_FORMAT_HIST;
/
CREATE PUBLIC SYNONYM FH_ANLY_FORMAT_HIST FOR FH_ANLY_FORMAT_HIST;
/
CREATE PUBLIC SYNONYM FH_ANLY_LEVEL_HIST FOR FH_ANLY_LEVEL_HIST;
/
CREATE PUBLIC SYNONYM FH_COA_ACNT_FORMAT_HIST FOR FH_COA_ACNT_FORMAT_HIST;
/
CREATE PUBLIC SYNONYM FH_COA_FORMAT_HIST FOR FH_COA_FORMAT_HIST;
/
CREATE PUBLIC SYNONYM FH_COA_LEVEL_HIST FOR FH_COA_LEVEL_HIST;
/
CREATE PUBLIC SYNONYM FH_COMPANY_HIST FOR FH_COMPANY_HIST;
/
CREATE PUBLIC SYNONYM FH_CURRENCY_HIST FOR FH_CURRENCY_HIST;
/
CREATE PUBLIC SYNONYM FH_CUSTOMER_HIST FOR FH_CUSTOMER_HIST;
/
CREATE PUBLIC SYNONYM FH_DEPARTMENT_HIST FOR FH_DEPARTMENT_HIST;
/
CREATE PUBLIC SYNONYM FH_DIVISION_HIST FOR FH_DIVISION_HIST;
/
CREATE PUBLIC SYNONYM FH_EXCHANGE_RATE_HIST FOR FH_EXCHANGE_RATE_HIST;
/
CREATE PUBLIC SYNONYM FH_MAIN_ACCOUNT_HIST FOR FH_MAIN_ACCOUNT_HIST;
/
CREATE PUBLIC SYNONYM FH_MAIN_SUB_HIST FOR FH_MAIN_SUB_HIST;
/
CREATE PUBLIC SYNONYM FH_NARRATION_DEFN_HIST FOR FH_NARRATION_DEFN_HIST;
/
CREATE PUBLIC SYNONYM FH_RATIO_VALUE_HIST FOR FH_RATIO_VALUE_HIST;
/
CREATE PUBLIC SYNONYM FH_SUB_ACCOUNT_HIST FOR FH_SUB_ACCOUNT_HIST;
/
CREATE PUBLIC SYNONYM FH_SUB_COMP_HIST FOR FH_SUB_COMP_HIST;
/
CREATE PUBLIC SYNONYM FH_SUB_CURR_HIST FOR FH_SUB_CURR_HIST;
/
CREATE PUBLIC SYNONYM FH_SUPPLIER_HIST FOR FH_SUPPLIER_HIST;
/
CREATE PUBLIC SYNONYM FH_TRANSACTION_HIST FOR FH_TRANSACTION_HIST;
/
CREATE PUBLIC SYNONYM FH_TRAN_APPR_GROUP_HIST FOR FH_TRAN_APPR_GROUP_HIST;
/
CREATE PUBLIC SYNONYM FH_TRAN_APPR_LEVEL_HIST FOR FH_TRAN_APPR_LEVEL_HIST;
/
CREATE PUBLIC SYNONYM FH_VALID_COMB_HIST FOR FH_VALID_COMB_HIST;
/
CREATE PUBLIC SYNONYM FM_ACCRUAL_EXPENSE FOR FM_ACCRUAL_EXPENSE;
/
CREATE PUBLIC SYNONYM FM_ACNT_ANLY FOR FM_ACNT_ANLY;
/
CREATE PUBLIC SYNONYM FM_ACNT_ANLY_LEVEL FOR FM_ACNT_ANLY_LEVEL;
/
CREATE PUBLIC SYNONYM FM_ACNT_CATG FOR FM_ACNT_CATG;
/
CREATE PUBLIC SYNONYM FM_ACNT_COMP FOR FM_ACNT_COMP;
/
CREATE PUBLIC SYNONYM FM_ACNT_COMP_DIVN FOR FM_ACNT_COMP_DIVN;
/
CREATE PUBLIC SYNONYM FM_ACNT_CURR FOR FM_ACNT_CURR;
/
CREATE PUBLIC SYNONYM FM_ACNT_LINK FOR FM_ACNT_LINK;
/
CREATE PUBLIC SYNONYM FM_ACNT_PERIOD FOR FM_ACNT_PERIOD;
/
CREATE PUBLIC SYNONYM FM_ACTIVITY FOR FM_ACTIVITY;
/
CREATE PUBLIC SYNONYM FM_ACTY_VALUE FOR FM_ACTY_VALUE;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS FOR FM_ANALYSIS;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS_1 FOR FM_ANALYSIS_1;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS_COMP FOR FM_ANALYSIS_COMP;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS_COMP_DIVN FOR FM_ANALYSIS_COMP_DIVN;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS_MAIN FOR FM_ANALYSIS_MAIN;
/
CREATE PUBLIC SYNONYM FM_ANALYSIS_SUB FOR FM_ANALYSIS_SUB;
/
CREATE PUBLIC SYNONYM FM_ANLY_ACNT_FORMAT FOR FM_ANLY_ACNT_FORMAT;
/
CREATE PUBLIC SYNONYM FM_ANLY_FORMAT FOR FM_ANLY_FORMAT;
/
CREATE PUBLIC SYNONYM FM_ANLY_LEVEL FOR FM_ANLY_LEVEL;
/
CREATE PUBLIC SYNONYM FM_COA_ACNT_FORMAT FOR FM_COA_ACNT_FORMAT;
/
CREATE PUBLIC SYNONYM FM_COA_FORMAT FOR FM_COA_FORMAT;
/
CREATE PUBLIC SYNONYM FM_COA_LEVEL FOR FM_COA_LEVEL;
/
CREATE PUBLIC SYNONYM FM_COA_LEVEL_BACK FOR FM_COA_LEVEL_BACK;
/
CREATE PUBLIC SYNONYM FM_COMPANY FOR FM_COMPANY;
/
CREATE PUBLIC SYNONYM FM_COMPANY_LOGO FOR FM_COMPANY_LOGO;
/
CREATE PUBLIC SYNONYM FM_COMP_ACNT_YEAR FOR FM_COMP_ACNT_YEAR;
/
CREATE PUBLIC SYNONYM FM_CON_FORMAT FOR FM_CON_FORMAT;
/
CREATE PUBLIC SYNONYM FM_CON_GROUPING FOR FM_CON_GROUPING;
/
CREATE PUBLIC SYNONYM FM_CURRENCY FOR FM_CURRENCY;
/
CREATE PUBLIC SYNONYM FM_CUSTOMER FOR FM_CUSTOMER;
/
CREATE PUBLIC SYNONYM FM_DEFAULT_ACNT_SETUP FOR FM_DEFAULT_ACNT_SETUP;
/
CREATE PUBLIC SYNONYM FM_DEPARTMENT FOR FM_DEPARTMENT;
/
CREATE PUBLIC SYNONYM FM_DIVISION FOR FM_DIVISION;
/
CREATE PUBLIC SYNONYM FM_EXCHANGE_RATE FOR FM_EXCHANGE_RATE;
/
CREATE PUBLIC SYNONYM FM_FOREX_LINK FOR FM_FOREX_LINK;
/
CREATE PUBLIC SYNONYM FM_MAIN_ACCOUNT FOR FM_MAIN_ACCOUNT;
/
CREATE PUBLIC SYNONYM FM_MAIN_SUB FOR FM_MAIN_SUB;
/
CREATE PUBLIC SYNONYM FM_MONTHLY_BUDGET FOR FM_MONTHLY_BUDGET;
/
CREATE PUBLIC SYNONYM FM_NARRATION_DEFN FOR FM_NARRATION_DEFN;
/
CREATE PUBLIC SYNONYM FM_PRV_MONTHLY_BUDGET FOR FM_PRV_MONTHLY_BUDGET;
/
CREATE PUBLIC SYNONYM FM_RATIO_VALUE FOR FM_RATIO_VALUE;
/
CREATE PUBLIC SYNONYM FM_SECURITY_CTL FOR FM_SECURITY_CTL;
/
CREATE PUBLIC SYNONYM FM_SUB_ACCOUNT FOR FM_SUB_ACCOUNT;
/
CREATE PUBLIC SYNONYM FM_SUB_COMP FOR FM_SUB_COMP;
/
CREATE PUBLIC SYNONYM FM_SUB_COMP_DIVN FOR FM_SUB_COMP_DIVN;
/
CREATE PUBLIC SYNONYM FM_SUB_CURR FOR FM_SUB_CURR;
/
CREATE PUBLIC SYNONYM FM_SUPPLIER FOR FM_SUPPLIER;
/
CREATE PUBLIC SYNONYM FM_TRANSACTION FOR FM_TRANSACTION;
/
CREATE PUBLIC SYNONYM FM_TRAN_APPR_GROUP FOR FM_TRAN_APPR_GROUP;
/
CREATE PUBLIC SYNONYM FM_TRAN_APPR_LEVEL FOR FM_TRAN_APPR_LEVEL;
/
CREATE PUBLIC SYNONYM FM_TRAN_DOC_NO FOR FM_TRAN_DOC_NO;
/
CREATE PUBLIC SYNONYM FM_VALID_COMB FOR FM_VALID_COMB;
/
CREATE PUBLIC SYNONYM FM_YEARLY_BUDGET FOR FM_YEARLY_BUDGET;
/
CREATE PUBLIC SYNONYM FP_DBTRG_INTERFACE FOR FP_DBTRG_INTERFACE;
/
CREATE PUBLIC SYNONYM FP_ERROR_MESSAGE FOR FP_ERROR_MESSAGE;
/
CREATE PUBLIC SYNONYM FP_PARAMETER FOR FP_PARAMETER;
/
CREATE PUBLIC SYNONYM FP_RATIO_HEAD_SETUP FOR FP_RATIO_HEAD_SETUP;
/
CREATE PUBLIC SYNONYM FP_RATIO_SETUP FOR FP_RATIO_SETUP;
/
CREATE PUBLIC SYNONYM FP_REP_INFO FOR FP_REP_INFO;
/
CREATE PUBLIC SYNONYM FS_CUR_ACNT_BAL FOR FS_CUR_ACNT_BAL;
/
CREATE PUBLIC SYNONYM FS_MATCH_OS FOR FS_MATCH_OS;
/
CREATE PUBLIC SYNONYM FS_PDC_TRAIL FOR FS_PDC_TRAIL;
/
CREATE PUBLIC SYNONYM FS_PROC_DETAIL FOR FS_PROC_DETAIL;
/
CREATE PUBLIC SYNONYM FS_PROC_HEADER FOR FS_PROC_HEADER;
/
CREATE PUBLIC SYNONYM FS_PRV_ACNT_BAL FOR FS_PRV_ACNT_BAL;
/
CREATE PUBLIC SYNONYM FS_PURGE_AUDIT_TRAIL FOR FS_PURGE_AUDIT_TRAIL;
/
CREATE PUBLIC SYNONYM FS_SYS_PROC_DETAIL FOR FS_SYS_PROC_DETAIL;
/
CREATE PUBLIC SYNONYM FS_SYS_PROC_HEADER FOR FS_SYS_PROC_HEADER;
/
CREATE PUBLIC SYNONYM FS_UNMATCH_OS FOR FS_UNMATCH_OS;
/
CREATE PUBLIC SYNONYM FT_AJV_DETAIL FOR FT_AJV_DETAIL;
/
CREATE PUBLIC SYNONYM FT_ALLOCATION_JV FOR FT_ALLOCATION_JV;
/
CREATE PUBLIC SYNONYM FT_BOUNCED_CHEQUE FOR FT_BOUNCED_CHEQUE;
/
CREATE PUBLIC SYNONYM FT_CASH_DISB FOR FT_CASH_DISB;
/
CREATE PUBLIC SYNONYM FT_CASH_RIMB FOR FT_CASH_RIMB;
/
CREATE PUBLIC SYNONYM FT_CASH_SUMMARY FOR FT_CASH_SUMMARY;
/
CREATE PUBLIC SYNONYM FT_CJV_DETAIL FOR FT_CJV_DETAIL;
/
CREATE PUBLIC SYNONYM FT_CORRECTION_JV FOR FT_CORRECTION_JV;
/
CREATE PUBLIC SYNONYM FT_CUR_TRANS_DETAIL FOR FT_CUR_TRANS_DETAIL;
/
CREATE PUBLIC SYNONYM FT_CUR_TRANS_HEADER FOR FT_CUR_TRANS_HEADER;
/
CREATE PUBLIC SYNONYM FT_FIXED_JV FOR FT_FIXED_JV;
/
CREATE PUBLIC SYNONYM FT_OS FOR FT_OS;
/
CREATE PUBLIC SYNONYM FT_OS_TEMP FOR FT_OS_TEMP;
/
CREATE PUBLIC SYNONYM FT_PAY_GEN_DETAIL FOR FT_PAY_GEN_DETAIL;
/
CREATE PUBLIC SYNONYM FT_PAY_GEN_EXPENSE FOR FT_PAY_GEN_EXPENSE;
/
CREATE PUBLIC SYNONYM FT_PAY_GEN_HEADER FOR FT_PAY_GEN_HEADER;
/
CREATE PUBLIC SYNONYM FT_PDC FOR FT_PDC;
/
CREATE PUBLIC SYNONYM FT_PDC_OS FOR FT_PDC_OS;
/
CREATE PUBLIC SYNONYM FT_PRV_TRANS_DETAIL FOR FT_PRV_TRANS_DETAIL;
/
CREATE PUBLIC SYNONYM FT_PRV_TRANS_HEADER FOR FT_PRV_TRANS_HEADER;
/
CREATE PUBLIC SYNONYM FT_RECEIPT FOR FT_RECEIPT;
/
CREATE PUBLIC SYNONYM FT_REVERSAL_JV FOR FT_REVERSAL_JV;
/
CREATE PUBLIC SYNONYM FT_SUPP_BILL_HEADER FOR FT_SUPP_BILL_HEADER;
/
CREATE PUBLIC SYNONYM FT_SUPP_DETAIL FOR FT_SUPP_DETAIL;
/
CREATE PUBLIC SYNONYM FT_TEMP_TRANS_DETAIL FOR FT_TEMP_TRANS_DETAIL;
/
CREATE PUBLIC SYNONYM FT_TEMP_TRANS_HEADER FOR FT_TEMP_TRANS_HEADER;
/
CREATE PUBLIC SYNONYM FT_TRAN_APPR_STATUS FOR FT_TRAN_APPR_STATUS;
/
CREATE PUBLIC SYNONYM FT_UNPOSTED_OS FOR FT_UNPOSTED_OS;
/
CREATE PUBLIC SYNONYM FT_UNPOSTED_TRANS_DETAIL FOR FT_UNPOSTED_TRANS_DETAIL;
/
CREATE PUBLIC SYNONYM FT_UNPOSTED_TRANS_HEADER FOR FT_UNPOSTED_TRANS_HEADER;
/
CREATE PUBLIC SYNONYM FW_BALANCE FOR FW_BALANCE;
/
CREATE PUBLIC SYNONYM FW_BUDGET FOR FW_BUDGET;
/
CREATE PUBLIC SYNONYM FW_COA_LEVEL_DET FOR FW_COA_LEVEL_DET;
/
CREATE PUBLIC SYNONYM FW_LEVEL FOR FW_LEVEL;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL FOR FW_LEVEL_BAL;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL_1 FOR FW_LEVEL_BAL_1;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL_CG FOR FW_LEVEL_BAL_CG;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL_REP FOR FW_LEVEL_BAL_REP;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL_REP_CG FOR FW_LEVEL_BAL_REP_CG;
/
CREATE PUBLIC SYNONYM FW_LEVEL_BAL_TEMP FOR FW_LEVEL_BAL_TEMP;
/
CREATE PUBLIC SYNONYM FW_LEVEL_SEQUENCE FOR FW_LEVEL_SEQUENCE;
/
CREATE PUBLIC SYNONYM FW_MAIN_DEPT_SUM_REP FOR FW_MAIN_DEPT_SUM_REP;
/
CREATE PUBLIC SYNONYM FW_MAIN_LEVEL_BAL FOR FW_MAIN_LEVEL_BAL;
/
CREATE PUBLIC SYNONYM FW_MAIN_LEVEL_SUM FOR FW_MAIN_LEVEL_SUM;
/
CREATE PUBLIC SYNONYM FW_MAIN_LEVEL_SUM_REP FOR FW_MAIN_LEVEL_SUM_REP;
/
CREATE PUBLIC SYNONYM FW_MAIN_LEVEL_SUM_TEMP FOR FW_MAIN_LEVEL_SUM_TEMP;
/
CREATE PUBLIC SYNONYM FW_MAIN_YEAR_SUM FOR FW_MAIN_YEAR_SUM;
/
CREATE PUBLIC SYNONYM FW_MAIN_YEAR_SUM_REP FOR FW_MAIN_YEAR_SUM_REP;
/
CREATE PUBLIC SYNONYM FW_MAIN_YEAR_SUM_TEMP FOR FW_MAIN_YEAR_SUM_TEMP;
/
CREATE PUBLIC SYNONYM FW_TEMP_OS FOR FW_TEMP_OS;
/
CREATE PUBLIC SYNONYM KM_SA_BR_CUST2CHAR FOR KM_SA_BR_CUST2CHAR;
/
CREATE PUBLIC SYNONYM KT_LAST_PAYMENT FOR KT_LAST_PAYMENT;
/
CREATE PUBLIC SYNONYM KT_LAST_PAYMENT_05 FOR KT_LAST_PAYMENT_05;
/
CREATE PUBLIC SYNONYM MENU_LINE_HELP FOR MENU_LINE_HELP;
/
CREATE PUBLIC SYNONYM MENU_MAIL_CREATE FOR MENU_MAIL_CREATE;
/
CREATE PUBLIC SYNONYM MENU_MAIL_USER FOR MENU_MAIL_USER;
/
CREATE PUBLIC SYNONYM MENU_MENUS FOR MENU_MENUS;
/
CREATE PUBLIC SYNONYM MENU_PAGE_HELP FOR MENU_PAGE_HELP;
/
CREATE PUBLIC SYNONYM MENU_PARAMETER FOR MENU_PARAMETER;
/
CREATE PUBLIC SYNONYM MENU_PRINTER FOR MENU_PRINTER;
/
CREATE PUBLIC SYNONYM MENU_PRINTER_FORMAT FOR MENU_PRINTER_FORMAT;
/
CREATE PUBLIC SYNONYM MENU_REP FOR MENU_REP;
/
CREATE PUBLIC SYNONYM MENU_REPORT_PRINTER FOR MENU_REPORT_PRINTER;
/
CREATE PUBLIC SYNONYM MENU_REPORT_USER_PRINTER FOR MENU_REPORT_USER_PRINTER;
/
CREATE PUBLIC SYNONYM MENU_REP_DETL FOR MENU_REP_DETL;
/
CREATE PUBLIC SYNONYM MENU_REP_INFO FOR MENU_REP_INFO;
/
CREATE PUBLIC SYNONYM MENU_SCR_PASS FOR MENU_SCR_PASS;
/
CREATE PUBLIC SYNONYM MENU_USER FOR MENU_USER;
/
CREATE PUBLIC SYNONYM MENU_USER_1 FOR MENU_USER_1;
/
CREATE PUBLIC SYNONYM MENU_USER_COMP FOR MENU_USER_COMP;
/
CREATE PUBLIC SYNONYM MENU_USER_COMP_DIVN FOR MENU_USER_COMP_DIVN;
/
CREATE PUBLIC SYNONYM MENU_USER_GROUP FOR MENU_USER_GROUP;
/
CREATE PUBLIC SYNONYM MENU_USER_MENUS FOR MENU_USER_MENUS;
/
CREATE PUBLIC SYNONYM MENU_USER_SUPERVISOR FOR MENU_USER_SUPERVISOR;
/
CREATE PUBLIC SYNONYM MONTH0_RECORDS FOR MONTH0_RECORDS;
/
CREATE PUBLIC SYNONYM MUNA1 FOR MUNA1;
/
CREATE PUBLIC SYNONYM OM_COMP_PARAMETER FOR OM_COMP_PARAMETER;
/
CREATE PUBLIC SYNONYM OM_GUI_PARAMETER FOR OM_GUI_PARAMETER;
/
CREATE PUBLIC SYNONYM OM_PARAMETER FOR OM_PARAMETER;
/
CREATE PUBLIC SYNONYM OP_ERROR_MESSAGE FOR OP_ERROR_MESSAGE;
/
CREATE PUBLIC SYNONYM OP_REP_INFO FOR OP_REP_INFO;
/
CREATE PUBLIC SYNONYM OT_JOB_EXPENSE FOR OT_JOB_EXPENSE;
/
CREATE PUBLIC SYNONYM OT_JOB_HEAD FOR OT_JOB_HEAD;
/
CREATE PUBLIC SYNONYM PLAN_TABLE FOR PLAN_TABLE;
/
CREATE PUBLIC SYNONYM PP_BOILERPLATE_TEXT FOR PP_BOILERPLATE_TEXT;
/
CREATE PUBLIC SYNONYM PP_ITEM_HINT FOR PP_ITEM_HINT;
/
CREATE PUBLIC SYNONYM PP_REPORT_BP_COLUMNS FOR PP_REPORT_BP_COLUMNS;
/
CREATE PUBLIC SYNONYM PP_REPORT_BP_HEAD FOR PP_REPORT_BP_HEAD;
/
CREATE PUBLIC SYNONYM PP_REPORT_BP_OTHER_VALUES FOR PP_REPORT_BP_OTHER_VALUES;
/
CREATE PUBLIC SYNONYM PP_REPORT_BP_PARAMETERS FOR PP_REPORT_BP_PARAMETERS;
/
CREATE PUBLIC SYNONYM PP_SYSTEM FOR PP_SYSTEM;
/
CREATE PUBLIC SYNONYM PP_SYSTEM_1 FOR PP_SYSTEM_1;
/
CREATE PUBLIC SYNONYM PP_WINDOW_TITLE FOR PP_WINDOW_TITLE;
/
CREATE PUBLIC SYNONYM RPMS_INDEX FOR RPMS_INDEX;
/
CREATE PUBLIC SYNONYM RPMS_INDEX_1 FOR RPMS_INDEX_1;
/
CREATE PUBLIC SYNONYM TEMP FOR TEMP;
/
